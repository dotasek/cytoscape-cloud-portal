{"version":3,"sources":["assets/images/github.svg","assets/images/ucsd-logo.svg","assets/images/dna.svg","assets/images/idea.svg","assets/images/disconnected.svg","components/SearchPanel/index.jsx","components/InputList/index.jsx","components/LoadingPanel/index.jsx","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/Ndex/OpenInButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/CytoscapeViewer/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/index.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/SourceCard.jsx","components/TopPage/ErrorCard.jsx","components/TopPage/SourcePanel.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/index.js","api/ndex.js","api/apiConstants.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","index.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","withStyles","theme","Object","objectSpread","button","marginLeft","props","classes","react_default","a","createElement","className","Tooltip_default","title","placement","Button_default","variant","size","color","onClick","event","searchActions","clearAll","fullWidth","Refresh_default","MAX_DESCRIPTION_LENGTH","GENE_CARDS_URL","InputList","state","handleClick","id","console","log","tag","curState","_this","undefined","setState","defineProperty","getListItem","geneEntry","description","summary","length","substring","Fragment","ListItem_default","alignItems","key","_id","e","ListItemAvatar_default","Avatar_default","matched","ListItemText_default","primary","symbol","secondary","Typography_default","component","inline","name","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","target","Launch_default","ExpandLess_default","ExpandMore_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","map","dbName","pathways","Array","isArray","pwEntry","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","_this2","this","results","search","geneList","genes","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","push","err","return","React","Component","display","marginTop","backgroundColor","unmatched","paddingLeft","spacing","unit","LoadingPanel","message","CircularProgress_default","geneSymbol","setSelectedGenes","getChip","isValid","Chip_default","chip","avatar","label","root","justifyContent","margin","handleClear","InputPanel","components_SearchPanel","components_GeneList","Empty","alt","src","logo","index_es","buttonIcon","height","uiState","disabled","isCytoscapeRunning","toolbar","background","grow","flexGrow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","width","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","others","objectWithoutProperties","Toolbar_default","Menu_default","noWrap","network","networkName","Search_default","InputBase_default","placeholder","input","Ndex_OpenInButton","cyInstance","CytoscapeViewer","useEffect","on","networkActions","deselectAll","warn","selected","data","selectNode","selectEdge","cyjs","selectedGenes","style","background-color","selector","elements","react_cytoscape_default","layout","stylesheet","cy","NetworkViewer","Ndex_NetworkToolbar","isFetching","components_LoadingPanel","Results_CytoscapeViewer","TableBrowser","node","selectedNode","NetworkView","react_split_es","sizes","direction","gutterSize","Ndex_NetworkViewer","Results_TableBrowser","assign","ranges","sortBy","prop","_React$useState","useState","_React$useState2","slicedToArray","setValues","TextField_default","select","onChange","option","MenuItem_default","handleErrors","res","subtitle","networkAvatar","deepOrange","menuItem","& $primary, & $icon","menuText","padding","plot","hits","sourceUUID","jobId","handleFetch","networkUUID","fetch","mode","catch","Error","then","running","uiStateActions","setCytoscapeStatus","error","checkCytoscapeConnection","networkFetchStarted","Ndex_Sorter","MenuList_default","networkEntry","percentOverlap","nodes","edges","val","Ndex","Ndex_NetworkList","Ndex_NetworkView","getTabs","sources","tabs","source","Tab_default","sourceName","getTabContent","index","Results_Ndex","_useState","_useState2","setValue","searchResults","Results_Empty","Tabs_default","newValue","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","open","AppBar_default","classNames","appBar","appBarShift","disableGutters","hide","aria-haspopup","openLink","HELP_URL","Help_default","fontSize","GITHUB_URL","github","headerLogo","url","window","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","withTheme","SettingsPanel","handleDrawerClose","isOpen","_this$props","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","text","MoveToInbox_default","Mail_default","Settings_default","flexShrink","drawerHeader","mixins","content","contentShift","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","preventDefault","history","components_AppShell","components_InputPanel","components_Results","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","networkFetchSucceeded","networkFetchFailed","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","withRouter","connect","dispatch","bindActionCreators","sourceActions","components_HomePanel","EXAMPLES","flex","iconButton","divider","anchorEl","query","pathParam","Boolean","handleExample","exampleIdx","repaceDelimiters","replace","Paper_default","elevation","currentTarget","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","sourceNames","geneListString","split","CY_URL","NDEX_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","IMAGES","dna","idea","randomImage","idx","Math","floor","random","card","minWidth","maxWidth","minHeight","media","objectFit","Card_default","CardActionArea_default","CardMedia_default","CardContent_default","gutterBottom","version","status","CardActions_default","handleReload","location","reload","disconnected","SourcePanel","TopPage_ErrorCard","sourceEntry","TopPage_SourceCard","uuid","StartPanel","params","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_SourcePanel","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","queryGenes","queryList","searchStatus","handleActions","_handleActions","payload","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","network_handleActions","sourceId","convertCx2cyjs","cx","selectedEdge","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","toConsumableArray","source_handleActions","isFetchingSource","rootReducer","combineReducers","fetchNetwork","fetchUrl","method","headers","Content-Type","searchGenes","searchUrl","MYGENE_BASE_URL","getSource","SEARCH_BASE_URL","response","ok","checkStatus","getResult","postQuery","sourceList","queryObject","header","Headers","body","JSON","stringify","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","action","sourceJson","_ref","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","call","cySearchApi","sent","join","all","myGeneApi","get","filterGenes","put","type","uniqueGeneMap","t0","_marked2","statusJson","progress","sleep","ms","Promise","resolve","setTimeout","finished","statusRes","resultRes","resultJson","_context3","abrupt","_marked3","json","_context4","api","_marked4","_context5","_marked5","resultList","Map","len","notfound","set","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","render","es","BrowserRouter","basename","process","Switch","Route","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kiFC6CzBC,uBAnCA,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACfD,EADe,CAElBG,OAAQ,CACNC,WAAY,YAgCDL,CA5BK,SAAAM,GAAS,IACnBC,EAAYD,EAAZC,QAOR,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAASI,MAAM,iBAAiBC,UAAU,UACxCN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEE,UAAWJ,EAAQH,OACnBY,QAAQ,YACRC,KAAK,QACLC,MAAM,YACNC,QAdc,SAAAC,GACtBd,EAAMe,cAAcC,YAcZC,WAAS,GAETf,EAAAC,EAAAC,cAACc,EAAAf,EAAD,yWCbNgB,GAAyB,IAEzBC,GAAiB,sDA4BjBC,8MACJC,MAAQ,KAIRC,YAAc,SAAAC,GACZC,QAAQC,IAAI,cAAeF,GAC3B,IAAMG,EAAM,MAAQH,EACdI,EAAWC,EAAKP,MAAMK,QAEXG,IAAbF,GAAsC,MAAZA,EAC5BC,EAAKE,SAAS,SAAAT,GAAK,OAAA1B,OAAAoC,EAAA,EAAApC,CAAA,GAAQ+B,GAAM,KAEjCE,EAAKE,SAAS,SAAAT,GAAK,OAAA1B,OAAAoC,EAAA,EAAApC,CAAA,GAAQ+B,GAAOC,QAyCtCK,YAAc,SAACC,EAAWjC,GACxB,IAAIkC,EAAcD,EAAUE,QAI5B,OAHID,EAAYE,OAASlB,KACvBgB,EAAcA,EAAYG,UAAU,EAAGnB,GAAyB,GAAK,OAGrEjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,SAAP,KACErC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CACEsC,WAAW,aACXC,IAAKR,EAAUS,IACf7C,QAAM,EACNe,QAAS,SAAA+B,GAAC,OAAIf,EAAKN,YAAYW,EAAUS,OAEzCzC,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACED,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAQE,UAAWJ,EAAQ8C,SAA3B,MAEF7C,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CACE8C,QAASf,EAAUgB,OACnBC,UACEjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,SAAP,KACErC,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEkD,UAAU,OACVhD,UAAWJ,EAAQqD,OACnB1C,MAAM,eAELsB,EAAUqB,MAEbrD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAQ,WAAWyB,MAIrCjC,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CAAyBE,UAAWJ,EAAQwD,UAC1CvD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEwD,aAAW,oBACXC,KAAMxC,GAAiBc,EAAUgB,OACjCW,OAAO,UAEP3D,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAASI,MAAM,oBAAoBC,UAAU,UAC3CN,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,SAIL0B,EAAKP,MAAM,MAAQY,EAAUS,KAAOzC,EAAAC,EAAAC,cAAC2D,GAAA5D,EAAD,MAAiBD,EAAAC,EAAAC,cAAC4D,GAAA7D,EAAD,OAEvD0B,EAAKoC,gBAAgB/B,EAAWjC,OAKvCgE,gBAAkB,SAACC,EAAOjE,GACxB,IAAMkE,EAAUD,EAAMC,QAEhBC,EAAiBxE,OAAOyE,KAAKF,GAInC,OAFA1C,QAAQC,IAAI,QAASyC,GAGnBjE,EAAAC,EAAAC,cAACkE,GAAAnE,EAAD,CACEoE,GAAI1C,EAAKP,MAAMkD,GAAmBN,EAAMvB,MACxC8B,QAAQ,OACRC,eAAa,GAEbxE,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,CAAMkD,UAAU,MAAMuB,gBAAc,GACjCR,EAAeS,IAAI,SAAAC,GAClB,IAAMC,EAAWZ,EAAQW,GAEzB,OAAKE,MAAMC,QAAQF,GAYjB7E,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,SAAP,KACGwC,EAASF,IAAI,SAAAK,GAAO,OACnBhF,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAUL,QAAM,EAACO,UAAWJ,EAAQkF,QAClCjF,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,KACED,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,OAEFD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CACEmF,OAAK,EACLrC,QAAS6B,EAAS,KAAOI,EAAQ1D,GACjC2B,UACEjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,SAAP,KACErC,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEkD,UAAU,OACVhD,UAAWJ,EAAQqD,OACnB1C,MAAM,eAELsE,EAAQ3B,aA1BrBrD,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAUL,QAAM,EAACO,UAAWJ,EAAQkF,QAClCjF,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,KACED,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,OAEFD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAcmF,OAAK,EAACrC,QAAS8B,EAASxB,eAqCtDgC,YAAc,SAACC,EAAUvF,GACvB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,CAASO,QAAQ,WACjBR,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYE,UAAWJ,EAAQM,MAAOG,QAAQ,SAC3C,cAAgB8E,EAASnD,QAE5BnC,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,KACGqF,EAASX,IAAI,SAAAX,GAAK,OAAIrC,EAAK6D,qBAAqBxB,EAAOjE,UAMhEyF,qBAAuB,SAAAxD,GACrB,OACEhC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAUsC,WAAW,aAAaC,IAAKR,GACrChC,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,KACED,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,OAEFD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAcmF,OAAK,EAACrC,QAASf,2HAtK1B,IAAA0D,EAAAC,KACPpE,QAAQC,IAAI,UAAWmE,KAAKvE,OADrB,IAECrB,EAAY4F,KAAK7F,MAAjBC,QAEF6F,EAAUD,KAAK7F,MAAM+F,OAAOD,QAElC,IAAKA,EACH,OAAO5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAGxB,IAAM2F,EAAWF,EAAQG,MACnBT,EAAWM,EAAQN,SAEzB,IAAKQ,EACH,OAAO9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAGxB,IAAM6F,EAAS,GAjBRC,GAAA,EAAAC,GAAA,EAAAC,OAAAvE,EAAA,IAkBP,QAAAwE,EAAAC,EAAkBP,EAASE,SAA3BM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqC,KAA5BS,EAA4BN,EAAAM,MACnCV,EAAOW,KAAKD,IAnBP,MAAAE,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAqBP,OACEnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAQ,MAApB,iBACAR,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAQ,SACjB,kBAAoBwF,EAAO7D,QAG9BnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,KAAO+F,EAAOrB,IAAI,SAAAX,GAAK,OAAI0B,EAAK3D,YAAYiC,EAAOjE,OAGhC,IAApBuF,EAASnD,OAAewD,KAAKN,YAAYC,EAAUvF,GAAW,aAjD/C+G,IAAMC,WA6LxBzC,GAAqB,SAAAhD,GAAE,MAAI,MAAQA,OAE1B9B,qBAzNA,SAAAC,GAAK,MAAK,CACvB2D,OAAQ,CACN4D,QAAS,UAEX3G,MAAO,CACLR,WAAY,QACZoH,UAAW,SAEbhF,YAAa,CACXpC,WAAY,MACZoH,UAAW,SAEbpE,QAAS,CACPqE,gBAAiB,QAEnBC,UAAW,CACTD,gBAAiB,OAEnB3D,SAAU,CACR6D,YAAa,OAEfnC,OAAQ,CACNmC,YAAkC,EAArB3H,EAAM4H,QAAQC,QAmMhB9H,CAAmB2B,8BCnOnBoG,GAZM,SAAAzH,GAAK,OACxBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYE,UAAU,gBAAgBK,QAAS,KAAME,MAAM,WACxDZ,EAAMO,OAETL,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYE,UAAU,kBAAkBK,QAAQ,YAAYE,MAAM,WAC/DZ,EAAM0H,SAETxH,EAAAC,EAAAC,cAACuH,GAAAxH,EAAD,CAAkBQ,KAAM,qCCKtBY,GAAc,SAACqG,EAAY5H,GAC/BA,EAAMe,cAAc8G,iBAAiB,CAACD,KAmClCE,GAAU,SAAClB,EAAOmB,EAAS9H,EAASD,GACxC,OAAI+H,EAEA7H,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,CACEE,UAAWJ,EAAQgI,KACnBC,OAAQhI,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,UACRgI,MAAOvB,EAAM1D,OACbrC,QAAS,kBAAMU,GAAYqF,EAAM1D,OAAQlD,IACzCU,QAAQ,WACRE,MAAM,UACN8B,IAAKkE,EAAM1D,SAKbhD,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,CACE+H,OAAQhI,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,UACRgI,MAAO,YAAcvB,EACrB/F,QAASU,GACTmB,IAAKkE,KAUElH,wBA3EA,SAAAC,GAAK,MAAK,CACvByI,KAAM,CACJlB,QAAS,OACTmB,eAAgB,UAElBJ,KAAM,CACJK,OAAQ3I,EAAM4H,QAAQC,QAqEX9H,CAzDE,SAAAM,GAAS,IAChBC,EAAYD,EAAZC,QAEF6F,EAAU9F,EAAM+F,OAAOD,QAE7B,IAAKA,EACH,OAAO5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAGxB,IAAM2F,EAAWF,EAAQG,MACRH,EAAQN,SAEzB,IAAKQ,EACH,OAAO9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAGxB,IAAM6F,EAAS,GAhBSC,GAAA,EAAAC,GAAA,EAAAC,OAAAvE,EAAA,IAiBxB,QAAAwE,EAAAC,EAAkBP,EAASE,SAA3BM,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqC,KAA5BS,EAA4BN,EAAAM,MACnCV,EAAOW,KAAKD,IAlBU,MAAAE,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,GAqBxB,OACEnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBQ,QAAS,SAAAC,GAAK,OA1BjC,SAACA,GACnBW,QAAQC,IAAI,kBAAmBZ,EAAM+C,OAAO+C,OAyBW2B,CAAYzH,KAC9DoF,EAAOrB,IAAI,SAAA+B,GAAK,OAAIkB,GAAQlB,GAAO,EAAM3G,EAASD,QC3B1CwI,GATI,SAAAxI,GAAK,OACtBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACqI,EAAgBzI,GACjBE,EAAAC,EAAAC,cAACsI,GAAa1I,+FCQL2I,WAbD,SAAA3I,GAAK,OACjBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKwI,IAAI,YAAYC,IAAKC,KAAMzI,UAAU,cAC1CH,EAAAC,EAAAC,cAAC2I,GAAA,EAAD,CAAYrI,QAAQ,MAApB,0BACAR,EAAAC,EAAAC,cAAC2I,GAAA,EAAD,CAAYrI,QAAQ,aAApB,oKCWShB,wBAtBA,SAAAC,GAAK,MAAK,CACvBqJ,WAAY,CACVC,OAAQ,QACR3B,YAAa,WAmBF5H,CAfM,SAAAM,GAAS,IACpBC,EAAqBD,EAArBC,QAASiJ,EAAYlJ,EAAZkJ,QAEjB,OACEhJ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,QAAQ,YACRE,MAAM,UACNuI,UAAWD,EAAQE,oBAHrB,UAMElJ,EAAAC,EAAAC,cAAA,OAAKwI,IAAI,iBAAiBC,IAAKC,KAAMzI,UAAWJ,EAAQ+I,gBC8F/CtJ,wBAzGA,SAAAC,GAAK,MAAK,CACvB0J,QAAS,CACPC,WAAY,WAEdC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACV1J,YAAa,GACb2J,YAAa,IAEfnJ,MAAMX,OAAAoC,EAAA,EAAApC,CAAA,CACJsH,QAAS,QACRvH,EAAMgK,YAAYC,GAAG,MAAQ,CAC5B1C,QAAS,UAGbnB,OAAOnG,OAAAoC,EAAA,EAAApC,CAAA,CACLiK,SAAU,WACVC,aAAcnK,EAAMoK,MAAMD,aAC1B1C,gBAAiB4C,gBAAKrK,EAAMsK,QAAQC,OAAOC,MAAO,KAClDC,UAAW,CACThD,gBAAiB4C,gBAAKrK,EAAMsK,QAAQC,OAAOC,MAAO,MAEpDpK,WAAY,EACZsK,MAAO,QACN1K,EAAMgK,YAAYC,GAAG,MAAQ,CAC5B7J,WAAYJ,EAAM4H,QAAQC,KAC1B6C,MAAO,SAGXC,WAAY,CACVD,MAA4B,EAArB1K,EAAM4H,QAAQC,KACrByB,OAAQ,OACRY,SAAU,WACVU,cAAe,OACfrD,QAAS,OACTzE,WAAY,SACZ4F,eAAgB,UAElBmC,UAAW,CACT5J,MAAO,UACPyJ,MAAO,QAETI,WAAW7K,OAAAoC,EAAA,EAAApC,CAAA,CACT8K,WAAY/K,EAAM4H,QAAQC,KAC1BmD,aAAchL,EAAM4H,QAAQC,KAC5BoD,cAAejL,EAAM4H,QAAQC,KAC7BF,YAAkC,GAArB3H,EAAM4H,QAAQC,KAC3BqD,WAAYlL,EAAMmL,YAAYC,OAAO,SACrCV,MAAO,QACN1K,EAAMgK,YAAYC,GAAG,MAAQ,CAC5BS,MAAO,IACPW,UAAW,CACTX,MAAO,OAIbrB,WAAY,CACVC,OAAQ,QACR3B,YAAa,WA6CF5H,CAzCQ,SAAAM,GAAS,IACtBC,EAAuBD,EAAvBC,QAAYgL,EADUrL,OAAAsL,GAAA,EAAAtL,CACCI,EADD,aAE9B,OACEE,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CAASE,UAAWJ,EAAQoJ,SAC1BnJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEE,UAAWJ,EAAQwJ,WACnB7I,MAAM,UACN+C,aAAW,eAEXzD,EAAAC,EAAAC,cAACgL,GAAAjL,EAAD,OAEFD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEE,UAAWJ,EAAQM,MACnBG,QAAQ,YACRE,MAAM,UACNyK,QAAM,GAELrL,EAAMsL,QAAQC,aAEjBrL,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQsJ,OACxBrJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQ8F,QACtB7F,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQqK,YACtBpK,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,OAEFD,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,CACEuL,YAAY,eACZzL,QAAS,CACPmI,KAAMnI,EAAQuK,UACdmB,MAAO1L,EAAQwK,eAIrBvK,EAAAC,EAAAC,cAACwL,GAAiBX,2BCzGpBY,WAAa,MAwFFC,GA9ES,SAAA9L,GAEtB+L,oBAAU,WACR,QAAmBjK,IAAf+J,IAA2C,OAAfA,GAmChC,OAhCApK,QAAQC,IAAI,gDAAiDmK,IAE7DA,GAAWG,GAAG,MAAO,SAASlL,GAC5B,IACiBA,EAAM+C,SACNgI,KACb7L,EAAMiM,eAAeC,cACrBzK,QAAQC,IAAI,aAEd,MAAOkB,GACPnB,QAAQ0K,KAAKvJ,MAIjBiJ,GAAWG,GAAG,MAAO,OAAQ,WAC3B,IACE,IAAMI,EAAWvG,KAAKwG,OACtBrM,EAAMiM,eAAeK,WAAWF,GAChC,MAAOxJ,GACPnB,QAAQ0K,KAAKvJ,MAIjBiJ,GAAWG,GAAG,MAAO,OAAQ,WAC3B,IACE,IAAMI,EAAWvG,KAAKwG,OACtBrM,EAAMiM,eAAeM,WAAWH,GAChC,MAAOxJ,GACPnB,QAAQ0K,KAAKvJ,MAIV,WACLnB,QAAQC,IAAI,aAEb,IAEH,IAAM8K,EAAOxM,EAAMsL,QAAQA,QACrBmB,EAAgBzM,EAAM+F,OAAO0G,cAEnC,GAAa,OAATD,QAA0B1K,IAAT0K,EACnB,OAAO,KAIT,GADA/K,QAAQC,IAAI,qBAAsB8K,EAAMC,GACX,IAAzBA,EAAcpK,SAChBZ,QAAQC,IAAI,wBAAyB+K,GACrCD,EAAKE,MAAM7F,KAAK,CACd6F,MAAO,CACLC,mBAAoB,OAEtBC,SAAU,uBAGM9K,IAAf+J,IAA2C,OAAfA,IAAqB,CAElD,IAAMtI,EAAOkJ,EAAc,GAC3BZ,GAAWgB,SAAS,gBAAiBtJ,EAAO,MAAMmJ,MAAM,mBAAoB,OAIhF,OADAjL,QAAQC,IAAI,qBAAsB8K,EAAKE,OAErCxM,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,CACE0M,SAAUL,EAAKK,SACfE,OAAQ,CAAExJ,KAAM,UAChBmJ,MAAO,CAAErC,MAAO,OAAQpB,OAAQ,QAChC+D,WAAYR,EAAKE,MACjBO,GAAI,SAAAA,GAAE,OAAKpB,GAAaoB,MCnEfC,GAdO,SAAAlN,GAAK,OACzBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAC+M,GAAmBnN,GAEnBA,EAAMsL,QAAQ8B,WACblN,EAAAC,EAAAC,cAACiN,GAAD,CACE9M,MAAM,uBAGRL,EAAAC,EAAAC,cAACkN,GAAoBtN,KCeZuN,GApBM,SAAAvN,GACnB,IAAMsL,EAAUtL,EAAMsL,QAEtB,GAAgB,OAAZA,EACF,OAAOpL,EAAAC,EAAAC,cAAA,YAGT,IAAMoN,EAAOlC,EAAQmC,aACrB,OAAa,OAATD,QAA0B1L,IAAT0L,EACZtN,EAAAC,EAAAC,cAAA,YAKPF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2I,GAAA,EAAD,CAAYrI,QAAQ,MAAM8M,EAAKjK,QCJtBmK,GAPK,SAAA1N,GAAK,OACvBE,EAAAC,EAAAC,cAACuN,GAAA,EAAD,CAAOC,MAAO,CAAC,GAAI,IAAKC,UAAU,WAAWC,WAAY,GACvD5N,EAAAC,EAAAC,cAAC2N,GAAkB/N,GACnBE,EAAAC,EAAAC,cAAC4N,GAADpO,OAAAqO,OAAA,CAAc5N,UAAU,iBAAoBL,wFCT1CkO,GAAS,CACb,CACEtH,MAAO,OACPuB,MAAO,QAET,CACEvB,MAAO,WACPuB,MAAO,mBAET,CACEvB,MAAO,UACPuB,MAAO,cAmGIzI,wBA/FA,SAAAC,GAAK,MAAK,CACvB0J,QAAS,CACPC,WAAY,WAEdC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACV1J,YAAa,GACb2J,YAAa,IAEfnJ,MAAMX,OAAAoC,EAAA,EAAApC,CAAA,CACJsH,QAAS,QACRvH,EAAMgK,YAAYC,GAAG,MAAQ,CAC5B1C,QAAS,UAGbiH,OAAQ,CACN9D,MAAO,QAETtE,OAAOnG,OAAAoC,EAAA,EAAApC,CAAA,CACLiK,SAAU,WACVC,aAAcnK,EAAMoK,MAAMD,aAC1B1C,gBAAiB4C,gBAAKrK,EAAMsK,QAAQC,OAAOC,MAAO,KAClDC,UAAW,CACThD,gBAAiB4C,gBAAKrK,EAAMsK,QAAQC,OAAOC,MAAO,MAEpDpK,WAAY,EACZsK,MAAO,QACN1K,EAAMgK,YAAYC,GAAG,MAAQ,CAC5B7J,WAAYJ,EAAM4H,QAAQC,KAC1B6C,MAAO,SAGXC,WAAY,CACVD,MAA4B,EAArB1K,EAAM4H,QAAQC,KACrByB,OAAQ,OACRY,SAAU,WACVU,cAAe,OACfrD,QAAS,OACTzE,WAAY,SACZ4F,eAAgB,UAElBmC,UAAW,CACT5J,MAAO,UACPyJ,MAAO,QAETI,WAAW7K,OAAAoC,EAAA,EAAApC,CAAA,CACT8K,WAAY/K,EAAM4H,QAAQC,KAC1BmD,aAAchL,EAAM4H,QAAQC,KAC5BoD,cAAejL,EAAM4H,QAAQC,KAC7BF,YAAkC,GAArB3H,EAAM4H,QAAQC,KAC3BqD,WAAYlL,EAAMmL,YAAYC,OAAO,SACrCV,MAAO,QACN1K,EAAMgK,YAAYC,GAAG,MAAQ,CAC5BS,MAAO,IACPW,UAAW,CACTX,MAAO,SAsCA3K,CAhCA,SAAAM,GAAS,IAODoO,EANbnO,EAAYD,EAAZC,QADcoO,EAGMrH,IAAMsH,SAAS,CACzCH,OAAQ,SAJYI,EAAA3O,OAAA4O,GAAA,EAAA5O,CAAAyO,EAAA,GAGfnI,EAHeqI,EAAA,GAGPE,EAHOF,EAAA,GAWtB,OACErO,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CAASE,UAAWJ,EAAQoJ,SAC1BnJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQsJ,OAExBrJ,EAAAC,EAAAC,cAACsO,GAAAvO,EAAD,CACEwO,QAAM,EACNxG,MAAM,WACNvB,MAAOV,EAAOiI,OACdS,UAZeR,EAYQ,SAZA,SAAAtN,GAC3B2N,EAAU7O,OAAAC,EAAA,EAAAD,CAAA,GAAKsG,EAANtG,OAAAoC,EAAA,EAAApC,CAAA,GAAewO,EAAOtN,EAAM+C,OAAO+C,WAYxCvG,UAAWJ,EAAQkO,QAElBD,GAAOrJ,IAAI,SAAAgK,GAAM,OAChB3O,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAUuC,IAAKmM,EAAOjI,MAAOA,MAAOiI,EAAOjI,OACxCiI,EAAO1G,aClCd4G,GAAe,SAAAC,GAEnB,OADAvN,QAAQC,IAAI,YAAasN,QACblN,IAARkN,GAwFStP,wBAnJA,SAAAC,GAAK,MAAK,CACvB2D,OAAQ,CACN4D,QAAS,UAEX+H,SAAU,CACRlP,WAAY,MACZoH,UAAW,SAEb+H,cAAe,CACb5G,OAAQ,GACR1H,MAAO,OACPwG,gBAAiB+H,KAAW,MAE9BC,SAAU,CACRnG,OAAQ,MACR+B,UAAW,CACT5D,gBAAiB,wBACjBiI,sBAAuB,CACrBzO,MAAOjB,EAAMsK,QAAQC,OAAOC,SAIlCmF,SAAU,CACRtE,UAAW,CACTqE,sBAAuB,CACrBzO,MAAOjB,EAAMsK,QAAQC,OAAOC,SAIlChH,UAAW,CACTkH,MAAO,OACPnD,QAAS,OACTzE,WAAY,SACZ8M,QAAS,SAEXC,KAAM,CACJnF,MAAO,MACPf,WAAY,UA8GD5J,CAjFK,SAAAM,GAAS,IACnBC,EAA8BD,EAA9BC,QAASwP,EAAqBzP,EAArByP,KAAMC,EAAe1P,EAAf0P,WAEjBlO,EAAKxB,EAAM+F,OAAOD,QAAQ6J,MAC1BC,EAAc,SAACC,EAAatE,IA3BH,SAAAvL,GAC/B8P,MAHoB,gCAGC,CAAEC,KAAM,YAC1BC,MAAM,SAAApN,GACL,MAAMqN,MAAMrN,KAEbsN,KAAK,SAAAlB,GAAG,OAAID,GAAaC,KACzBkB,KAAK,SAAAC,GACJnQ,EAAMoQ,eAAeC,oBAAmB,KAEzCL,MAAM,SAAAM,GACLtQ,EAAMoQ,eAAeC,oBAAmB,KAkB1CE,CAAyBvQ,GACzBA,EAAMiM,eAAeuE,oBAAoB,CACvChP,KACAkO,aACAG,cACAtE,iBAyDJ,OAAKkE,EAKHvP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACqQ,GAAD,MACAvQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACsQ,GAAAvQ,EAAD,KAAWsP,EAAK5K,IAAI,SAAAX,GAAK,OA7DX,SAACyM,EAAc1Q,GAAY,IAE3CkC,EAKEwO,EALFxO,YACA0N,EAIEc,EAJFd,YACAe,EAGED,EAHFC,eACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,MAGF,OACE5Q,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CACEE,UAAWJ,EAAQmP,SACnB3M,WAAW,aACXC,IAAKmN,EACLhP,QAAS,SAAAkQ,GAAG,OAAInB,EAAYC,EAAa1N,KAEzCjC,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,KACED,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAQE,UAAWJ,EAAQiP,eAA3B,MAEFhP,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CACEE,UAAWJ,EAAQqP,SACnBrM,QAASd,EACTgB,UACEjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,SAAP,KACErC,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEkD,UAAU,OACVhD,UAAWJ,EAAQqD,OACnB1C,MAAM,eAEL,UAAYiQ,EAAQ,YAAcC,GAErC5Q,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAQ,WACjB,SAAWmP,MAKpB3P,EAAAC,EAAAC,cAACoD,GAAArD,EAAD,CAAyBE,UAAWJ,EAAQkD,WAC1CjD,EAAAC,EAAAC,cAAA,OACEsM,MAAO,CACLpD,WAAY,aACZ1I,MAAO,QACPqI,OAAQ,MACRoB,MAAOuG,EAAiB,MAG1B1Q,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAQ,MAAMkQ,EAAiB,QAelB3O,CAAYiC,EAAOjE,QAP7CC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BCpIX2Q,GAPF,SAAAhR,GAAK,OAChBE,EAAAC,EAAAC,cAACuN,GAAA,EAAD,CAAOC,MAAO,CAAC,GAAI,IAAKE,WAAY,EAAGzN,UAAU,aAC/CH,EAAAC,EAAAC,cAAC6Q,GAAgBjR,GACjBE,EAAAC,EAAAC,cAAC8Q,GAAgBlR,KC2BfmR,GAAU,SAAAC,GACd,GAAgB,OAAZA,QAAgCtP,IAAZsP,EACtB,OAAO,KAGT,IAAMC,EAAOD,EAAQvM,IAAI,SAAAyM,GAAM,OAC7BpR,EAAAC,EAAAC,cAACmR,GAAApR,EAAD,CAAKuC,IAAK4O,EAAO5B,WAAYvH,MAAOmJ,EAAOE,eAI7C,OADA/P,QAAQC,IAAI,WAAY2P,GACjBA,GAGHI,GAAgB,SAACC,EAAON,EAASpR,GACrC,GAAgB,OAAZoR,QAAgCtP,IAAZsP,EACtB,OAAO,KAGT,IAAME,EAASF,EAAQM,GACvB,IAAKJ,EACH,OAAO,KAPsC,IAUvCxL,EAAwBwL,EAAxBxL,QAAS4J,EAAe4B,EAAf5B,WACjB,OAAOxP,EAAAC,EAAAC,cAACuR,GAAD/R,OAAAqO,OAAA,CAAMwB,KAAM3J,EAAS4J,WAAYA,GAAgB1P,KAG3CN,wBAhEA,SAAAC,GAAK,MAAK,CACvB0R,KAAM,CACJhH,MAAO,OACPjD,gBAAiB,aA6DN1H,CAzDC,SAAAM,GAAS,IAAA4R,EACGtD,mBAAS,GADZuD,EAAAjS,OAAA4O,GAAA,EAAA5O,CAAAgS,EAAA,GAChBhL,EADgBiL,EAAA,GACTC,EADSD,EAAA,GAOH5G,GAAWjL,EAAvBC,QAPeL,OAAAsL,GAAA,EAAAtL,CAOQI,EAPR,cASjB+R,EAAgB/R,EAAM+F,OAAOgM,cAKnC,OAHAtQ,QAAQC,IAAI,kBAAmBqQ,GAGT,OAAlBA,EACK7R,EAAAC,EAAAC,cAAC4R,GAAD,MAIP9R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC6R,GAAA9R,EAAD,CAAMyG,MAAOA,EAAOgI,SAlBL,SAAC9N,EAAOoR,GAC3BJ,EAASI,KAkBFf,GAAQY,EAAcX,UAExBK,GAAc7K,EAAOmL,EAAcX,QAASnG,kGCa/CkH,8MACJC,WAAa,WACXvQ,EAAK7B,MAAMoQ,eAAeiC,iBACvBxQ,EAAK7B,MAAMkJ,QAAQoJ,yFAIf,IACCrS,EAAY4F,KAAK7F,MAAjBC,QACFsS,EAAO1M,KAAK7F,MAAMkJ,QAAQoJ,eAEhC,OACEpS,EAAAC,EAAAC,cAACoS,GAAArS,EAAD,CACE0J,SAAS,QACTjJ,MAAM,UACNP,UAAWoS,KAAWxS,EAAQyS,OAAT9S,OAAAoC,EAAA,EAAApC,CAAA,GAClBK,EAAQ0S,YAAcJ,KAGzBrS,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,CAASyS,gBAAiBL,GACxBrS,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEE,UAAWoS,KAAWxS,EAAQwJ,WAAY8I,GAAQtS,EAAQ4S,MAC1DjS,MAAM,UACN+C,aAAW,OACX9C,QAASgF,KAAKuM,YAEdlS,EAAAC,EAAAC,cAACgL,GAAAjL,EAAD,OAEFD,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQsJ,MACtBrJ,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAQ,KAAKE,MAAM,WAA/B,wBAGAV,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAQ,SAApB,uDAIFR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACE2S,gBAAc,OACdlS,MAAM,UACNC,QAAS,kBAAMkS,GAASC,MAExB9S,EAAAC,EAAAC,cAAC6S,GAAA9S,EAAD,CAAU+S,SAAS,WAErBhT,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACE2S,gBAAc,OACdlS,MAAM,UACNC,QAAS,kBAAMkS,GAASI,MAExBjT,EAAAC,EAAAC,cAAA,OACEwI,IAAI,cACJC,IAAKuK,KACL/S,UAAWJ,EAAQoT,wBApDZrM,IAAMC,WA+DvB+L,GAAW,6BACXG,GAAa,sDAEbJ,GAAW,SAAAO,GACfC,OAAOhB,KAAKe,EAAK,WAOJ5T,wBA/GA,SAAAC,GAAK,MAAK,CACvByI,KAAM,CACJoB,SAAU,GAEZD,KAAM,CACJC,SAAU,GAEZqJ,KAAM,CACJ3L,QAAS,QAEXuC,WAAY,CACV1J,WAAY,GACZ2J,YAAa,IAEfgJ,OAAQ,CACN7H,WAAYlL,EAAMmL,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDyI,OAAQ7T,EAAMmL,YAAY0I,OAAOC,MACjCC,SAAU/T,EAAMmL,YAAY4I,SAASC,iBAGzChB,YAAa,CACXtI,MAAK,eAAAuJ,OAvBW,IAuBX,OACL7T,WAxBgB,IAyBhB8K,WAAYlL,EAAMmL,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDyI,OAAQ7T,EAAMmL,YAAY0I,OAAOK,QACjCH,SAAU/T,EAAMmL,YAAY4I,SAASI,kBAGzChL,KAAM,CACJG,OAAQ,QACRS,YAAa,SAEf2J,WAAY,CACVpK,OAAQ,WA8EsB,CAAE8K,WAAW,GAAhCrU,CAAwCyS,kIC/FjD6B,sNACJC,kBAAoB,WAClB,IAAMC,EAASrS,EAAK7B,MAAMkJ,QAAQoJ,eAClCzQ,EAAK7B,MAAMoQ,eAAeiC,iBAAiB6B,4EAGpC,IAAAC,EACoBtO,KAAK7F,MAAxBC,EADDkU,EACClU,QAASN,EADVwU,EACUxU,MACXuU,EAASrO,KAAK7F,MAAMkJ,QAAQoJ,eAElC,OACEpS,EAAAC,EAAAC,cAACgU,GAAAjU,EAAD,CACEE,UAAWJ,EAAQoU,OACnB3T,QAAQ,aACR4T,OAAO,OACP/B,KAAM2B,EACNjU,QAAS,CACPsU,MAAOtU,EAAQuU,cAGjBtU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAYU,QAASgF,KAAKoO,mBACH,QAApBtU,EAAMkO,UACL3N,EAAAC,EAAAC,cAACqU,GAAAtU,EAAD,MAEAD,EAAAC,EAAAC,cAACsU,GAAAvU,EAAD,QAIND,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,MACAD,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,KACG,CAAC,OAAQ,WAAY,eAAgB,WAAW0E,IAC/C,SAAC8P,EAAMjD,GAAP,OACExR,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAUL,QAAM,EAAC4C,IAAKiS,GACpBzU,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,KACGuR,EAAQ,IAAM,EAAIxR,EAAAC,EAAAC,cAACwU,GAAAzU,EAAD,MAAgBD,EAAAC,EAAAC,cAACyU,GAAA1U,EAAD,OAErCD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAc8C,QAAS0R,QAK/BzU,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,MACAD,EAAAC,EAAAC,cAACuE,EAAAxE,EAAD,KACG,CAAC,eAAgB,OAAQ,MAAM0E,IAAI,SAAC8P,EAAMjD,GAAP,OAClCxR,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAUL,QAAM,EAAC4C,IAAKiS,GACpBzU,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,KACGuR,EAAQ,IAAM,EAAIxR,EAAAC,EAAAC,cAAC0U,GAAA3U,EAAD,MAAkBD,EAAAC,EAAAC,cAAC6S,GAAA9S,EAAD,OAEvCD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAc8C,QAAS0R,gBAjDT3N,IAAMC,YA+DnBvH,wBAzEA,SAAAC,GAAK,MAAK,CACvB0U,OAAQ,CACNhK,MAJgB,IAKhB0K,WAAY,GAEdP,YAAa,CACXnK,MARgB,OA2Ec,CAAE0J,WAAW,GAAhCrU,CAAwCsU,yBCjCxCtU,wBAlDA,SAAAC,GAAK,MAAK,CACvByI,KAAM,CACJlB,QAAS,OACT+B,OAAQ,WAEV+L,aAAapV,OAAAC,EAAA,EAAAD,CAAA,CACXsH,QAAS,OACTqI,QAAS,QACT9M,WAAY,UACT9C,EAAMsV,OAAO5L,QAJN,CAKVhB,eAAgB,aAElB6M,QAAS,CACP1L,SAAU,EACVqB,WAAYlL,EAAMmL,YAAYC,OAAO,SAAU,CAC7CyI,OAAQ7T,EAAMmL,YAAY0I,OAAOC,MACjCC,SAAU/T,EAAMmL,YAAY4I,SAASC,gBAEvC5T,YApBgB,KAsBlBoV,aAAc,CACZtK,WAAYlL,EAAMmL,YAAYC,OAAO,SAAU,CAC7CyI,OAAQ7T,EAAMmL,YAAY0I,OAAOK,QACjCH,SAAU/T,EAAMmL,YAAY4I,SAASI,iBAEvC/T,WAAY,KAyBkB,CAAEgU,WAAW,GAAhCrU,CArBE,SAAAM,GAAS,IAChBC,EAAuBD,EAAvBC,QAAYgL,EADIrL,OAAAsL,GAAA,EAAAtL,CACOI,EADP,aAGlBuS,EAAOvS,EAAMkJ,QAAQoJ,eAE3B,OACEpS,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQmI,MACtBlI,EAAAC,EAAAC,cAACgV,GAAAjV,EAAD,MACAD,EAAAC,EAAAC,cAACiV,GAAapK,GACd/K,EAAAC,EAAAC,cAACkV,GAAkBrK,GAEnB/K,EAAAC,EAAAC,cAAA,OACEC,UAAWoS,KAAWxS,EAAQiV,QAATtV,OAAAoC,EAAA,EAAApC,CAAA,GAClBK,EAAQkV,aAAe5C,MAG3BvS,EAAMuV,YCREC,GAvCG,SAAAxV,GAChB+L,oBAAU,WAGR,GAA6B,OAAzB/L,EAAM+F,OAAOD,QAAkB,CACjC,IAAM6J,EAAQ3P,EAAM+F,OAAOD,QAAQ6J,MACnClO,QAAQC,IAAI,gBACZ1B,EAAMe,cAAc0U,mBAAmB,CAAE9F,UAI3C,OADA4D,OAAOmC,WAAaC,EACb,WACLlU,QAAQC,IAAI,oBAEb,IAEH,IAAMiU,EAAoB,SAAA/S,GACxBA,EAAEgT,iBACFnU,QAAQC,IAAI,gCACZ1B,EAAMe,cAAcC,WACpBhB,EAAM6V,QAAQhP,KAAK,MAKrB,OAFApF,QAAQC,IAAI,6DAER1B,EAAM+F,OAAOqH,WACRlN,EAAAC,EAAAC,cAACiN,GAAD,CAAc9M,MAAM,2BAI3BL,EAAAC,EAAAC,cAAC0V,GAAa9V,EACZE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC2V,GAADnW,OAAAqO,OAAA,CAAY5N,UAAU,SAAYL,IAClCE,EAAAC,EAAAC,cAAC4V,GAADpW,OAAAqO,OAAA,CAAS5N,UAAU,WAAcL,2BCvC5BiW,GAAY,YACZC,GAAc,cAEdC,GAAiB,iBACjBC,GAAmB,mBACnBC,GAAgB,gBAEhBC,GAAuB,uBACvBC,GAAyB,yBACzBC,GAAsB,sBAEtBC,GAAY,YAEZC,GAAqB,qBAErBC,GAAWC,aAAaX,IACxBY,GAAaD,aAAaV,IAG1BY,GAAgBF,aAAaT,IAC7BY,GAAkBH,aAAaR,IAC/BY,GAAeJ,aAAaP,IAG5BZ,GAAqBmB,aAAaN,IAClCW,GAAuBL,aAAaL,IACpCW,GAAoBN,aAAaJ,IAEjCxV,GAAW4V,aAAaH,IAExB5O,GAAmB+O,aAAaF,ICxBhCS,GAAoB,oBACpB9E,GAAkBuE,aAAaO,IAE/BC,GAAuB,uBACvB/G,GAAqBuG,aAAaQ,ICVlCC,GAAwB,wBACxBC,GAA0B,0BAC1BC,GAAuB,uBAEvBC,GAAc,cACdC,GAAc,cACdC,GAAe,eAEflH,GAAsBoG,aAAaS,IACnCM,GAAwBf,aAAaU,IACrCM,GAAqBhB,aAAaW,IAGlCjL,GAAasK,aAAaY,IAC1BjL,GAAaqK,aAAaa,IAC1BvL,GAAc0K,aAAac,ICf3BG,GAAsB,sBACtBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoBpB,aAAaiB,IACjCI,GAAsBrB,aAAakB,IACnCI,GAAmBtB,aAAamB,ICuB9BI,oBACbC,YAnBF,SAAyB9W,GACvB,MAAO,CACLyE,OAAQzE,EAAMyE,OACdmD,QAAS5H,EAAM4H,QACfoC,QAAShK,EAAMgK,QACfgG,OAAQhQ,EAAMgQ,SAIlB,SAA4B+G,GAC1B,MAAO,CACLtX,cAAeuX,6BAAmBvX,EAAesX,GACjDjI,eAAgBkI,6BAAmBlI,EAAgBiI,GACnDpM,eAAgBqM,6BAAmBrM,EAAgBoM,GACnDE,cAAeD,6BAAmBC,EAAeF,KAKnDD,CArBoB,SAAApY,GAAK,OAAIE,EAAAC,EAAAC,cAACoY,GAAcxY,wDCExCyY,GAAW,CAAC,sBAAuB,kBAAmB,kBAqJ7C/Y,wBAnJA,CACb0I,KAAM,CACJmH,QAAS,UACTrI,QAAS,OACTzE,WAAY,UAEdkJ,MAAO,CACL5L,WAAY,EACZ2Y,KAAM,GAERC,WAAY,CACVpJ,QAAS,IAEXqJ,QAAS,CACPvO,MAAO,EACPpB,OAAQ,GACRX,OAAQ,IAmIG5I,CA/HO,SAAAM,GAAS,IACrBC,EAAYD,EAAZC,QADqB2R,EAGHtD,mBAAS,CAAEuK,SAAU,KAAMC,MAAO,KAH/BjH,EAAAjS,OAAA4O,GAAA,EAAA5O,CAAAgS,EAAA,GAGtBtQ,EAHsBuQ,EAAA,GAGf9P,EAHe8P,EAAA,GAK7B9F,oBAAU,WACR,GAA6B,OAAzB/L,EAAM+F,OAAOD,QAAkB,CACjC,IAAM6J,EAAQ3P,EAAM+F,OAAOD,QAAQ6J,MAE7BoJ,EAAY/Y,EAClByB,QAAQC,IAAI,mBAAoBiO,EAAOoJ,GACvC/Y,EAAM6V,QAAQhP,KAAd,IAAA+M,OAAuBjE,IAEzB,OAAO,WACLlO,QAAQC,IAAI,oBAEb,IAEH,IAkBqB6B,EAlBfgP,EAAOyG,QAAQ1X,EAAMuX,UAUrBI,EAAgB,SAAAC,GACpBnX,EAASnC,OAAAC,EAAA,EAAAD,CAAA,GACJI,EADG,CAEN8Y,MAAOL,GAASS,GAChBL,SAAU,SAgCRM,EAAmB,SAAAL,GAEvB,OAAOA,EAAMM,QAAQ,IAAK,MAG5B,OACElZ,EAAAC,EAAAC,cAACiZ,GAAAlZ,EAAD,CAAOE,UAAW,kBAAmBiZ,UAAW,GAC9CpZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEE,UAAWJ,EAAQ0Y,WACnBhV,aAAW,OACX9C,QAvDW,SAAAC,GACjBiB,EAASnC,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAN,CAAauX,SAAU/X,EAAMyY,mBAwD/BrZ,EAAAC,EAAAC,cAACgL,GAAAjL,EAAD,OAEFD,EAAAC,EAAAC,cAACoZ,GAAArZ,EAAD,CACE0Y,SAAUvX,EAAMuX,SAChBY,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAEdpH,KAAMA,EACNsH,QAlEY,WAClB9X,EAASnC,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAN,CAAauX,SAAU,UAmEzB3Y,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAUU,QAAS,kBAAMoY,EAAc,KAAvC,eACA/Y,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAUU,QAAS,kBAAMoY,EAAc,KAAvC,eACA/Y,EAAAC,EAAAC,cAAC0O,GAAA3O,EAAD,CAAUU,QAAS,kBAAMoY,EAAc,KAAvC,iBAGJ/Y,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,CACEE,UAAWJ,EAAQ0L,MACnBD,YAAY,kDACZkD,UAhEerL,EAgEQ,QAhEA,SAAAzC,GAC3BiB,EAASnC,OAAAC,EAAA,EAAAD,CAAA,GACJI,EADGJ,OAAAoC,EAAA,EAAApC,CAAA,GAEL2D,EAAOzC,EAAM+C,OAAO+C,WA8DnBA,MAAOtF,EAAMwX,QAEf5Y,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACEE,UAAWJ,EAAQ0Y,WACnBhV,aAAW,SACX9C,QA3De,SAAAC,GACnB,IAAMmF,EAAQ3E,EAAMwX,MACd1H,EAAUpR,EAAMsR,OAAOF,QAE7B,GAAqB,IAAjBnL,EAAM5D,QAA4B,OAAZ+O,GAAuC,IAAnBA,EAAQ/O,OAAtD,CAKA,IAAMyX,EAAc1I,EAAQvM,IAAI,SAAAyM,GAAM,OAAIA,EAAO/N,OAE3CwW,EAAiBZ,EAAiBlT,GAClCD,EAAW+T,EAAeC,MAAM,KACtCha,EAAMe,cAAc4V,SAASoD,GAC7B/Z,EAAMe,cAAc+V,cAAc,CAAE9Q,WAAU8T,mBA+C1C5Z,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,OAEFD,EAAAC,EAAAC,cAACqF,EAAAtF,EAAD,CAASE,UAAWJ,EAAQ2Y,UAC5B1Y,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CACES,MAAM,UACNP,UAAWJ,EAAQ0Y,WACnBhV,aAAW,aACX9C,QAxEc,WAClBkB,EAASnC,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAN,CAAawX,MAAO,QAyExB5Y,EAAAC,EAAAC,cAACc,EAAAf,EAAD,mDCpHF8Z,GAAS,yBACTC,GAAW,2BACXC,GACJ,kFAEIpH,GAAW,SAAAO,GACfC,OAAOhB,KAAKe,EAAK,WAGJ8G,GAnCA,SAAApa,GAAK,OAClBE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAChBH,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAQ,aAApB,sCAGAR,EAAAC,EAAAC,cAAA,OACEwI,IAAI,YACJC,IAAKwR,KACLha,UAAU,cACVQ,QAAS,kBAAMkS,GAASmH,OAE1Bha,EAAAC,EAAAC,cAAA,OACEwI,IAAI,iBACJC,IAAKyR,KACLja,UAAU,cACVQ,QAAS,kBAAMkS,GAASkH,OAE1B/Z,EAAAC,EAAAC,cAAA,OACEwI,IAAI,YACJC,IAAK0R,KACLla,UAAU,cACVQ,QAAS,kBAAMkS,GAASoH,uJCJxBK,GAAS,CAACH,KAAUC,KAAQG,KAAKC,MACjCC,GAAc,WAClB,IAAMC,EAAMC,KAAKC,MAAsB,EAAhBD,KAAKE,UAC5B,OAAOP,GAAOI,IAqCDlb,wBApDA,CACbsb,KAAM,CACJC,SAAU,IACVC,SAAU,IACVC,UAAW,IACXpb,WAAY,OAEdqb,MAAO,CACLC,UAAW,UA4CA3b,CAlCI,SAAAM,GAAS,IAClBC,EAAoBD,EAApBC,QAASqR,EAAWtR,EAAXsR,OAEjB,OACEpR,EAAAC,EAAAC,cAACkb,GAAAnb,EAAD,CAAME,UAAWJ,EAAQ+a,MACvB9a,EAAAC,EAAAC,cAACmb,GAAApb,EAAD,KACED,EAAAC,EAAAC,cAACob,GAAArb,EAAD,CACEkD,UAAU,MACVuF,IAAI,wBACJvI,UAAWJ,EAAQmb,MACnBnS,OAAO,MACPJ,IAAK8R,OAEPza,EAAAC,EAAAC,cAACqb,GAAAtb,EAAD,KACED,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYub,cAAY,EAAChb,QAAQ,KAAK2C,UAAU,MAC7CiO,EAAO/N,MAEVrD,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYub,cAAY,EAAChb,QAAQ,cAC9B,KAAO4Q,EAAOqK,QAAU,KAE3Bzb,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYkD,UAAU,KAAKiO,EAAOnP,aAClCjC,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYO,QAAS,MAAO,WAAa4Q,EAAOsK,UAGpD1b,EAAAC,EAAAC,cAACyb,GAAA1b,EAAD,8BCIA2b,GAAe,WACnBvI,OAAOwI,SAASC,QAAO,IAOVtc,wBAzDA,CACbsb,KAAM,CACJC,SAAU,IACVC,SAAU,IACV3L,QAAS,OAEX6L,MAAO,CACLC,UAAW,QAkDA3b,CA9CG,SAAAM,GAAS,IACjBC,EAAYD,EAAZC,QAER,OACEC,EAAAC,EAAAC,cAACkb,GAAAnb,EAAD,CAAME,UAAWJ,EAAQ+a,MACvB9a,EAAAC,EAAAC,cAACmb,GAAApb,EAAD,KACED,EAAAC,EAAAC,cAACob,GAAArb,EAAD,CACEkD,UAAU,MACVuF,IAAI,uBACJvI,UAAWJ,EAAQmb,MACnBnS,OAAO,MACPJ,IAAKoT,KACL1b,MAAM,yBAERL,EAAAC,EAAAC,cAACqb,GAAAtb,EAAD,KACED,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYub,cAAY,EAAChb,QAAQ,KAAK2C,UAAU,KAAKzC,MAAO,SAA5D,6BAGAV,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAYkD,UAAU,IAAIzC,MAAO,SAAjC,4GAMJV,EAAAC,EAAAC,cAACyb,GAAA1b,EAAD,KACED,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACEO,QAAS,WACTC,KAAK,QACLC,MAAM,UACNC,QAASib,IAJX,cCnBOI,GAxBK,SAAAlc,GAClB,QAAqB8B,IAAjB9B,EAAMsR,SAAyBtR,EAAMsR,OAAOF,QAC9C,OAAO,KAGT,IAAMA,EAAUpR,EAAMsR,OAAOF,QAE7B,OAA2B,OAAvBpR,EAAMsR,OAAOhB,MAEbpQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAC+b,GAAD,OAMJjc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZ+Q,EAAQvM,IAAI,SAAAuX,GAAW,OACtBlc,EAAAC,EAAAC,cAACic,GAAD,CAAY3Z,IAAK0Z,EAAYE,KAAMhL,OAAQ8K,6BCkCpCG,GA7CI,SAAAvc,GAwBjB,OAvBA+L,oBAAU,WAGR,IAAMyQ,EAASC,KAAYC,MAAM1c,EAAM+b,SAAShW,QAChDtE,QAAQC,IAAI,0BAA2B8a,GAEvC,IAAMvW,EAAQuW,EAAOvW,MAErB,QAAanE,IAAVmE,EAAqB,CACtB,IAAMD,EAAWC,EAAM+T,MAAM,KAE7Bha,EAAMe,cAAc4V,SAAS1Q,GAC7BxE,QAAQC,IAAI,gCAAiCsE,GAC7ChG,EAAMe,cAAc+V,cAAc,CAAE9Q,aAKtC,OADAhG,EAAMuY,cAAcP,oBACb,WACLvW,QAAQC,IAAI,oBAEb,IAEC1B,EAAM+F,OAAO4W,YAEbzc,EAAAC,EAAAC,cAACiN,GAAD,CACE9M,MAAO,4BACPmH,QAAS,mBAMbxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwI,IAAK+T,KAAMhU,IAAI,UAElD1I,EAAAC,EAAAC,cAACyc,GAAkB7c,GACnBE,EAAAC,EAAAC,cAAC0c,GAAgB9c,GACjBE,EAAAC,EAAAC,cAAC2c,GAAD,QCzCSC,GANC,SAAAhd,GAAK,OACnBE,EAAAC,EAAAC,cAAC0V,GAAa9V,EACZE,EAAAC,EAAAC,cAAC6c,GAAejd,KCwBLmY,oBACbC,YAnBF,SAAyB9W,GACvB,MAAO,CACLyE,OAAQzE,EAAMyE,OACdmD,QAAS5H,EAAM4H,QACfoC,QAAShK,EAAMgK,QACfgG,OAAQhQ,EAAMgQ,SAIlB,SAA4B+G,GAC1B,MAAO,CACLtX,cAAeuX,6BAAmBvX,EAAesX,GACjDjI,eAAgBkI,6BAAmBlI,EAAgBiI,GACnDpM,eAAgBqM,6BAAmBrM,EAAgBoM,GACnDE,cAAeD,6BAAmBC,EAAeF,KAKnDD,CArBuB,SAAApY,GAAK,OAAIE,EAAAC,EAAAC,cAAC8c,GAAYld,MCPzCmd,GAAM,SAAAnd,GAAK,OAAIE,EAAAC,EAAAC,cAACgd,GAAqBpd,IACrCqd,GAAM,SAAArd,GAAK,OAAIE,EAAAC,EAAAC,cAACkd,GAAkBtd,ICOpBgZ,QACW,cAA7BzF,OAAOwI,SAASwB,UAEe,UAA7BhK,OAAOwI,SAASwB,UAEhBhK,OAAOwI,SAASwB,SAASC,MACvB,qFCJAC,GAAc,CAClBd,aAAa,EACbvP,YAAY,EACZsQ,WAAY,GACZC,UAAW,GACX7X,QAAS,KACT8X,aAAc,KACd7L,cAAe,KACftF,cAAe,IAuDF1G,GAnDA8X,cAAaC,GAAA,GAAAle,OAAAoC,EAAA,EAAApC,CAAAke,GAEvBnH,GAAW,SAACrV,EAAOyc,GAClB,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBoc,WAAYK,EAAQA,YAHjBne,OAAAoC,EAAA,EAAApC,CAAAke,GAKvBjH,GAAa,SAACvV,EAAOyc,GACpB,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBoc,WAAY,GAAIC,UAAW,OANxB/d,OAAAoC,EAAA,EAAApC,CAAAke,GAQvB9c,GAAW,SAACM,EAAOyc,GAElB,OAAON,KAVe7d,OAAAoC,EAAA,EAAApC,CAAAke,GAYvBhH,GAAgB,SAACxV,EAAOyc,GACvB,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GACF0B,EADL,CAEEqb,aAAa,EACbgB,UAAWrc,EAAMoc,WAAW1D,MAAM,SAhBdpa,OAAAoC,EAAA,EAAApC,CAAAke,GAmBvB/G,GAAkB,SAACzV,EAAOyc,GACzB,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBwE,QAASiY,EAAQA,QAASpB,aAAa,MApBpC/c,OAAAoC,EAAA,EAAApC,CAAAke,GAsBvB9G,GAAe,SAAC1V,EAAOyc,GACtB,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBqb,aAAa,MAvBV/c,OAAAoC,EAAA,EAAApC,CAAAke,GAyBvBjW,GAAmB,SAACvG,EAAOyc,GAE1B,OADAtc,QAAQC,IAAI,yBAA0Bqc,GAC/Bne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBmL,cAAesR,EAAQA,YA3BpBne,OAAAoC,EAAA,EAAApC,CAAAke,GA6BvBrI,GAAqB,SAACnU,EAAOyc,GAC5B,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GACF0B,EADL,CAEE8L,YAAY,EACZwQ,aAAc,KACd7L,cAAe,SAlCKnS,OAAAoC,EAAA,EAAApC,CAAAke,GAqCvB7G,GAAuB,SAAC3V,EAAOyc,GAC9B,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GACF0B,EADL,CAEEyQ,cAAegM,EAAQA,QAAQhM,cAC/B3E,YAAY,MAzCQxN,OAAAoC,EAAA,EAAApC,CAAAke,GA4CvB5G,GAAoB,SAAC5V,EAAOyc,GAC3B,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmB8L,YAAY,MA7CT0Q,IAgD1BL,ICpDavU,GAdC2U,cAAaG,GAAA,GAAApe,OAAAoC,EAAA,EAAApC,CAACoe,GAEzB3L,GAAkB,SAAC/Q,EAAOyc,GAEzB,OADAtc,QAAQC,IAAI,UAAWqc,EAAQA,SACxBne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBgR,eAAgByL,EAAQA,YAJpBne,OAAAoC,EAAA,EAAApC,CAACoe,GAMzB3N,GAAqB,SAAC/O,EAAOyc,GAE5B,OADAtc,QAAQC,IAAI,0BAA2Bqc,EAAQA,SACxCne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmB8H,mBAAoB2U,EAAQA,YARxBC,IALX,CAChB1L,gBAAgB,EAChBlJ,oBAAoB,wBCkBhB6U,GAAQ,IAAIC,kBACZC,GAAQ,IAAIC,UAAOH,IAEnB3S,GAAUuS,cAAaQ,GAAA,GAAAze,OAAAoC,EAAA,EAAApC,CAACye,GAEzB7N,GAAsB,SAAClP,EAAOyc,GAC7B,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GACF0B,EADL,CAEE8L,YAAY,EACZuC,MAAOoO,EAAQA,QAAQvc,GACvB8c,SAAUP,EAAQA,QAAQrO,WAC1B4M,KAAMyB,EAAQA,QAAQlO,YACtBtE,YAAawS,EAAQA,QAAQxS,gBATR3L,OAAAoC,EAAA,EAAApC,CAACye,GAYzB1G,GAAwB,SAACrW,EAAOyc,GAC/B,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GACF0B,EADL,CAEEgK,QAASiT,GAAeR,EAAQS,IAChCpR,YAAY,MAhBSxN,OAAAoC,EAAA,EAAApC,CAACye,GAmBzBzG,GAAqB,SAACtW,EAAOyc,GAC5B,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBgK,QAAS,KAAM8B,YAAY,MApBvBxN,OAAAoC,EAAA,EAAApC,CAACye,GAsBzB/R,GAAa,SAAChL,EAAOyc,GACpB,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBmM,aAAcsQ,EAAQA,YAvBlBne,OAAAoC,EAAA,EAAApC,CAACye,GAyBzB9R,GAAa,SAACjL,EAAOyc,GACpB,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBmd,aAAcV,EAAQA,YA1BlBne,OAAAoC,EAAA,EAAApC,CAACye,GA4BzBnS,GAAc,SAAC5K,EAAOyc,GACrB,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GAAK0B,EAAZ,CAAmBmM,aAAc,KAAMgR,aAAc,SA7B9BJ,IAdR,CACnBjR,YAAY,EACZkP,KAAM,GACN3M,MAAO,GACP2O,SAAU,GACV/S,YAAa,GACbD,QAAS,KACTmC,aAAc,KACdgR,aAAc,OAyCVF,GAAiB,SAAAC,GACrB,IAAME,EAAST,GAAMU,cAAcH,GACnC/c,QAAQC,IAAI,WAAYgd,GAExB,IAAME,EAAmB,GACnBC,EAAcV,GAAMW,qBAAqBJ,EAAQE,GACjDlS,EAAQyR,GAAMY,kBAAkBL,EAAQE,GAG9C,MAAO,CACL/R,SAFY,GAAA+G,OAAAhU,OAAAof,GAAA,EAAApf,CAAOif,EAAYhO,OAAnBjR,OAAAof,GAAA,EAAApf,CAA6Bif,EAAY/N,QAGrDpE,UAIWpB,MChCAgG,GA/BAuM,cAAaoB,GAAA,GAAArf,OAAAoC,EAAA,EAAApC,CAACqf,GAExBjH,GAAoB,SAAC1W,EAAOyc,GAC3B,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GACF0B,EADL,CAEE4d,kBAAkB,EAClB5O,MAAO,KACPc,QAAS,OAPWxR,OAAAoC,EAAA,EAAApC,CAACqf,GAUxBhH,GAAsB,SAAC3W,EAAOyc,GAC7B,OAAOne,OAAAC,EAAA,EAAAD,CAAA,GACF0B,EADL,CAEE8P,QAAS2M,EAAQ3M,QACjB8N,kBAAkB,EAClB5O,MAAO,SAfa1Q,OAAAoC,EAAA,EAAApC,CAACqf,GAkBxB/G,GAAmB,SAAC5W,EAAOyc,GAE1B,OADAtc,QAAQ0K,KAAK,SAAU4R,EAAQzN,OACxB1Q,OAAAC,EAAA,EAAAD,CAAA,GACF0B,EADL,CAEE4d,kBAAkB,EAClB5O,MAAOyN,EAAQzN,MACfc,QAAS,OAxBW6N,IANP,CACnBC,kBAAkB,EAClB9N,QAAS,GACTd,MAAO,OCDM6O,GAFKC,0BAAgB,CAAE9N,UAAQvL,UAAQmD,WAASoC,0CCgBzD+T,GAAe,SAAC7d,EAAIkO,EAAYG,GACpC,IAGMyP,EAvBgB,kCAyBpB9d,EACA,8BACAkO,EACA,gBACAG,EAIF,OAFApO,QAAQC,IAAI,kBAAmB4d,GAExBxP,MAAMwP,EAAU,CACrBC,OCrCsB,MDsCtBC,QAfc,CACdC,eAAgB,uBEfdC,GAAc,SAAA1Z,GAClB,IAEM2Z,EACJC,iCAA0B5Z,EAAW,oFAIvC,OAFAvE,QAAQC,IAAI,sBAAuBie,GAE5B7P,MAAM6P,EAAW,CACtBJ,ODnBuB,UEWrBM,GAAY,WAChB,IAAMF,EAAYG,wCAGlB,OAFAre,QAAQC,IAAI,mBAAoBie,GAEzB7P,MAAM6P,EAAW,CACtBJ,OFfsB,MEgBtBxP,KAAM,SAELG,KAAK,SAAA6P,GACJ,IAAKA,EAASC,GACZ,MAAM/P,MAAM,+BAAiC8P,EAASnE,QAExD,OAAOmE,IAER/P,MAAM,SAAAM,GAAK,MAAK,CAAEA,YAGjB2P,GAAc,SAAAtQ,GAGlB,OAAOG,MA3Be,kCAyBsBH,EAAQ,UAEpB,CAC9B4P,OF/BsB,QEiCrBrP,KAAK,SAAA6P,GACJ,IAAKA,EAASC,GACZ,MAAM/P,MAAM,+BAAiC8P,EAASnE,QAExD,OAAOmE,IAER/P,MAAM,SAAAM,GAAK,MAAK,CAAEA,YAGjB4P,GAAY,SAAAvQ,GAGhB,OAAOG,MA1Ce,kCAwCcH,EAEZ,CACtB4P,OF9CsB,QEgDrBrP,KAAK,SAAA6P,GACJ,IAAKA,EAASC,GACZ,MAAM/P,MAAM,iCAAmC8P,EAASnE,QAE1D,OAAOmE,IAER/P,MAAM,SAAAM,GAAK,MAAK,CAAEA,YAGjB6P,GAAY,SAACna,EAAUoa,GAC3B,IAEMC,EAAc,CAClBra,WACAoa,cAGF3e,QAAQC,IAAI,mCAAoC2e,GAEhD,IAAMC,EAAS,IAAIC,QAAQ,CACzBd,eAAgB,qBAIlB,OAAO3P,MArEe,kCAqEE,CACtByP,OF1EuB,OE2EvBC,QAASc,EACTE,KAAMC,KAAKC,UAAUL,KAEpBnQ,KAAK,SAAA6P,GACJ,IAAKA,EAASC,GACZ,MAAM/P,MAAM,wBAA0B8P,EAASnE,QAEjD,OAAOmE,IAER/P,MAAM,SAAAM,GAAK,MAAK,CAAEA,yBCxDEqQ,iBAcfC,iBAwEAC,iBA2CAxB,iBAkBAyB,IArJJC,GAAoB,IAEX,SAAUJ,KAAV,OAAAK,GAAA7gB,EAAA8gB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAxa,MAAA,OAEb,OADAjF,QAAQC,IAAI,+BADCwf,EAAAxa,KAAA,EAEP0a,aAAWjL,GAAgByK,IAFpB,OAGb,OAHaM,EAAAxa,KAAA,EAGP0a,aAAW9K,GAAsBuK,IAH1B,OAIb,OAJaK,EAAAxa,KAAA,EAIP0a,aAAW/J,GAAuBgI,IAJ3B,OAKb,OALa6B,EAAAxa,KAAA,EAKP0a,aAAWvJ,GAAqBiJ,IALzB,wBAAAI,EAAAG,SAAAC,IAcf,SAAUV,GAAYW,GAAtB,IAAAvb,EAAA8T,EAAA1I,EAAAoQ,EAAApB,EAAArG,EAAA0H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApS,EAAAqS,EAAA,OAAAhB,GAAA7gB,EAAA8gB,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAvb,MAAA,UACEjF,QAAQC,IAAI,qBAAsB6f,GAE5Bvb,EAAWub,EAAOxD,QAAQ/X,cAIZlE,KAHhBgY,EAAcyH,EAAOxD,QAAQjE,aAJnC,CAAAmI,EAAAvb,KAAA,SAQoB,OARpBub,EAAAvb,KAAA,EAQ0Bwb,aAAKC,GAAuB,MARtD,OASuB,OADb/Q,EARV6Q,EAAAG,KAAAH,EAAAvb,KAAA,EAS6Bwb,aAAK,CAAC9Q,EAAS,SAT5C,OASUoQ,EATVS,EAAAG,KAWUhC,EAAaoB,EAAW1b,QAC9BgU,EAAcsG,EAAWvb,IAAI,SAAAyM,GAAM,OAAIA,EAAO/N,OAC9C9B,QAAQC,IAAI,qBAAsBoY,GAbtC,QAsBiC,OANzBC,EAAiB/T,EAASqc,OAEhC5gB,QAAQC,IAAI,wBAAyBsE,EAAU8T,GAlBjDmI,EAAAd,KAAA,GAAAc,EAAAvb,KAAA,GAsBuC4b,aAAI,CACrCJ,aAAKK,GAAuBxI,GAC5BmI,aAAKC,GAAuBnc,EAAU8T,KAxB5C,QA2BqB,OA3BrB2H,EAAAQ,EAAAG,KAAAV,EAAA9hB,OAAA4O,GAAA,EAAA5O,CAAA6hB,EAAA,GAsBWE,EAtBXD,EAAA,GAsBoBE,EAtBpBF,EAAA,GAAAO,EAAAvb,KAAA,GA2B2Bwb,aAAK,CAACP,EAAS,SA3B1C,QAoCI,OATME,EA3BVI,EAAAG,KA4BUN,EAAiBF,EAAUpC,QAAQgD,IAAI,YACvCT,EAAQD,EAAe9H,MAAM,KAC7BrK,EAAQoS,EAAMA,EAAM1f,OAAS,GAE7B2f,EAAWS,GAAYZ,GAE7BpgB,QAAQC,IAAI,qBAAsBsgB,GAlCtCC,EAAAvb,KAAA,GAoCUgc,aAAI,CACRC,KAAMvM,GACN2H,QAAS,CACP9X,MAAO+b,EAASY,cAChBpd,SAAUwc,EAASxc,SACnBsc,iBACAnS,WA1CR,QAAAsS,EAAAvb,KAAA,iBA+CI,OA/CJub,EAAAd,KAAA,GAAAc,EAAAY,GAAAZ,EAAA,UA8CIxgB,QAAQ0K,KAAK,qBAAb8V,EAAAY,IA9CJZ,EAAAvb,KAAA,GA+CUgc,aAAI,CACRC,KAAMtM,GACN0H,QAAS,CACPrW,QAAS,4BACToR,MAAOiB,EACPzJ,MAAO2R,EAAAY,GAAEnb,WApDjB,yBAAAua,EAAAZ,SAAAyB,GAAA,gBA0DA,IAAM7C,GAAc,SAAA8C,GAIlB,OAHAthB,QAAQC,IAAIqhB,EAAWC,SAAUD,EAAW3R,SAG3B,MADI2R,EAAbC,UASJC,GAAQ,SAAAC,GAAE,OAAI,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MAE/D,SAAUrC,GAAkBU,GAA5B,IAAA5R,EAAA2T,EAAAP,EAAAQ,EAAAC,EAAAC,EAAA,OAAAzC,GAAA7gB,EAAA8gB,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAhd,MAAA,OACQiJ,EAAQ4R,EAAOxD,QAAQpO,MAD/B+T,EAAAvC,KAAA,EAIQmC,GAAW,EACXP,EAAa,KALrB,UAOYO,EAPZ,CAAAI,EAAAhd,KAAA,SAQwB,OARxBgd,EAAAhd,KAAA,EAQ8Bwb,aAAKC,GAAyBxS,GAR5D,OASmB,OADP4T,EARZG,EAAAtB,KAAAsB,EAAAhd,KAAA,GASyBwb,aAAK,CAACqB,EAAW,SAT1C,WASMR,EATNW,EAAAtB,OAUMkB,EAAWrD,GAAY8C,IAV7B,CAAAW,EAAAhd,KAAA,gBAAAgd,EAAAC,OAAA,oBAeQ,OAfRD,EAAAhd,KAAA,GAecwb,aAAKe,GAAOlC,IAf1B,QAAA2C,EAAAhd,KAAA,gBAmBsB,OAnBtBgd,EAAAhd,KAAA,GAmB4Bwb,aAAKC,GAAuBxS,GAnBxD,QAoBuB,OADb6T,EAnBVE,EAAAtB,KAAAsB,EAAAhd,KAAA,GAoB6Bwb,aAAK,CAACsB,EAAW,SApB9C,QAwBI,OAJMC,EApBVC,EAAAtB,KAsBI3gB,QAAQC,IAAI,mBAAoBqhB,EAAYU,GAtBhDC,EAAAhd,KAAA,GAwBUgc,aAAI,CACRC,KAAMpM,GACNwH,QAAS,CACPhM,cAAe0R,KA3BvB,QAAAC,EAAAhd,KAAA,iBAgCI,OAhCJgd,EAAAvC,KAAA,GAAAuC,EAAAb,GAAAa,EAAA,SA+BIjiB,QAAQ0K,KAAK,qBAAbuX,EAAAb,IA/BJa,EAAAhd,KAAA,GAgCUgc,aAAI,CACRC,KAAMnM,GACNuH,QAAS,CACPrW,QAAS,gCACTiI,QACAW,MAAOoT,EAAAb,GAAEnb,WArCjB,yBAAAgc,EAAArC,SAAAuC,GAAA,eA2CA,SAAUvE,GAAakC,GAAvB,IAAA/E,EAAAhb,EAAAkO,EAAAG,EAAA2O,EAAAqF,EAAA,OAAA7C,GAAA7gB,EAAA8gB,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAApd,MAAA,OASe,OATfod,EAAA3C,KAAA,EAEI1f,QAAQC,IAAI,wBAAyB6f,GAE/B/E,EAAS+E,EAAOxD,QAChBvc,EAAKgb,EAAOhb,GACZkO,EAAa8M,EAAO9M,WACpBG,EAAc2M,EAAO3M,YAP/BiU,EAAApd,KAAA,EASqBwb,aAAK6B,GAAkBviB,EAAIkO,EAAYG,GAT5D,OAUiB,OADP2O,EATVsF,EAAA1B,KAAA0B,EAAApd,KAAA,GAUuBwb,aAAK,CAAC1D,EAAI,SAVjC,QAYI,OAFMqF,EAVVC,EAAA1B,KAAA0B,EAAApd,KAAA,GAYUgc,aAAI,CAAEC,KAAMrL,GAAyBkH,GAAIqF,IAZnD,QAAAC,EAAApd,KAAA,iBAcI,OAdJod,EAAA3C,KAAA,GAAA2C,EAAAjB,GAAAiB,EAAA,SAAAA,EAAApd,KAAA,GAcUgc,aAAI,CAAEC,KAAMpL,GAAsBjH,MAAKwT,EAAAjB,KAdjD,yBAAAiB,EAAAzC,SAAA2C,GAAA,eAkBA,SAAUlD,GAAYS,GAAtB,IAAAnQ,EAAAyS,EAAA,OAAA7C,GAAA7gB,EAAA8gB,KAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAAvd,MAAA,OAEoB,OAFpBud,EAAA9C,KAAA,EAAA8C,EAAAvd,KAAA,EAE0Bwb,aAAKC,GAAuB,MAFtD,OAGiB,OADP/Q,EAFV6S,EAAA7B,KAAA6B,EAAAvd,KAAA,EAGuBwb,aAAK,CAAC9Q,EAAS,SAHtC,OAKI,OAFMyS,EAHVI,EAAA7B,KAAA6B,EAAAvd,KAAA,EAKUgc,aAAI,CAAEC,KAAM7K,GAAuB1G,QAASyS,EAAK/d,UAL3D,OAAAme,EAAAvd,KAAA,iBAOI,OAPJud,EAAA9C,KAAA,GAAA8C,EAAApB,GAAAoB,EAAA,SAAAA,EAAAvd,KAAA,GAOUgc,aAAI,CAAEC,KAAM5K,GAAoBzH,MAAK2T,EAAApB,KAP/C,yBAAAoB,EAAA5C,SAAA6C,GAAA,eAWA,IAAMzB,GAAc,SAAA0B,GAKlB,IAJA,IAAMvB,EAAgB,IAAIwB,IACpB5e,EAAW,GAEb6e,EAAMF,EAAW9hB,OACdgiB,KAAO,CACZ,IAAMngB,EAAQigB,EAAWE,GACrBngB,EAAMogB,SACR9e,EAASqB,KAAK3C,EAAM4U,OAEpB8J,EAAc2B,IAAIrgB,EAAM4U,MAAO5U,GAInC,MAAO,CACL0e,gBACApd,aCxLEgf,GAAiBC,cAEjBC,GAAQC,sBACZxF,GACAyF,8BAAoBC,0BAAgBL,MAGtCA,GAAeM,IAAInE,IAenBoE,iBAAO7kB,EAAAC,EAAAC,cAbM,SAAAqhB,GAAA,IAAGiD,EAAHjD,EAAGiD,MAAH,OACXxkB,EAAAC,EAAAC,cAAC4kB,EAAA,EAAD,CAAUN,MAAOA,GACfxkB,EAAAC,EAAAC,cAAC6kB,EAAA,EAAD,CAAQC,SAAUC,IAChBjlB,EAAAC,EAAAC,cAACglB,EAAA,EAAD,KACEllB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIliB,UAAW8Z,KACjCjd,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,+BAA+BliB,UAAWga,KACtDnd,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,oBAAoBliB,UAAWga,KAC3Cnd,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAOE,KAAK,UAAUliB,UAAWga,SAMlC,CAAMqH,MAAOA,KAAWc,SAASC,eAAe,SXyFjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1V,KAAK,SAAA2V,GACjCA,EAAaC,mCYnInBxmB,EAAAC,QAAiBC,EAAAC,EAAuB,oFCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.ad9ed8b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/dna.9c807c9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/idea.c30260f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/disconnected.243cf575.svg\";","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport './style.css'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nconst EXAMPLES = ['kras egfr cdk4 tp53', 'per1 per2 clock', 'mtor wnt1 igf1']\n\nconst styles = theme => ({\n  ...theme,\n  button: {\n    marginLeft: '0.5em'\n  }\n})\n\nconst SearchPanel = props => {\n  const { classes } = props\n\n  const handleStartOver = event => {\n    props.searchActions.clearAll()\n  }\n\n\n  return (\n    <div className=\"search\">\n      <div className=\"buttons\">\n        <Tooltip title=\"Restart Search\" placement=\"bottom\">\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            size=\"small\"\n            color=\"secondary\"\n            onClick={handleStartOver}\n            fullWidth\n          >\n            <RefreshIcon />\n          </Button>\n        </Tooltip>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(SearchPanel)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\nconst MAX_DESCRIPTION_LENGTH = 150\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass InputList extends React.Component {\n  state = {}\n\n  componentDidMount() {}\n\n  handleClick = id => {\n    console.log('OPEN = = = ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    console.log('STTTTT,', this.state)\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n    const notFound = results.notFound\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const values = []\n    for (let value of geneList.values()) {\n      values.push(value)\n    }\n    return (\n      <div className=\"gene-list-wrapper\">\n        <Typography variant=\"h6\">Search Result</Typography>\n        <Typography variant=\"body1\">\n          {'Matched Genes: ' + values.length + ''}\n        </Typography>\n\n        <div className=\"gene-list\">\n          <List>{values.map(entry => this.getListItem(entry, classes))}</List>\n        </div>\n\n        {notFound.length !== 0 ? this.getNotFound(notFound, classes) : null}\n      </div>\n    )\n  }\n\n  getListItem = (geneEntry, classes) => {\n    let description = geneEntry.summary\n    if (description.length > MAX_DESCRIPTION_LENGTH) {\n      description = description.substring(0, MAX_DESCRIPTION_LENGTH - 1) + '...'\n    }\n    return (\n      <React.Fragment>\n        <ListItem\n          alignItems=\"flex-start\"\n          key={geneEntry._id}\n          button\n          onClick={e => this.handleClick(geneEntry._id)}\n        >\n          <ListItemAvatar>\n            <Avatar className={classes.matched}>G</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={geneEntry.symbol}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  {geneEntry.name}\n                </Typography>\n                <Typography variant=\"caption\">{description}</Typography>\n              </React.Fragment>\n            }\n          />\n          <ListItemSecondaryAction className={classes.linkIcon}>\n            <IconButton\n              aria-label=\"Link to GeneCards\"\n              href={GENE_CARDS_URL + geneEntry.symbol}\n              target=\"_blank\"\n            >\n              <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                <LinkIcon />\n              </Tooltip>\n            </IconButton>\n          </ListItemSecondaryAction>\n          {this.state['pw_' + geneEntry._id] ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        {this.getListChildren(geneEntry, classes)}\n      </React.Fragment>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(InputList)\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nimport FaceIcon from '@material-ui/icons/Face'\nimport DoneIcon from '@material-ui/icons/Done'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('Clear selection', event.target.value)\n}\n\nconst GeneList = props => {\n  const { classes } = props\n\n  const results = props.search.results\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  const notFound = results.notFound\n\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const values = []\n  for (let value of geneList.values()) {\n    values.push(value)\n  }\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {values.map(value => getChip(value, true, classes, props))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props) => {\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color=\"primary\"\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport SearchPanel from '../SearchPanel'\nimport InputList from '../InputList'\nimport LoadingPanel from '../LoadingPanel'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <SearchPanel {...props} />\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport logo from '../../assets/images/cytoscape-logo.svg'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <img alt=\"Home logo\" src={logo} className=\"home-logo\" />\n      <Typography variant=\"h2\">Cytoscape Cloud &alpha;</Typography>\n      <Typography variant=\"subtitle1\">\n        Enter / drag & drop a gene list to the text area\n      </Typography>\n\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst OpenInButton = props => {\n  const { classes, uiState } = props\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      disabled={!uiState.isCytoscapeRunning}\n    >\n      Open in\n      <img alt=\"Cytoscape logo\" src={logo} className={classes.buttonIcon} />\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(OpenInButton)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport InputBase from '@material-ui/core/InputBase'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport OpenInButton from './OpenInButton'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <Toolbar className={classes.toolbar}>\n      <IconButton\n        className={classes.menuButton}\n        color=\"primary\"\n        aria-label=\"Open drawer\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        className={classes.title}\n        variant=\"subtitle1\"\n        color=\"inherit\"\n        noWrap\n      >\n        {props.network.networkName}\n      </Typography>\n      <div className={classes.grow} />\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput\n          }}\n        />\n      </div>\n      <OpenInButton {...others} />\n    </Toolbar>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useEffect } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nlet cyInstance = null\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    console.log('This should run only once:  CyViewer Mounted:', cyInstance)\n\n    cyInstance.on('tap', function(event) {\n      try {\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        const selected = this.data()\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    return () => {\n      console.log('unmount')\n    }\n  }, [])\n\n  const cyjs = props.network.network\n  const selectedGenes = props.search.selectedGenes\n\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  console.log('Rendering Cyjs ===', cyjs, selectedGenes)\n  if (selectedGenes.length !== 0) {\n    console.log('=========== SL found:', selectedGenes)\n    cyjs.style.push({\n      style: {\n        'background-color': 'red'\n      },\n      selector: 'node:selected'\n    })\n\n    if(cyInstance !== undefined || cyInstance !== null) {\n      // test reaction\n      const name = selectedGenes[0]\n      cyInstance.elements('node[name = \"'+ name + '\"]').style('background-color', 'red')\n    }\n  }\n  console.log('=========== Style:', cyjs.style)\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={{ name: 'preset' }}\n      style={{ width: '100%', height: '100%' }}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport NetworkToolbar from './NetworkToolbar'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n    <NetworkToolbar {...props} />\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\n/**\n * Dummy table browser\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const network = props.network\n\n  if (network === null) {\n    return <div />\n  }\n\n  const node = network.selectedNode\n  if (node === null || node === undefined) {\n    return <div />\n  }\n\n\n  return (\n    <div>\n      <Typography variant=\"h6\">{node.name}</Typography>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => (\n  <Split sizes={[70, 30]} direction=\"vertical\" gutterSize={6}>\n    <NetworkViewer {...props} />\n    <TableBrowser className=\"property-view\" {...props} />\n  </Split>\n)\n\nexport default NetworkView\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'name'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <div className={classes.grow} />\n\n      <TextField\n        select\n        label=\"Sort by:\"\n        value={values.sortBy}\n        onChange={handleChange('sortBy')}\n        className={classes.sortBy}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n    </Toolbar>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\nimport deepOrange from '@material-ui/core/colors/deepOrange'\n\nimport MenuList from '@material-ui/core/MenuList'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport './style.css'\nimport Sorter from './Sorter'\n\nconst NDEX_LINK_URL = 'http://www.ndexbio.org/#/network/'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: deepOrange[500]\n  },\n  menuItem: {\n    height: '4em',\n    '&:focus': {\n      backgroundColor: 'rgba(200,205,200,0.5)',\n      '& $primary, & $icon': {\n        color: theme.palette.common.white\n      }\n    }\n  },\n  menuText: {\n    '&:focus': {\n      '& $primary, & $icon': {\n        color: theme.palette.common.white\n      }\n    }\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst CYTOSCAPE_URL = 'http://localhost:2607/status/'\n\nconst checkCytoscapeConnection = props => {\n  fetch(CYTOSCAPE_URL, { mode: 'no-cors' })\n    .catch(e => {\n      throw Error(e)\n    })\n    .then(res => handleErrors(res))\n    .then(running => {\n      props.uiStateActions.setCytoscapeStatus(true)\n    })\n    .catch(error => {\n      props.uiStateActions.setCytoscapeStatus(false)\n    })\n}\n\nconst handleErrors = res => {\n  console.log('Calling!!', res)\n  if (res !== undefined) {\n    return true\n  }\n\n  return false\n}\n\nconst NetworkList = props => {\n  const { classes, hits, sourceUUID } = props\n\n  const id = props.search.results.jobId\n  const handleFetch = (networkUUID, networkName) => {\n    checkCytoscapeConnection(props)\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName\n    })\n  }\n\n  const getListItem = (networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      percentOverlap,\n      nodes,\n      edges\n    } = networkEntry\n\n    return (\n      <MenuItem\n        className={classes.menuItem}\n        alignItems=\"flex-start\"\n        key={networkUUID}\n        onClick={val => handleFetch(networkUUID, description)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.networkAvatar}>N</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          className={classes.menuText}\n          primary={description}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {'Nodes: ' + nodes + ', Edges: ' + edges}\n              </Typography>\n              <Typography variant=\"caption\">\n                {'UUID: ' + networkUUID}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.secondary}>\n          <div\n            style={{\n              background: 'lightGreen',\n              color: 'white',\n              height: '2em',\n              width: percentOverlap + '%'\n            }}\n          >\n            <Typography variant=\"h6\">{percentOverlap + '%'}</Typography>\n          </div>\n        </ListItemSecondaryAction>\n      </MenuItem>\n    )\n  }\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <Sorter />\n      <div className=\"network-list\">\n        <MenuList>{hits.map(entry => getListItem(entry, classes))}</MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => (\n  <Split sizes={[50, 50]} gutterSize={7} className=\"ndex-base\">\n    <NetworkList {...props} />\n    <NetworkView {...props} />\n  </Split>\n)\n\nexport default Ndex\n","import React, { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport Ndex from './Ndex'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  const [value, setValue] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const { classes, ...others } = props\n\n  const searchResults = props.search.searchResults\n\n  console.log('Current Result:', searchResults)\n\n  // Display message panel if no result is available\n  if (searchResults === null) {\n    return <Empty />\n  }\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={value} onChange={handleChange}>\n          {getTabs(searchResults.sources)}\n        </Tabs>\n        {getTabContent(value, searchResults.sources, others)}\n      </div>\n    </div>\n  )\n}\n\nconst getTabs = sources => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const tabs = sources.map(source => (\n    <Tab key={source.sourceUUID} label={source.sourceName} />\n  ))\n\n  console.log('TABBS = ', tabs)\n  return tabs\n}\n\nconst getTabContent = (index, sources, props) => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const source = sources[index]\n  if (!source) {\n    return null\n  }\n\n  const { results, sourceUUID } = source\n  return <Ndex hits={results} sourceUUID={sourceUUID} {...props} />\n}\n\nexport default withStyles(styles)(Results)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport github from '../../assets/images/github.svg'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  logo: {\n    height: '2.5em',\n    marginRight: '0.7em'\n  },\n  headerLogo: {\n    height: '1.4em'\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  render() {\n    const { classes } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div className={classes.grow}>\n            <Typography variant=\"h6\" color=\"inherit\">\n              NDEx Network Search:\n            </Typography>\n            <Typography variant=\"body1\">\n              Pathway Enrichment / Gene Neighborhoods / Keywords\n            </Typography>\n          </div>\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(GITHUB_URL)}\n            >\n              <img\n                alt=\"GitHub logo\"\n                src={github}\n                className={classes.headerLogo}\n              />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://www.cytoscape.org/'\nconst GITHUB_URL = 'https://github.com/idekerlab/cytoscape-cloud-portal'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport HelpIcon from '@material-ui/icons/Help'\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['This', 'panel is', 'for advanced', 'options'].map(\n            (text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n        <Divider />\n        <List>\n          {['More options', 'Help', '??'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <SettingIcon /> : <HelpIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    // Call search\n\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      console.log('Fetching res')\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    console.log('* Handling back button press')\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  console.log('----------------------- New Home Panel ------------------')\n\n  if (props.search.isFetching) {\n    return <LoadingPanel title=\"Loading Search Results\" />\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <InputPanel className=\"input\" {...props} />\n        <Results className=\"results\" {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\n\nconst MainContainer = props => <HomePanel {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Refresh'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst EXAMPLES = ['kras egfr cdk4 tp53', 'per1 per2 clock', 'mtor wnt1 igf1']\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      console.log('** Search route:', jobId, pathParam)\n      props.history.push(`/${jobId}`)\n    }\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx],\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => handleExample(0)}>Gene List 1</MenuItem>\n          <MenuItem onClick={() => handleExample(1)}>Gene List 2</MenuItem>\n          <MenuItem onClick={() => handleExample(2)}>Gene List 3</MenuItem>\n        </Menu>\n      </div>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        value={state.query}\n      />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton\n        color=\"primary\"\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <ClearIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport dna from '../../assets/images/dna.svg'\nimport idea from '../../assets/images/idea.svg'\n\nconst styles = {\n  card: {\n    minWidth: 345,\n    maxWidth: 345,\n    minHeight: 380,\n    marginLeft: '1em'\n  },\n  media: {\n    objectFit: 'cover'\n  }\n}\n\nconst IMAGES = [ndexLogo, cyLogo, dna, idea]\nconst randomImage = () => {\n  const idx = Math.floor(Math.random() * 4)\n  return IMAGES[idx]\n}\n\nconst SourceCard = props => {\n  const { classes, source } = props\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          className={classes.media}\n          height=\"140\"\n          src={randomImage()}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {source.name}\n          </Typography>\n          <Typography gutterBottom variant=\"subheading\">\n            {'(v' + source.version + ')'}\n          </Typography>\n          <Typography component=\"p\">{source.description}</Typography>\n          <Typography variant={'h6'}>{'Status: ' + source.status}</Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions />\n    </Card>\n  )\n}\n\nSourceCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  source: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SourceCard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport disconnected from '../../assets/images/disconnected.svg'\n\nconst styles = {\n  card: {\n    minWidth: 345,\n    maxWidth: 345,\n    padding: '1em'\n  },\n  media: {\n    objectFit: 'fit'\n  }\n}\n\nconst ErrorCard = props => {\n  const { classes } = props\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Error loading source\"\n          className={classes.media}\n          height=\"300\"\n          src={disconnected}\n          title=\"Error loading source\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\" color={'error'}>\n            Failed to access services\n          </Typography>\n          <Typography component=\"p\" color={'error'}>\n            Something is wrong with tne search service. After a few moments,\n            please reload the page and try again.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          variant={'outlined'}\n          size=\"small\"\n          color=\"primary\"\n          onClick={handleReload}\n        >\n          Reload\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nconst handleReload = () => {\n  window.location.reload(true)\n}\n\nErrorCard.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ErrorCard)\n","import React from 'react'\nimport './style.css'\nimport SourceCard from './SourceCard'\nimport ErrorCard from './ErrorCard'\n\nconst SourcePanel = props => {\n  if (props.source === undefined || !props.source.sources) {\n    return null\n  }\n\n  const sources = props.source.sources\n\n  if (props.source.error !== null) {\n    return (\n      <div className=\"source-container\">\n        <ErrorCard />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"source-container\">\n      {sources.map(sourceEntry => (\n        <SourceCard key={sourceEntry.uuid} source={sourceEntry} />\n      ))}\n    </div>\n  )\n}\n\nexport default SourcePanel\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\nimport SourcePanel from './SourcePanel'\n\nimport queryString from 'query-string'\n\n\nconst StartPanel = props => {\n  useEffect(() => {\n\n\n    const params = queryString.parse(props.location.search)\n    console.log('**MOUNTED: path params:', params)\n\n    const genes = params.genes\n\n    if(genes !== undefined) {\n      const geneList = genes.split(',')\n      //TODO: call actual API\n      props.searchActions.setQuery(genes)\n      console.log('Got genes.  Start search now!', geneList)\n      props.searchActions.searchStarted({ geneList })\n\n    }\n\n    props.sourceActions.findSourceStarted()\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <SourcePanel {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\n\nconst TopPageContainer = props => <TopPage {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: []\n}\n\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      // return { ...state, queryGenes: '', queryList: [], results: null }\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      console.log('Setting selected gene:', payload)\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport { setSettingsOpen, setCytoscapeStatus } from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  isCytoscapeRunning: false\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setCytoscapeStatus]: (state, payload) => {\n      console.log('Cytoscape is running = ', payload.payload)\n      return { ...state, isCytoscapeRunning: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  selectNode,\n  selectEdge,\n  deselectAll\n} from '../actions/network'\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  network: null,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        network: convertCx2cyjs(payload.cx),\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return { ...state, network: null, isFetching: false }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = cx => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  console.log('NICE ===', niceCX)\n\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const elements = [...elementsObj.nodes, ...elementsObj.edges]\n  return {\n    elements,\n    style\n  }\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\n\nconst rootReducer = combineReducers({ source, search, uiState, network })\n\nexport default rootReducer\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\nconst NDEX_BASE_URL = 'http://public.ndexbio.org/v2/'\n\n// const SEARCH_BASE_URL = 'http://public.ndexbio.org/v2/'\nconst SEARCH_BASE_URL = 'http://secret.ndexbio.org:8090/'\n\nconst searchNetwork = query => {\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n  const body = JSON.stringify({\n    searchString: query\n  })\n  const searchUrl = NDEX_BASE_URL + 'search/network'\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers,\n    body\n  })\n}\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    SEARCH_BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { searchNetwork, fetchNetwork }\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  console.log('Calling MyGene API:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\n// const SEARCH_BASE_URL =\n//   'http://secret.ndexbio.org/fake_cytoscapesearch/rest/v1/cytoscapesearch/'\nconst SEARCH_BASE_URL = 'http://secret.ndexbio.org:8090/'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = SEARCH_BASE_URL + 'source'\n  console.log('Calling sources:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = SEARCH_BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = jobId => {\n  const resultUrl = SEARCH_BASE_URL + jobId\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = SEARCH_BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  console.log('Sending query to search service:', queryObject)\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nexport default function* rootSaga() {\n  console.log('rootSaga reporting for duty')\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  console.log('## Search started.', action)\n\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    console.log('* Fetched sources:', sourceNames)\n  }\n\n  const geneListString = geneList.join()\n\n  console.log('## genes and sources:', geneList, sourceNames)\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n\n    const filtered = filterGenes(geneJson)\n\n    console.log('## Filtered genes:', filtered)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\nconst checkStatus = statusJson => {\n  console.log(statusJson.progress, statusJson.sources)\n\n  const { progress } = statusJson\n  if (progress === 100) {\n    return true\n  } else {\n    return false\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  try {\n    let finished = false\n    let statusJson = null\n\n    while (!finished) {\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      statusJson = yield call([statusRes, 'json'])\n      finished = checkStatus(statusJson)\n\n      if (finished) {\n        break\n      } else {\n        yield call(sleep, API_CALL_INTERVAL)\n      }\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n\n    console.log('## Result fetch:', statusJson, resultJson)\n\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    console.log('Action cont----------', action)\n\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: json.results })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}
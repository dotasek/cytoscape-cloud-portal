{"version":3,"sources":["assets/images/ndex-logo.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","assets/images/disconnected.svg","components/CommandPanel/index.jsx","components/InputList/index.jsx","components/LoadingPanel/index.jsx","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","api/apiConstants.js","api/cyrest.js","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/SourceCard.jsx","components/TopPage/ErrorCard.jsx","components/TopPage/SourcePanel.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","index.js","assets/images/cytoscape-logo.svg"],"names":["module","exports","__webpack_require__","p","withStyles","theme","Object","objectSpread","button","padding","props","classes","react_default","a","createElement","className","Tooltip_default","title","placement","Button_default","variant","size","color","onClick","event","searchActions","clearAll","history","push","fullWidth","Refresh_default","MAX_DESCRIPTION_LENGTH","GENE_CARDS_URL","InputList","state","handleClick","id","console","log","tag","curState","_this","undefined","setState","defineProperty","getListItem","geneEntry","description","summary","length","substring","Fragment","ListItem_default","alignItems","key","_id","e","ListItemAvatar_default","Avatar_default","matched","ListItemText_default","primary","symbol","secondary","Typography_default","component","inline","name","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","target","Launch_default","ExpandLess_default","ExpandMore_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","map","dbName","pathways","Array","isArray","pwEntry","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","_this2","this","results","search","geneList","genes","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","return","React","Component","display","marginLeft","marginTop","backgroundColor","unmatched","paddingLeft","spacing","unit","LoadingPanel","message","CircularProgress_default","geneSymbol","setSelectedGenes","getChip","isValid","Chip_default","chip","avatar","label","root","justifyContent","margin","handleClear","InputPanel","components_CommandPanel","components_GeneList","Empty","alt","src","logo","index_es","Warning","cyInstance","BASE_STYLE","width","height","background","PRESET_LAYOUT","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","useEffect","on","nodes","removeClass","networkActions","deselectAll","warn","selected","data","selectNode","source","$","addClass","selectEdge","network","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","selectedGenes","isLayoutAvailable","isLayout","layout","elements","resized","resize","react_cytoscape_default","style","stylesheet","cy","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","GeneAnnotationList","toLowerCase","get","NodeProperties","makeStyles","container","overflow","list","subtitle","TableBrowser_GeneAnnotationList","assign","EdgeProperties","removeHtmlTags","dataType","d","startsWith","originalText","v","replace","NetworkProperties","originalCX","len","networkAttr","networkAttributes","n","useStyles","DISABLED_STYLE","TableBrowser","selectedNode","selectedEdge","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","TableBrowser_NetworkProperties","buttonIcon","uiState","disabled","isCytoscapeRunning","cyrestActions","importNetworkStarted","toolbar","grow","flexGrow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","others","objectWithoutProperties","Menu_default","noWrap","networkName","Ndex_OpenInButton","DEFAULT_RATIO","NetworkView","_useState","useState","_useState2","slicedToArray","setResize","Ndex_NetworkToolbar","react_split_es","sizes","direction","gutterSize","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","BASE_URL","importNetwork","cyRESTPort","payload","importNetworkUrl","CYREST_BASE_URL","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","ranges","sortBy","prop","_React$useState","_React$useState2","setValues","TextField_default","select","onChange","option","MenuItem_default","checkCytoscapeConnection","urlParams","statusUrl","cyRESTApi","has","catch","Error","then","res","handleErrors","running","uiStateActions","setCytoscapeStatus","error","networkAvatar","menuItem","menuText","plot","hits","sourceUUID","queryList","jobId","networkEntry","networkUUID","percentOverlap","edges","imageURL","val","setNetworkSize","networkFetchStarted","handleFetch","Ndex_Sorter","MenuList_default","Ndex","Ndex_NetworkList","Ndex_NetworkView","getTabs","sources","Tab_default","sourceName","getTabContent","index","Results_Ndex","tabs","setValue","searchResults","Results_Empty","Tabs_default","newValue","input","flex","iconButton","divider","geneTextRef","useRef","loadCSS","document","querySelector","Paper_default","elevation","InputBase_default","placeholder","queryGenes","readOnly","ref","getElementById","execCommand","Icon_default","classNames","icon","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","_this$props","open","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","hide","AppShell_GeneTextBox","aria-haspopup","openLink","HELP_URL","Help_default","fontSize","GITHUB_URL","github","headerLogo","url","window","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","withTheme","SettingsPanel","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","text","MoveToInbox_default","Mail_default","Settings_default","flexShrink","drawerHeader","mixins","content","contentShift","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","preventDefault","components_AppShell","components_InputPanel","components_Results","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","SET_NETWORK_SIZE","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","networkFetchSucceeded","networkFetchFailed","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","withRouter","connect","dispatch","bindActionCreators","sourceActions","components_HomePanel","EXAMPLES","anchorEl","query","pathParam","Boolean","handleExample","exampleIdx","handleSearch","sourceNames","geneListString","repaceDelimiters","split","currentTarget","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","onKeyDown","Search_default","CY_URL","NDEX_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","card","minWidth","maxWidth","minHeight","cardAction","media","objectFit","Card_default","CardActionArea_default","disableRipple","CardContent_default","gutterBottom","version","status","CardActions_default","handleReload","location","reload","CardMedia_default","disconnected","SourcePanel","TopPage_ErrorCard","sourceEntry","TopPage_SourceCard","uuid","StartPanel","params","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_SourcePanel","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","handleActions","_handleActions","DEF_STATE","URLSearchParams","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","PRESET_VS","vs","selector","css","background-color","background-opacity","border-width","network_handleActions","sourceId","isLayoutComplete","cx","convertCx2cyjs","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","updatedStyle","cyStyleFromNiceCX","styleUpdater","updatedNodes","adjustLayout","toConsumableArray","checkLayout","upperQuery","Set","gene","toUpperCase","x","y","ele","line-color","target-arrow-color","opacity","source_handleActions","isFetchingSource","cyrest_handleActions","rootReducer","combineReducers","cyrest","fetchNetwork","fetchUrl","searchGenes","searchUrl","MYGENE_BASE_URL","getSource","mode","response","ok","checkStatus","getResult","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","action","sourceJson","_ref","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","call","cySearchApi","sent","join","all","myGeneApi","filterGenes","put","type","uniqueGeneMap","t0","_marked2","statusJson","progress","sleep","ms","Promise","resolve","setTimeout","finished","statusRes","resultRes","resultJson","_context3","abrupt","_marked3","json","_context4","api","_marked4","_context5","_marked5","resultList","Map","notfound","set","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getUIState","cyrestport","addNumberVerification","patchedCX","forEach","aspect","numberVerification","longNumber","cyRestSaga_marked2","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","render","es","BrowserRouter","basename","process","Switch","Route","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23b4c5c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/disconnected.243cf575.svg\";","import React, { useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport './style.css'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles } from '@material-ui/core/styles'\nimport RefreshIcon from '@material-ui/icons/Refresh'\n\nconst styles = theme => ({\n  ...theme,\n  button: {\n    padding: '0.3em'\n  }\n})\n\nconst CommandPanel = props => {\n  const { classes } = props\n\n  const handleStartOver = event => {\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  return (\n    <div className=\"buttons\">\n      <Tooltip title=\"Restart Search\" placement=\"bottom\">\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          size=\"small\"\n          color=\"secondary\"\n          onClick={handleStartOver}\n          fullWidth\n        >\n          <RefreshIcon />\n        </Button>\n      </Tooltip>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(CommandPanel)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\nconst MAX_DESCRIPTION_LENGTH = 150\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass InputList extends React.Component {\n  state = {}\n\n  componentDidMount() {}\n\n  handleClick = id => {\n    console.log('OPEN = = = ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    console.log('STTTTT,', this.state)\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n    const notFound = results.notFound\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const values = []\n    for (let value of geneList.values()) {\n      values.push(value)\n    }\n    return (\n      <div className=\"gene-list-wrapper\">\n        <Typography variant=\"h6\">Search Result</Typography>\n        <Typography variant=\"body1\">\n          {'Matched Genes: ' + values.length + ''}\n        </Typography>\n\n        <div className=\"gene-list\">\n          <List>{values.map(entry => this.getListItem(entry, classes))}</List>\n        </div>\n\n        {notFound.length !== 0 ? this.getNotFound(notFound, classes) : null}\n      </div>\n    )\n  }\n\n  getListItem = (geneEntry, classes) => {\n    let description = geneEntry.summary\n    if (description.length > MAX_DESCRIPTION_LENGTH) {\n      description = description.substring(0, MAX_DESCRIPTION_LENGTH - 1) + '...'\n    }\n    return (\n      <React.Fragment>\n        <ListItem\n          alignItems=\"flex-start\"\n          key={geneEntry._id}\n          button\n          onClick={e => this.handleClick(geneEntry._id)}\n        >\n          <ListItemAvatar>\n            <Avatar className={classes.matched}>G</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={geneEntry.symbol}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  {geneEntry.name}\n                </Typography>\n                <Typography variant=\"caption\">{description}</Typography>\n              </React.Fragment>\n            }\n          />\n          <ListItemSecondaryAction className={classes.linkIcon}>\n            <IconButton\n              aria-label=\"Link to GeneCards\"\n              href={GENE_CARDS_URL + geneEntry.symbol}\n              target=\"_blank\"\n            >\n              <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                <LinkIcon />\n              </Tooltip>\n            </IconButton>\n          </ListItemSecondaryAction>\n          {this.state['pw_' + geneEntry._id] ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        {this.getListChildren(geneEntry, classes)}\n      </React.Fragment>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(InputList)\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('Clear selection', event.target.value)\n}\n\nconst GeneList = props => {\n  const { classes } = props\n\n  const results = props.search.results\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const values = []\n  for (let value of geneList.values()) {\n    values.push(value)\n  }\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {values.map(value => getChip(value, true, classes, props))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props) => {\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport SearchPanel from '../CommandPanel'\nimport InputList from '../InputList'\nimport LoadingPanel from '../LoadingPanel'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <SearchPanel {...props} />\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport logo from '../../assets/images/cytoscape-logo.svg'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <img alt=\"Home logo\" src={logo} className=\"home-logo\" />\n      <Typography variant=\"h2\">Cytoscape Cloud &alpha;</Typography>\n      <Typography variant=\"subtitle1\">\n        Enter / drag & drop a gene list to the text area\n      </Typography>\n\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from './Warning'\nlet cyInstance = null\n\nconst BASE_STYLE = { width: '100%', height: '100%', background: '#222233' }\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    console.log('This should run only once:  CyViewer Mounted:', cyInstance)\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    return () => {\n      console.log('unmount')\n    }\n  }, [])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > 5000) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  const selectedGenes = props.search.selectedGenes\n\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  const { resized } = props\n\n  console.log('%%%%%%%%%%resize:', resized)\n\n  if(cyInstance !== null) {\n    cyInstance.resize()\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={BASE_STYLE}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\nimport Chip from '../../GeneList'\n\nconst MAX_DESCRIPTION_LENGTH = 150\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    console.log('OPEN = = = ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toLowerCase()\n    console.log('** LIST = ', symbol, geneList)\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>G</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    height: '100%',\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst NodeProperties = props => {\n  const { node } = props\n  const keys = Object.keys(node)\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={node[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LIST_DATA_PREFIX = 'list_of'\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n\n  // Find network props\n  let len = originalCX.length\n  let networkAttr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry.networkAttributes) {\n      networkAttr = entry.networkAttributes\n      break\n    }\n  }\n\n  if (networkAttr === null) {\n    return\n  }\n\n  return (\n    <React.Fragment>\n      {networkAttr.map(entry => (\n        <ListItem key={entry.n}>\n          <ListItemText\n            inset\n            primary={removeHtmlTags(entry)}\n            secondary={entry.n}\n          />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nconst removeHtmlTags = entry => {\n  let dataType = entry.d\n\n  if (dataType === undefined) {\n    dataType = 'string'\n  }\n\n  if (dataType.startsWith(LIST_DATA_PREFIX)) {\n    return '(list not supported)'\n  }\n\n  const originalText = entry.v\n  if (originalText === null || originalText === undefined) {\n    return ''\n  } else {\n    return originalText.replace(/<(?:.|\\n)*?>/gm, ' ')\n  }\n}\n\nexport default NetworkProperties\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  console.log('Selected: ', node, edge, originalCX, network)\n\n  if (!node && !edge) {\n    return (\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <NetworkProperties originalCX={originalCX} />\n        </List>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst OpenInButton = (props) => {\n  const { classes, uiState, network } = props\n\n  console.log('OpenInButton props', props)\n\n  const handleImportNetwork = () => {\n    props.cyrestActions.importNetworkStarted(network.originalCX)\n  }\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      disabled={!uiState.isCytoscapeRunning}\n      onClick={handleImportNetwork}\n    >\n      Open in\n      <img alt=\"Cytoscape logo\" src={logo} className={classes.buttonIcon} />\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(OpenInButton)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport OpenInButton from './OpenInButton'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <IconButton\n        className={classes.menuButton}\n        color=\"primary\"\n        aria-label=\"Open drawer\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        className={classes.title}\n        variant=\"subtitle1\"\n        color=\"inherit\"\n        noWrap\n      >\n        {props.network.networkName}\n      </Typography>\n      <div className={classes.grow} />\n      <OpenInButton {...others} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [60, 40]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    console.log('+++++++!!!!! resizeE', e)\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={6}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\nexport const BASE_URL = 'http://secret.ndexbio.org:8090/'","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport './style.css'\nimport Sorter from './Sorter'\nimport ListItem from '@material-ui/core/ListItem'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst NETWORK_SIZE_TH = 5000\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    height: '4em',\n    '&:focus': {\n      backgroundColor: 'rgba(200,205,200,0.5)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst checkCytoscapeConnection = props => {\n  console.log(props.uiState.urlParams)\n  cyRESTApi\n    .status(\n      props.uiState.urlParams.has('cyrestport')\n        ? props.uiState.urlParams.get('cyrestport')\n        : 1234\n    )\n    .catch(e => {\n      throw Error(e)\n    })\n    .then(res => handleErrors(res))\n    .then(running => {\n      props.uiStateActions.setCytoscapeStatus(true)\n    })\n    .catch(error => {\n      props.uiStateActions.setCytoscapeStatus(false)\n    })\n}\n\nconst handleErrors = res => {\n  console.log('Calling!!', res)\n  if (res !== undefined) {\n    return true\n  }\n\n  return false\n}\n\nconst NetworkList = props => {\n  const { classes, hits, sourceUUID } = props\n\n  const geneList = props.search.queryList\n\n  const id = props.search.results.jobId\n\n  const handleFetch = (networkUUID, networkName, nodeCount, edgeCount) => {\n    props.networkActions.setNetworkSize({\n      nodeCount,\n      edgeCount\n    })\n\n    const networkSize = nodeCount + edgeCount\n\n    // Do not load if size is too big to render!\n    if (networkSize > NETWORK_SIZE_TH) {\n      return\n    }\n\n    checkCytoscapeConnection(props)\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList\n    })\n  }\n\n  const getListItem = (networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      percentOverlap,\n      nodes,\n      edges,\n      imageURL\n    } = networkEntry\n\n    return (\n      <MenuItem\n        className={classes.menuItem}\n        alignItems=\"flex-start\"\n        key={networkUUID}\n        onClick={val => handleFetch(networkUUID, description, nodes, edges)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.networkAvatar} src={imageURL} />\n        </ListItemAvatar>\n        <ListItemText\n          className={classes.menuText}\n          primary={description}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {'Nodes: ' + nodes + ', Edges: ' + edges}\n              </Typography>\n              <Typography variant=\"caption\">\n                {'UUID: ' + networkUUID}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n\n        <ListItemSecondaryAction className={classes.secondary}>\n          <div\n            style={{\n              background: 'teal',\n              color: 'white',\n              height: '2em',\n              width: percentOverlap * 3 + 'px'\n            }}\n          >\n            <Typography variant=\"body2\" style={{color: '#AAAAAA'}}>{percentOverlap + '%'}</Typography>\n          </div>\n        </ListItemSecondaryAction>\n      </MenuItem>\n    )\n  }\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <Sorter />\n      <div className=\"network-list\">\n        <MenuList>{hits.map(entry => getListItem(entry, classes))}</MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => (\n  <Split sizes={[50, 50]} gutterSize={7} className=\"ndex-base\">\n    <NetworkList {...props} />\n    <NetworkView {...props} />\n  </Split>\n)\n\nexport default Ndex\n","import React, { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport Ndex from './Ndex'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  const [value, setValue] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const { classes, ...others } = props\n\n  const searchResults = props.search.searchResults\n\n  console.log('Current Result:', searchResults)\n\n  // Display message panel if no result is available\n  if (searchResults === null) {\n    return <Empty />\n  }\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={value} onChange={handleChange}>\n          {getTabs(searchResults.sources)}\n        </Tabs>\n        {getTabContent(value, searchResults.sources, others)}\n      </div>\n    </div>\n  )\n}\n\nconst getTabs = sources => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const tabs = sources.map(source => (\n    <Tab key={source.sourceUUID} label={source.sourceName} />\n  ))\n\n  return tabs\n}\n\nconst getTabContent = (index, sources, props) => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const source = sources[index]\n  if (!source) {\n    return null\n  }\n\n  const { results, sourceUUID } = source\n  return <Ndex hits={results} sourceUUID={sourceUUID} {...props} />\n}\n\nexport default withStyles(styles)(Results)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '30vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {\n    }\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      <InputBase\n        id={ORIGINAL_GENE_TEXT}\n        className={classes.input}\n        placeholder=\"Genes entered\"\n        value={props.search.queryGenes}\n        readOnly\n        ref={geneTextRef}\n      />\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Copy\" placement=\"bottom\">\n        <IconButton\n          color=\"default\"\n          className={classes.iconButton}\n          aria-label=\"Directions\"\n          onClick={handleCopy}\n        >\n          <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n        </IconButton>\n      </Tooltip>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport github from '../../assets/images/github.svg'\nimport GeneTextBox from './GeneTextBox'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  logo: {\n    height: '2.5em',\n    marginRight: '0.7em'\n  },\n  headerLogo: {\n    height: '1.4em'\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div>\n            <Typography variant=\"h6\" color=\"inherit\">\n              NDEx Network Search:\n            </Typography>\n            <Typography variant=\"body1\">\n              Pathway Enrichment / Gene Neighborhoods / Keywords\n            </Typography>\n          </div>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(GITHUB_URL)}\n            >\n              <img\n                alt=\"GitHub logo\"\n                src={github}\n                className={classes.headerLogo}\n              />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://www.cytoscape.org/'\nconst GITHUB_URL = 'https://github.com/idekerlab/cytoscape-cloud-portal'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport HelpIcon from '@material-ui/icons/Help'\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['This', 'panel is', 'for advanced', 'options'].map(\n            (text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n        <Divider />\n        <List>\n          {['More options', 'Help', '??'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <SettingIcon /> : <HelpIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    // Call search\n\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  if (props.search.isFetching) {\n    return <LoadingPanel title=\"Loading Search Results\" />\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <InputPanel className=\"input\" {...props} />\n        <Results className=\"results\" {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const SET_NETWORK_SIZE = 'SET_NETWORK_SIZE'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const setNetworkSize = createAction(SET_NETWORK_SIZE)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\n\nconst MainContainer = props => <HomePanel {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Refresh'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst EXAMPLES = ['kras egfr cdk4 tp53', 'per1 per2 clock', 'mtor wnt1 igf1']\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      console.log('** Search route:', jobId, pathParam)\n      props.history.push(`/${jobId}`)\n    }\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx],\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => handleExample(0)}>Gene List 1</MenuItem>\n          <MenuItem onClick={() => handleExample(1)}>Gene List 2</MenuItem>\n          <MenuItem onClick={() => handleExample(2)}>Gene List 3</MenuItem>\n        </Menu>\n      </div>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton\n        color=\"primary\"\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <ClearIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = {\n  card: {\n    minWidth: 345,\n    maxWidth: 345,\n    minHeight: 140,\n    marginLeft: '1em'\n  },\n  cardAction: {\n    pointerEvents: 'none'\n  },\n  media: {\n    objectFit: 'cover'\n  }\n}\n\nconst SourceCard = props => {\n  const { classes, source } = props\n\n  return (\n    <Card elevation={1} className={classes.card}>\n      <CardActionArea className={classes.cardAction} disableRipple={true}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\n            {source.name}\n          </Typography>\n          <Typography gutterBottom variant=\"subheading\">\n            {'Version: ' + source.version}\n          </Typography>\n          <Typography component=\"p\">{source.description}</Typography>\n          <Typography variant=\"subtitle1\">\n            {'Service Status: ' + source.status}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions />\n    </Card>\n  )\n}\n\nSourceCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  source: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SourceCard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport disconnected from '../../assets/images/disconnected.svg'\n\nconst styles = {\n  card: {\n    minWidth: 345,\n    maxWidth: 345,\n    padding: '1em'\n  },\n  media: {\n    objectFit: 'fit'\n  }\n}\n\nconst ErrorCard = props => {\n  const { classes } = props\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Error loading source\"\n          className={classes.media}\n          height=\"300\"\n          src={disconnected}\n          title=\"Error loading source\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\" color={'error'}>\n            Failed to access services\n          </Typography>\n          <Typography component=\"p\" color={'error'}>\n            Something is wrong with tne search service. After a few moments,\n            please reload the page and try again.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          variant={'outlined'}\n          size=\"small\"\n          color=\"primary\"\n          onClick={handleReload}\n        >\n          Reload\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nconst handleReload = () => {\n  window.location.reload(true)\n}\n\nErrorCard.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ErrorCard)\n","import React from 'react'\nimport './style.css'\nimport SourceCard from './SourceCard'\nimport ErrorCard from './ErrorCard'\n\nconst SourcePanel = props => {\n  if (props.source === undefined || !props.source.sources) {\n    return null\n  }\n\n  const sources = props.source.sources\n\n  if (props.source.error !== null) {\n    return (\n      <div className=\"source-container\">\n        <ErrorCard />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"source-container\">\n      {sources.map(sourceEntry => (\n        <SourceCard key={sourceEntry.uuid} source={sourceEntry} />\n      ))}\n    </div>\n  )\n}\n\nexport default SourcePanel\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\nimport SourcePanel from './SourcePanel'\n\nimport queryString from 'query-string'\n\n\nconst StartPanel = props => {\n  useEffect(() => {\n\n\n    const params = queryString.parse(props.location.search)\n    console.log('**MOUNTED: path params:', params)\n\n    const genes = params.genes\n\n    if(genes !== undefined) {\n      const geneList = genes.split(',')\n      //TODO: call actual API\n      props.searchActions.setQuery(genes)\n      console.log('Got genes.  Start search now!', geneList)\n      props.searchActions.searchStarted({ geneList })\n\n    }\n\n    props.sourceActions.findSourceStarted()\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <SourcePanel {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\n\nconst TopPageContainer = props => <TopPage {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: []\n}\n\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      // return { ...state, queryGenes: '', queryList: [], results: null }\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      console.log('Setting selected gene:', payload)\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport { setSettingsOpen, setCytoscapeStatus } from '../actions/uiState'\n\nconst DEF_STATE = {\n  isCytoscapeRunning: false,\n  isSettingsOpen: false,\n  urlParams: new URLSearchParams(window.location.search)\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setCytoscapeStatus]: (state, payload) => {\n      console.log('Cytoscape is running = ', payload.payload)\n      return { ...state, isCytoscapeRunning: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\n\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  selectNode,\n  selectEdge,\n  deselectAll,\n  setNetworkSize\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: 0,\n        edgeCount: 0,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        originalCX: payload.cx,\n        network: convertCx2cyjs(payload.cx, state.queryGenes),\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: 0,\n        edgeCount: 0\n      }\n    },\n    [setNetworkSize]: (state, payload) => {\n      return {\n        ...state,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: updatedStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name.toUpperCase()\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n\n    if (position !== undefined) {\n      node.position = {\n        x: position.x * LAYOUT_SCALING_FACTOR,\n        y: position.y * LAYOUT_SCALING_FACTOR\n      }\n    }\n  }\n\n  return nodes\n}\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n\n  PRESET_VS.push({\n    selector: 'node:selected',\n    css: {\n      'background-color': SELECTION_COLOR,\n      width: ele => ele.width() * 1.3,\n      height: ele => ele.height() * 1.3\n    }\n  })\n\n  PRESET_VS.push({\n    selector: 'edge:selected',\n    css: {\n      'line-color': SELECTION_COLOR,\n      'target-arrow-color': SELECTION_COLOR,\n      opacity: 1.0,\n      width: 6\n    }\n  })\n\n  PRESET_VS.push({\n    selector: '.connected',\n    css: {\n      'background-color': SELECTION_COLOR,\n      'background-opacity': 1.0\n    }\n  })\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded\n} from '../actions/cyrest'\n\nconst defaultState = {\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        error: payload.error\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  console.log('Calling MyGene API:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  console.log('Calling sources:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = jobId => {\n  const resultUrl = BASE_URL + jobId\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  console.log('Sending query to search service:', queryObject)\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nexport default function* rootSaga() {\n  console.log('rootSaga reporting for duty')\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  console.log('## Search started.', action)\n\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    console.log('* Fetched sources:', sourceNames)\n  }\n\n  const geneListString = geneList.join()\n\n  console.log('## genes and sources:', geneList, sourceNames)\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n\n    const filtered = filterGenes(geneJson)\n\n    console.log('## Filtered genes:', filtered)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\nconst checkStatus = statusJson => {\n  console.log(statusJson.progress, statusJson.sources)\n\n  const { progress } = statusJson\n  if (progress === 100) {\n    return true\n  } else {\n    return false\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  try {\n    let finished = false\n    let statusJson = null\n\n    while (!finished) {\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      statusJson = yield call([statusRes, 'json'])\n      finished = checkStatus(statusJson)\n\n      if (finished) {\n        break\n      } else {\n        yield call(sleep, API_CALL_INTERVAL)\n      }\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n\n    console.log('## Result fetch:', statusJson, resultJson)\n\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    console.log('Action cont----------', action)\n\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: json.results })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  console.log('cyrestSaga reporting for duty')\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getUIState = state => state.uiState\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload\n\n  console.log('watchImportNetwork', action.payload)\n\n  try {\n    const uiState = yield select(getUIState)\n    const cyrestport = uiState.urlParams.has('cyrestport')\n      ? uiState.urlParams.get('cyrestport')\n      : 1234\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";"],"sourceRoot":""}
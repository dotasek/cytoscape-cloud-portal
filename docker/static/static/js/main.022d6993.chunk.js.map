{"version":3,"sources":["assets/images/github.svg","assets/images/ucsd-logo.svg","components/CommandPanel/index.jsx","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","api/apiConstants.js","api/cyrest.js","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","index.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","withStyles","theme","Object","objectSpread","button","padding","props","classes","react_default","a","createElement","className","Typography_default","variant","handleClick","geneSymbol","searchActions","setSelectedGenes","getChip","value","isValid","hitSets","color","has","symbol","Chip_default","chip","avatar","Avatar_default","label","onClick","key","root","display","justifyContent","margin","spacing","unit","search","network","results","hits","hitGenes","Set","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","sortBySymbol","b","matchedSorted","sort","unmatchedSorted","sorted","concat","toConsumableArray","event","console","log","target","handleClear","map","InputPanel","components_CommandPanel","components_GeneList","Empty","alt","src","logo","index_es","Warning","cyInstance","PRESET_LAYOUT","name","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","useEffect","on","nodes","removeClass","networkActions","deselectAll","e","warn","selected","this","data","selectNode","source","$","addClass","selectEdge","targets","selectedGenes","length","elements","animate","zoom","center","eles","duration","fit","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","width","height","background","backgroundColor","isLayoutAvailable","isLayout","layout","resize","filter","react_cytoscape_default","style","stylesheet","cy","LoadingPanel","title","message","CircularProgress_default","size","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","GENE_CARDS_URL","GeneAnnotationList","state","id","tag","curState","_this","setState","defineProperty","getListItem","geneEntry","description","summary","ListItem_default","alignItems","_id","ListItemAvatar_default","ListItemText_default","primary","secondary","Fragment","component","inline","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","Tooltip_default","placement","Launch_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","dbName","pathways","Array","isArray","pwEntry","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","toLowerCase","get","React","Component","marginLeft","marginTop","paddingLeft","NodeProperties","makeStyles","container","overflow","list","subtitle","TableBrowser_GeneAnnotationList","assign","EdgeProperties","removeHtmlTags","dataType","d","startsWith","originalText","v","replace","NetworkProperties","originalCX","len","networkAttr","networkAttributes","n","useStyles","DISABLED_STYLE","TableBrowser","selectedNode","selectedEdge","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","TableBrowser_NetworkProperties","buttonIcon","cyrest","handleImportNetwork","Button_default","disabled","available","Highlighter","FormGroup_default","row","FormControlLabel_default","control","Switch_default","checked","onChange","evt","uiStateActions","setHighlights","toolbar","grow","flexGrow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","others","objectWithoutProperties","Menu_default","noWrap","networkName","Ndex_Highlighter","Ndex_OpenInButton","DEFAULT_RATIO","NetworkView","_useState","useState","_useState2","slicedToArray","resized","setResize","Ndex_NetworkToolbar","react_split_es","sizes","direction","gutterSize","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","BASE_URL","status","cyRESTPort","statusUrl","CYREST_BASE_URL","fetch","method","importNetwork","payload","importNetworkUrl","headers","Accept","Content-Type","body","JSON","stringify","ranges","sortBy","prop","_React$useState","_React$useState2","setValues","TextField_default","select","option","MenuItem_default","networkAvatar","menuItem","menuText","plot","renderNetworkListItem","Ndex_Sorter","MenuList_default","Ndex","queryList","sourceUUID","jobId","handleErrors","res","handleFetch","networkUUID","setNetworkSize","cyRESTApi","port","catch","Error","then","running","cyrestActions","setAvailable","error","checkCytoscapeConnection","networkFetchStarted","Ndex_NetworkList","networkEntry","percentOverlap","edges","imageURL","val","Ndex_NetworkView","importNetworkStarted","getTabs","sources","Tab_default","sourceName","getTabContent","index","Results_Ndex","tabs","setValue","searchResults","Results_Empty","Tabs_default","newValue","input","flex","iconButton","divider","geneTextRef","useRef","loadCSS","document","querySelector","Paper_default","elevation","InputBase_default","placeholder","queryGenes","readOnly","ref","getElementById","execCommand","Icon_default","classNames","icon","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","handleHomeButton","clearAll","history","_this$props","open","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","hide","homeButton","AppShell_GeneTextBox","aria-haspopup","openLink","HELP_URL","Help_default","fontSize","url","window","easing","sharp","leavingScreen","easeOut","enteringScreen","headerLogo","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","setServicesListOpen","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","ExpandLess_default","ExpandMore_default","sourceEntry","version","uuid","text","Settings_default","LINKS","link","github","flexShrink","drawerHeader","mixins","content","contentShift","cyrestport","URLSearchParams","location","setPort","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","preventDefault","components_AppShell","components_InputPanel","components_Results","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","SET_HIGHLIGHTS","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","SET_NETWORK_SIZE","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","networkFetchSucceeded","networkFetchFailed","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","SET_PORT","SET_AVAILABLE","withRouter","connect","dispatch","bindActionCreators","sourceActions","components_HomePanel","EXAMPLES","anchorEl","query","pathParam","Boolean","handleExample","exampleIdx","handleSearch","sourceNames","geneListString","repaceDelimiters","split","currentTarget","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","onKeyDown","Search_default","Refresh_default","CY_URL","NDEX_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","handleActions","_handleActions","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","background-color","background-opacity","border-width","fadedNode","opacity","fadedEdge","highlight","activeObject","overlay-color","overlay-padding","overlay-opacity","network_handleActions","sourceId","isLayoutComplete","cx","convertCx2cyjs","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","properties","upperQuery","gene","toUpperCase","source_handleActions","isFetchingSource","cyrest_handleActions","rootReducer","combineReducers","fetchNetwork","fetchUrl","searchGenes","searchUrl","MYGENE_BASE_URL","getSource","mode","response","ok","checkStatus","getResult","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","action","sourceJson","_ref","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","call","cySearchApi","sent","join","all","myGeneApi","filterGenes","put","type","uniqueGeneMap","t0","_marked2","statusJson","progress","sleep","ms","Promise","resolve","setTimeout","finished","statusRes","resultRes","resultJson","_context3","abrupt","_marked3","params","json","_context4","api","_marked4","_context5","_marked5","resultList","Map","notfound","set","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","forEach","aspect","numberVerification","longNumber","cyRestSaga_marked2","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","render","es","BrowserRouter","basename","process","Switch","Route","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.022d6993.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import React, { useEffect } from 'react'\nimport './style.css'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  ...theme,\n  button: {\n    padding: '0.3em'\n  }\n})\n\nconst CommandPanel = props => {\n  const { classes } = props\n\n  return (\n    <div className=\"gene-list-header\">\n      <Typography variant=\"subtitle2\">Search genes:</Typography>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(CommandPanel)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('#### Clear selection', event.target.value)\n  // props.searchActions.setSelectedGenes([])\n}\n\nconst GeneList = props => {\n  const { classes, search, network } = props\n\n  const results = search.results\n  const hits = network.hitGenes\n  const hitSets = new Set(hits)\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort(sortBySymbol)\n  const unmatchedSorted = unmatched.sort(sortBySymbol)\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {sorted.map(value => getChip(value, true, classes, props, hitSets))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport SearchPanel from '../CommandPanel'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <SearchPanel {...props} />\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport logo from '../../assets/images/cytoscape-logo.svg'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <img alt=\"Home logo\" src={logo} className=\"home-logo\" />\n      <Typography variant=\"h2\">Cytoscape Cloud &alpha;</Typography>\n      <Typography variant=\"subtitle1\">\n        Enter / drag & drop a gene list to the text area\n      </Typography>\n\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from './Warning'\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    console.log('This should run only once:  CyViewer Mounted:', cyInstance)\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    return () => {\n      console.log('unmount')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if(targets === null || targets === undefined || targets.length === 0) {\n      return\n    }\n\n    const selected = cyInstance.elements(\n      'node[name = \"' + targets[0] + '\"]'\n    )\n\n\n    if(selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    } else {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 10\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > 5000) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network.backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance.elements().removeClass('faded')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    console.log('OPEN === ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toLowerCase()\n    console.log('** LIST = ', symbol, geneList)\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>G</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    height: '100%',\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst NodeProperties = props => {\n  const { node } = props\n  const keys = Object.keys(node)\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={node[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LIST_DATA_PREFIX = 'list_of'\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n\n  // Find network props\n  let len = originalCX.length\n  let networkAttr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry.networkAttributes) {\n      networkAttr = entry.networkAttributes\n      break\n    }\n  }\n\n  if (networkAttr === null) {\n    return\n  }\n\n  return (\n    <React.Fragment>\n      {networkAttr.map(entry => (\n        <ListItem key={entry.n}>\n          <ListItemText\n            inset\n            primary={removeHtmlTags(entry)}\n            secondary={entry.n}\n          />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nconst removeHtmlTags = entry => {\n  let dataType = entry.d\n\n  if (dataType === undefined) {\n    dataType = 'string'\n  }\n\n  if (dataType.startsWith(LIST_DATA_PREFIX)) {\n    return '(list not supported)'\n  }\n\n  const originalText = entry.v\n  if (originalText === null || originalText === undefined) {\n    return ''\n  } else {\n    return originalText.replace(/<(?:.|\\n)*?>/gm, ' ')\n  }\n}\n\nexport default NetworkProperties\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  if (!node && !edge) {\n    return (\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <NetworkProperties originalCX={originalCX} />\n        </List>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst OpenInButton = (props) => {\n  const { classes, cyrest, handleImportNetwork } = props\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      disabled={!cyrest.available}\n      onClick={handleImportNetwork}\n    >\n      Open in\n      <img alt=\"Cytoscape logo\" src={logo} className={classes.buttonIcon} />\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(OpenInButton)\n","import React from 'react'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\n\nconst Highlighter = props => {\n  const highlights = props.uiState.highlights\n  const handleChange = (evt, checked) => {\n    props.uiStateActions.setHighlights(checked)\n  }\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<Switch checked={highlights} onChange={handleChange} />}\n        label=\"Query Genes\"\n      />\n    </FormGroup>\n  )\n}\n\nexport default Highlighter\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport OpenInButton from './OpenInButton'\nimport Highlighter from './Highlighter'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <IconButton\n        className={classes.menuButton}\n        color=\"primary\"\n        aria-label=\"Open drawer\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        className={classes.title}\n        variant=\"subtitle1\"\n        color=\"inherit\"\n        noWrap\n      >\n        {props.network.networkName}\n      </Typography>\n      <div className={classes.grow} />\n      <Highlighter {...others} />\n      <OpenInButton {...others} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [60, 40]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={6}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\nexport const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport './style.css'\nimport Sorter from './Sorter'\nimport ListItem from '@material-ui/core/ListItem'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst NETWORK_SIZE_TH = 5000\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    height: '4em',\n    '&:focus': {\n      backgroundColor: 'rgba(200,205,200,0.5)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst checkCytoscapeConnection = props => {\n  console.log(props.uiState.urlParams)\n  cyRESTApi\n    .status(\n      props.uiState.urlParams.has('cyrestport')\n        ? props.uiState.urlParams.get('cyrestport')\n        : 1234\n    )\n    .catch(e => {\n      throw Error(e)\n    })\n    .then(res => handleErrors(res))\n    .then(running => {\n      props.uiStateActions.setCytoscapeStatus(true)\n    })\n    .catch(error => {\n      props.uiStateActions.setCytoscapeStatus(false)\n    })\n}\n\nconst handleErrors = res => {\n  console.log('Calling!!', res)\n  if (res !== undefined) {\n    return true\n  }\n\n  return false\n}\n\nconst NetworkList = props => {\n  const { classes, hits, renderNetworkListItem, network } = props\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <Sorter />\n\n      <div className=\"network-list\">\n        <MenuList>\n          {hits.map(entry => renderNetworkListItem(entry, classes))}\n        </MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as cyRESTApi from '../../../api/cyrest'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const checkCytoscapeConnection = props => {\n    cyRESTApi\n      .status(props.cyrest.port)\n      .catch(e => {\n        throw Error(e)\n      })\n      .then(res => handleErrors(res))\n      .then(running => {\n        props.cyrestActions.setAvailable(true)\n      })\n      .catch(error => {\n        props.cyrestActions.setAvailable(false)\n      })\n  }\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (networkUUID, networkName, nodeCount, edgeCount, hitGenes) => {\n    props.networkActions.setNetworkSize({\n      nodeCount,\n      edgeCount\n    })\n\n    const networkSize = nodeCount + edgeCount\n\n    // Do not load if size is too big to render!\n    if (networkSize > NETWORK_SIZE_TH) {\n      return\n    }\n\n    checkCytoscapeConnection(props)\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(false)\n\n    // Reset selection\n    props.searchActions.setSelectedGenes([])\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes\n    })\n  }\n\n  const handleImportNetwork = () => {\n    props.cyrestActions.importNetworkStarted(props.network.originalCX)\n  }\n\n  const renderNetworkListItem = (networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      percentOverlap,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes\n    } = networkEntry\n\n    return (\n      <MenuItem\n        className={classes.menuItem}\n        alignItems=\"flex-start\"\n        key={networkUUID}\n        onClick={val =>\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n        }\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.networkAvatar} src={imageURL} />\n        </ListItemAvatar>\n        <ListItemText\n          className={classes.menuText}\n          primary={description}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {'Nodes: ' + nodes + ', Edges: ' + edges}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n\n        <ListItemSecondaryAction className={classes.secondary}>\n          <div\n            style={{\n              background: 'teal',\n              color: 'white',\n              height: '1.5em',\n              width: percentOverlap * 3 + 'px'\n            }}\n          >\n            <Typography variant=\"body2\" style={{ color: '#AAAAAA' }}>\n              {percentOverlap + '%'}\n            </Typography>\n          </div>\n        </ListItemSecondaryAction>\n      </MenuItem>\n    )\n  }\n\n  return (\n    <Split sizes={[50, 50]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList renderNetworkListItem={renderNetworkListItem} {...props} />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\nexport default Ndex\n","import React, { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport Ndex from './Ndex'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  const [value, setValue] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const { classes, ...others } = props\n\n  const searchResults = props.search.searchResults\n\n\n  // Display message panel if no result is available\n  if (searchResults === null) {\n    return <Empty />\n  }\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={value} onChange={handleChange}>\n          {getTabs(searchResults.sources)}\n        </Tabs>\n        {getTabContent(value, searchResults.sources, others)}\n      </div>\n    </div>\n  )\n}\n\nconst getTabs = sources => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const tabs = sources.map(source => (\n    <Tab key={source.sourceUUID} label={source.sourceName} />\n  ))\n\n  return tabs\n}\n\nconst getTabContent = (index, sources, props) => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const source = sources[index]\n  if (!source) {\n    return null\n  }\n\n  const { results, sourceUUID } = source\n  return <Ndex hits={results} sourceUUID={sourceUUID} {...props} />\n}\n\nexport default withStyles(styles)(Results)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '30vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {\n    }\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      <InputBase\n        id={ORIGINAL_GENE_TEXT}\n        className={classes.input}\n        placeholder=\"Genes entered\"\n        value={props.search.queryGenes}\n        readOnly\n        ref={geneTextRef}\n      />\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Copy\" placement=\"bottom\">\n        <IconButton\n          color=\"default\"\n          className={classes.iconButton}\n          aria-label=\"Directions\"\n          onClick={handleCopy}\n        >\n          <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n        </IconButton>\n      </Tooltip>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/ndex-logo.svg'\nimport GeneTextBox from './GeneTextBox'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  homeButton: {\n    height: '2.5em',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  logo: {\n    height: '2.5em',\n    marginRight: '0.7em'\n  },\n  headerLogo: {\n    height: '1.4em'\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Button\n            color=\"inherit\"\n            aria-label=\"Home\"\n            onClick={this.handleHomeButton}\n          >\n            <img alt=\"NDEx logo\" src={logo} className={classes.homeButton} />\n          </Button>\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\">\n                NDEx\n              </Typography>\n              <Typography variant=\"body1\">Network Search</Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"default\" />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://cytoscape.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport github from '../../assets/images/github.svg'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  if (props.search.isFetching) {\n    return <LoadingPanel title=\"Loading Search Results\" />\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <InputPanel className=\"input\" {...props} />\n        <Results className=\"results\" {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const SET_NETWORK_SIZE = 'SET_NETWORK_SIZE'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const setNetworkSize = createAction(SET_NETWORK_SIZE)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\nexport const setAvailable = createAction(SET_AVAILABLE)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\n\nconst MainContainer = props => <HomePanel {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Refresh'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst EXAMPLES = ['kras egfr cdk4 tp53', 'per1 per2 clock', 'mtor wnt1 igf1']\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      console.log('** Search route:', jobId, pathParam)\n      props.history.push(`/${jobId}`)\n    }\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx],\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => handleExample(0)}>Gene List 1</MenuItem>\n          <MenuItem onClick={() => handleExample(1)}>Gene List 2</MenuItem>\n          <MenuItem onClick={() => handleExample(2)}>Gene List 3</MenuItem>\n        </Menu>\n      </div>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton\n        color=\"primary\"\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <ClearIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\n\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      //TODO: call actual API\n      props.searchActions.setQuery(genes)\n      console.log('Got genes.  Start search now!', geneList)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\n\nconst TopPageContainer = props => <TopPage {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: []\n}\n\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      // return { ...state, queryGenes: '', queryList: [], results: null }\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      console.log('Setting selected gene:', payload)\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: false\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\n\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  selectNode,\n  selectEdge,\n  deselectAll,\n  setNetworkSize\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.2\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.2\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: 0,\n        edgeCount: 0,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue'\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      try {\n        const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n\n        network = cyjsNetwork\n      } catch (err) {\n        // This is an error state\n        console.warn('Could not convert given CX to CYJS:', err)\n        throw new Error('Could not convert given CX to CYJS:', err)\n      }\n\n      const backgroundColor = getBackGround(originalCX)\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: 0,\n        edgeCount: 0\n      }\n    },\n    [setNetworkSize]: (state, payload) => {\n      return {\n        ...state,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name.toUpperCase()\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n\n    // if (position !== undefined) {\n    //   node.position = {\n    //     x: position.x * LAYOUT_SCALING_FACTOR,\n    //     y: position.y * LAYOUT_SCALING_FACTOR\n    //   }\n    // }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  setAvailable,\n  setPort\n} from '../actions/cyrest'\n\nconst defaultState = {\n  available: false,\n  port: 1234,\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        error: payload.error\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [setAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return { ...state, available: payload.payload }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  console.log('Calling MyGene API:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = jobId => {\n  const resultUrl = BASE_URL + jobId\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  console.log('Sending query to search service:', queryObject)\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\nconst checkStatus = statusJson => {\n  const { progress } = statusJson\n  if (progress === 100) {\n    return true\n  } else {\n    return false\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  try {\n    let finished = false\n    let statusJson = null\n\n    while (!finished) {\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      statusJson = yield call([statusRes, 'json'])\n      finished = checkStatus(statusJson)\n\n      if (finished) {\n        break\n      } else {\n        yield call(sleep, API_CALL_INTERVAL)\n      }\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n\n    console.log('Network fetched: ',json)\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: json.results })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}
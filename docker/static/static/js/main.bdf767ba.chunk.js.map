{"version":3,"sources":["assets/images/github.svg","assets/images/ucsd-logo.svg","components/CommandPanel/index.jsx","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","api/apiConstants.js","api/cyrest.js","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","index.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","withStyles","theme","Object","objectSpread","button","padding","props","classes","react_default","a","createElement","className","Typography_default","variant","handleClick","geneSymbol","searchActions","setSelectedGenes","getChip","value","isValid","Chip_default","chip","avatar","Avatar_default","label","symbol","onClick","key","root","display","justifyContent","margin","spacing","unit","results","search","geneList","genes","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","push","err","return","event","console","log","target","handleClear","map","InputPanel","components_CommandPanel","components_GeneList","Empty","alt","src","logo","index_es","Warning","cyInstance","BASE_STYLE","width","height","background","PRESET_LAYOUT","name","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","useEffect","on","nodes","removeClass","networkActions","deselectAll","e","warn","selected","this","data","selectNode","source","$","addClass","selectEdge","network","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","selectedGenes","isLayoutAvailable","isLayout","layout","elements","length","resized","resize","react_cytoscape_default","style","stylesheet","cy","LoadingPanel","color","title","message","CircularProgress_default","size","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","GENE_CARDS_URL","GeneAnnotationList","state","id","tag","curState","_this","setState","defineProperty","getListItem","geneEntry","description","summary","ListItem_default","alignItems","_id","ListItemAvatar_default","matched","ListItemText_default","primary","secondary","Fragment","component","inline","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","Tooltip_default","placement","Launch_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","dbName","pathways","Array","isArray","pwEntry","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","toLowerCase","get","React","Component","marginLeft","marginTop","backgroundColor","unmatched","paddingLeft","NodeProperties","makeStyles","container","overflow","list","subtitle","TableBrowser_GeneAnnotationList","assign","EdgeProperties","removeHtmlTags","dataType","d","startsWith","originalText","v","replace","NetworkProperties","originalCX","len","networkAttr","networkAttributes","n","useStyles","DISABLED_STYLE","TableBrowser","selectedNode","selectedEdge","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","TableBrowser_NetworkProperties","buttonIcon","uiState","Button_default","disabled","isCytoscapeRunning","cyrestActions","importNetworkStarted","toolbar","grow","flexGrow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","others","objectWithoutProperties","Menu_default","noWrap","networkName","Ndex_OpenInButton","DEFAULT_RATIO","NetworkView","_useState","useState","_useState2","slicedToArray","setResize","Ndex_NetworkToolbar","react_split_es","sizes","direction","gutterSize","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","BASE_URL","importNetwork","cyRESTPort","payload","importNetworkUrl","CYREST_BASE_URL","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","ranges","sortBy","prop","_React$useState","_React$useState2","setValues","TextField_default","select","onChange","option","MenuItem_default","checkCytoscapeConnection","urlParams","statusUrl","cyRESTApi","has","catch","Error","then","res","handleErrors","running","uiStateActions","setCytoscapeStatus","error","networkAvatar","menuItem","menuText","plot","hits","sourceUUID","queryList","jobId","networkEntry","networkUUID","percentOverlap","edges","imageURL","val","setNetworkSize","networkFetchStarted","handleFetch","Ndex_Sorter","MenuList_default","Ndex","Ndex_NetworkList","Ndex_NetworkView","getTabs","sources","Tab_default","sourceName","getTabContent","index","Results_Ndex","tabs","setValue","searchResults","Results_Empty","Tabs_default","newValue","input","flex","iconButton","divider","geneTextRef","useRef","loadCSS","document","querySelector","Paper_default","elevation","InputBase_default","placeholder","queryGenes","readOnly","ref","getElementById","execCommand","Icon_default","classNames","icon","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","handleHomeButton","clearAll","history","_this$props","open","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","hide","homeButton","AppShell_GeneTextBox","aria-haspopup","openLink","HELP_URL","Help_default","fontSize","url","window","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","headerLogo","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","setServicesListOpen","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","ExpandLess_default","ExpandMore_default","sourceEntry","version","uuid","status","text","Settings_default","LINKS","link","github","flexShrink","drawerHeader","mixins","content","contentShift","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","preventDefault","components_AppShell","components_InputPanel","components_Results","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","SET_SERVICES_LIST_OPEN","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","SET_NETWORK_SIZE","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","networkFetchSucceeded","networkFetchFailed","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","withRouter","connect","dispatch","bindActionCreators","sourceActions","components_HomePanel","EXAMPLES","anchorEl","query","pathParam","Boolean","handleExample","exampleIdx","handleSearch","sourceNames","geneListString","repaceDelimiters","split","currentTarget","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","onKeyDown","Search_default","Refresh_default","CY_URL","NDEX_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","parse","location","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","handleActions","_handleActions","DEF_STATE","URLSearchParams","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","PRESET_VS","vs","selector","css","background-color","background-opacity","border-width","network_handleActions","sourceId","isLayoutComplete","cx","convertCx2cyjs","niceCX","rawCXtoNiceCX","elementsObj","cyElementsFromNiceCX","updatedStyle","styleUpdater","updatedNodes","adjustLayout","toConsumableArray","checkLayout","upperQuery","Set","gene","toUpperCase","x","y","ele","line-color","target-arrow-color","opacity","source_handleActions","isFetchingSource","cyrest_handleActions","rootReducer","combineReducers","cyrest","fetchNetwork","fetchUrl","searchGenes","searchUrl","MYGENE_BASE_URL","getSource","mode","response","ok","checkStatus","getResult","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","action","sourceJson","_ref","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","call","cySearchApi","sent","join","all","myGeneApi","filterGenes","put","type","uniqueGeneMap","t0","_marked2","statusJson","progress","sleep","ms","Promise","resolve","setTimeout","finished","statusRes","resultRes","resultJson","_context3","abrupt","_marked3","params","json","_context4","api","_marked4","_context5","_marked5","resultList","Map","notfound","set","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getUIState","cyrestport","addNumberVerification","patchedCX","forEach","aspect","numberVerification","longNumber","cyRestSaga_marked2","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","render","es","BrowserRouter","basename","process","Switch","Route","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdf767ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import React, { useEffect } from 'react'\nimport './style.css'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  ...theme,\n  button: {\n    padding: '0.3em'\n  }\n})\n\nconst CommandPanel = props => {\n  const { classes } = props\n\n  return (\n    <div className=\"gene-list-header\">\n      <Typography variant=\"subtitle2\">Search genes:</Typography>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(CommandPanel)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('Clear selection', event.target.value)\n}\n\nconst GeneList = props => {\n  const { classes } = props\n\n  const results = props.search.results\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const values = []\n  for (let value of geneList.values()) {\n    values.push(value)\n  }\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {values.map(value => getChip(value, true, classes, props))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props) => {\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport SearchPanel from '../CommandPanel'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <SearchPanel {...props} />\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport logo from '../../assets/images/cytoscape-logo.svg'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <img alt=\"Home logo\" src={logo} className=\"home-logo\" />\n      <Typography variant=\"h2\">Cytoscape Cloud &alpha;</Typography>\n      <Typography variant=\"subtitle1\">\n        Enter / drag & drop a gene list to the text area\n      </Typography>\n\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from './Warning'\nlet cyInstance = null\n\nconst BASE_STYLE = { width: '100%', height: '100%', background: '#222233' }\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    console.log('This should run only once:  CyViewer Mounted:', cyInstance)\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    return () => {\n      console.log('unmount')\n    }\n  }, [])\n\n  console.log('** Network rendering start:', props)\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > 5000) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  const selectedGenes = props.search.selectedGenes\n\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  const { resized } = props\n\n  console.log('%%%%%%%%%%resize:', resized)\n\n  if(cyInstance !== null) {\n    cyInstance.resize()\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={BASE_STYLE}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    console.log('OPEN === ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toLowerCase()\n    console.log('** LIST = ', symbol, geneList)\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>G</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    height: '100%',\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst NodeProperties = props => {\n  const { node } = props\n  const keys = Object.keys(node)\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={node[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LIST_DATA_PREFIX = 'list_of'\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n\n  // Find network props\n  let len = originalCX.length\n  let networkAttr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry.networkAttributes) {\n      networkAttr = entry.networkAttributes\n      break\n    }\n  }\n\n  if (networkAttr === null) {\n    return\n  }\n\n  return (\n    <React.Fragment>\n      {networkAttr.map(entry => (\n        <ListItem key={entry.n}>\n          <ListItemText\n            inset\n            primary={removeHtmlTags(entry)}\n            secondary={entry.n}\n          />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nconst removeHtmlTags = entry => {\n  let dataType = entry.d\n\n  if (dataType === undefined) {\n    dataType = 'string'\n  }\n\n  if (dataType.startsWith(LIST_DATA_PREFIX)) {\n    return '(list not supported)'\n  }\n\n  const originalText = entry.v\n  if (originalText === null || originalText === undefined) {\n    return ''\n  } else {\n    return originalText.replace(/<(?:.|\\n)*?>/gm, ' ')\n  }\n}\n\nexport default NetworkProperties\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  console.log('Selected: ', node, edge, originalCX, network)\n\n  if (!node && !edge) {\n    return (\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <NetworkProperties originalCX={originalCX} />\n        </List>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst OpenInButton = props => {\n  const { classes, uiState, network } = props\n\n  const handleImportNetwork = () => {\n    props.cyrestActions.importNetworkStarted(network.originalCX)\n  }\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      disabled={!uiState.isCytoscapeRunning}\n      onClick={handleImportNetwork}\n    >\n      Open in\n      <img alt=\"Cytoscape logo\" src={logo} className={classes.buttonIcon} />\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(OpenInButton)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport OpenInButton from './OpenInButton'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <IconButton\n        className={classes.menuButton}\n        color=\"primary\"\n        aria-label=\"Open drawer\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        className={classes.title}\n        variant=\"subtitle1\"\n        color=\"inherit\"\n        noWrap\n      >\n        {props.network.networkName}\n      </Typography>\n      <div className={classes.grow} />\n      <OpenInButton {...others} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [60, 40]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    console.log('+++++++!!!!! resizeE', e)\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={6}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\nexport const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport './style.css'\nimport Sorter from './Sorter'\nimport ListItem from '@material-ui/core/ListItem'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst NETWORK_SIZE_TH = 5000\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    height: '4em',\n    '&:focus': {\n      backgroundColor: 'rgba(200,205,200,0.5)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst checkCytoscapeConnection = props => {\n  console.log(props.uiState.urlParams)\n  cyRESTApi\n    .status(\n      props.uiState.urlParams.has('cyrestport')\n        ? props.uiState.urlParams.get('cyrestport')\n        : 1234\n    )\n    .catch(e => {\n      throw Error(e)\n    })\n    .then(res => handleErrors(res))\n    .then(running => {\n      props.uiStateActions.setCytoscapeStatus(true)\n    })\n    .catch(error => {\n      props.uiStateActions.setCytoscapeStatus(false)\n    })\n}\n\nconst handleErrors = res => {\n  console.log('Calling!!', res)\n  if (res !== undefined) {\n    return true\n  }\n\n  return false\n}\n\nconst NetworkList = props => {\n  const { classes, hits, sourceUUID } = props\n\n  const geneList = props.search.queryList\n\n  const id = props.search.results.jobId\n\n  const handleFetch = (networkUUID, networkName, nodeCount, edgeCount) => {\n    props.networkActions.setNetworkSize({\n      nodeCount,\n      edgeCount\n    })\n\n    const networkSize = nodeCount + edgeCount\n\n    // Do not load if size is too big to render!\n    if (networkSize > NETWORK_SIZE_TH) {\n      return\n    }\n\n    checkCytoscapeConnection(props)\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList\n    })\n  }\n\n  const getListItem = (networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      percentOverlap,\n      nodes,\n      edges,\n      imageURL\n    } = networkEntry\n\n    return (\n      <MenuItem\n        className={classes.menuItem}\n        alignItems=\"flex-start\"\n        key={networkUUID}\n        onClick={val => handleFetch(networkUUID, description, nodes, edges)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.networkAvatar} src={imageURL} />\n        </ListItemAvatar>\n        <ListItemText\n          className={classes.menuText}\n          primary={description}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {'Nodes: ' + nodes + ', Edges: ' + edges}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n\n        <ListItemSecondaryAction className={classes.secondary}>\n          <div\n            style={{\n              background: 'teal',\n              color: 'white',\n              height: '1.5em',\n              width: percentOverlap * 3 + 'px'\n            }}\n          >\n            <Typography variant=\"body2\" style={{color: '#AAAAAA'}}>{percentOverlap + '%'}</Typography>\n          </div>\n        </ListItemSecondaryAction>\n      </MenuItem>\n    )\n  }\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <Sorter />\n      <div className=\"network-list\">\n        <MenuList>{hits.map(entry => getListItem(entry, classes))}</MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => (\n  <Split sizes={[50, 50]} gutterSize={7} className=\"ndex-base\">\n    <NetworkList {...props} />\n    <NetworkView {...props} />\n  </Split>\n)\n\nexport default Ndex\n","import React, { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport Ndex from './Ndex'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  const [value, setValue] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const { classes, ...others } = props\n\n  const searchResults = props.search.searchResults\n\n  console.log('Current Result:', searchResults)\n\n  // Display message panel if no result is available\n  if (searchResults === null) {\n    return <Empty />\n  }\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={value} onChange={handleChange}>\n          {getTabs(searchResults.sources)}\n        </Tabs>\n        {getTabContent(value, searchResults.sources, others)}\n      </div>\n    </div>\n  )\n}\n\nconst getTabs = sources => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const tabs = sources.map(source => (\n    <Tab key={source.sourceUUID} label={source.sourceName} />\n  ))\n\n  return tabs\n}\n\nconst getTabContent = (index, sources, props) => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const source = sources[index]\n  if (!source) {\n    return null\n  }\n\n  const { results, sourceUUID } = source\n  return <Ndex hits={results} sourceUUID={sourceUUID} {...props} />\n}\n\nexport default withStyles(styles)(Results)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '30vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {\n    }\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      <InputBase\n        id={ORIGINAL_GENE_TEXT}\n        className={classes.input}\n        placeholder=\"Genes entered\"\n        value={props.search.queryGenes}\n        readOnly\n        ref={geneTextRef}\n      />\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Copy\" placement=\"bottom\">\n        <IconButton\n          color=\"default\"\n          className={classes.iconButton}\n          aria-label=\"Directions\"\n          onClick={handleCopy}\n        >\n          <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n        </IconButton>\n      </Tooltip>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/ndex-logo.svg'\nimport GeneTextBox from './GeneTextBox'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  homeButton: {\n    height: '2.5em',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  logo: {\n    height: '2.5em',\n    marginRight: '0.7em'\n  },\n  headerLogo: {\n    height: '1.4em'\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Button\n            color=\"inherit\"\n            aria-label=\"Home\"\n            onClick={this.handleHomeButton}\n          >\n            <img alt=\"NDEx logo\" src={logo} className={classes.homeButton} />\n          </Button>\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\">\n                NDEx\n              </Typography>\n              <Typography variant=\"body1\">Network Search</Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"default\" />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://cytoscape.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport github from '../../assets/images/github.svg'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    // Call search\n\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  if (props.search.isFetching) {\n    return <LoadingPanel title=\"Loading Search Results\" />\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <InputPanel className=\"input\" {...props} />\n        <Results className=\"results\" {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const SET_NETWORK_SIZE = 'SET_NETWORK_SIZE'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const setNetworkSize = createAction(SET_NETWORK_SIZE)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\n\nconst MainContainer = props => <HomePanel {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Refresh'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst EXAMPLES = ['kras egfr cdk4 tp53', 'per1 per2 clock', 'mtor wnt1 igf1']\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      console.log('** Search route:', jobId, pathParam)\n      props.history.push(`/${jobId}`)\n    }\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx],\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => handleExample(0)}>Gene List 1</MenuItem>\n          <MenuItem onClick={() => handleExample(1)}>Gene List 2</MenuItem>\n          <MenuItem onClick={() => handleExample(2)}>Gene List 3</MenuItem>\n        </Menu>\n      </div>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton\n        color=\"primary\"\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <ClearIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\n\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      //TODO: call actual API\n      props.searchActions.setQuery(genes)\n      console.log('Got genes.  Start search now!', geneList)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\n\nconst TopPageContainer = props => <TopPage {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: []\n}\n\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      // return { ...state, queryGenes: '', queryList: [], results: null }\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      console.log('Setting selected gene:', payload)\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setCytoscapeStatus,\n  setServicesListOpen\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isCytoscapeRunning: false,\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  urlParams: new URLSearchParams(window.location.search)\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setCytoscapeStatus]: (state, payload) => {\n      console.log('Cytoscape is running = ', payload.payload)\n      return { ...state, isCytoscapeRunning: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\n\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  selectNode,\n  selectEdge,\n  deselectAll,\n  setNetworkSize\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: 0,\n        edgeCount: 0,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      try {\n        const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n        network = cyjsNetwork\n      } catch (err) {\n        // This is an error state\n        console.warn('Could not convert given CX to CYJS:', err)\n        throw new Error('Could not convert given CX to CYJS:', err)\n      }\n      return {\n        ...state,\n        originalCX,\n        network,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: 0,\n        edgeCount: 0\n      }\n    },\n    [setNetworkSize]: (state, payload) => {\n      return {\n        ...state,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  // const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: updatedStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name.toUpperCase()\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n\n    if (position !== undefined) {\n      node.position = {\n        x: position.x * LAYOUT_SCALING_FACTOR,\n        y: position.y * LAYOUT_SCALING_FACTOR\n      }\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  PRESET_VS.push({\n    selector: 'node:selected',\n    css: {\n      'background-color': SELECTION_COLOR,\n      width: ele => ele.width() * 1.3,\n      height: ele => ele.height() * 1.3\n    }\n  })\n\n  PRESET_VS.push({\n    selector: 'edge:selected',\n    css: {\n      'line-color': SELECTION_COLOR,\n      'target-arrow-color': SELECTION_COLOR,\n      opacity: 1.0,\n      width: 6\n    }\n  })\n\n  PRESET_VS.push({\n    selector: '.connected',\n    css: {\n      'background-color': SELECTION_COLOR,\n      'background-opacity': 1.0\n    }\n  })\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded\n} from '../actions/cyrest'\n\nconst defaultState = {\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        error: payload.error\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  console.log('Calling MyGene API:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = jobId => {\n  const resultUrl = BASE_URL + jobId\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  console.log('Sending query to search service:', queryObject)\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\nconst checkStatus = statusJson => {\n  const { progress } = statusJson\n  if (progress === 100) {\n    return true\n  } else {\n    return false\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  try {\n    let finished = false\n    let statusJson = null\n\n    while (!finished) {\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      statusJson = yield call([statusRes, 'json'])\n      finished = checkStatus(statusJson)\n\n      if (finished) {\n        break\n      } else {\n        yield call(sleep, API_CALL_INTERVAL)\n      }\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n\n    console.log('Network fetched: ',json)\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: json.results })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getUIState = state => state.uiState\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload\n  try {\n    const uiState = yield select(getUIState)\n    const cyrestport = uiState.urlParams.has('cyrestport')\n      ? uiState.urlParams.get('cyrestport')\n      : 1234\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}
{"version":3,"sources":["assets/images/cytoscape-logo.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/ndex-logo-mono.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","components/CommandPanel/index.jsx","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","api/apiConstants.js","api/cyrest.js","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/MessageSnackbar.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","withStyles","theme","Object","objectSpread","button","padding","props","classes","react_default","a","createElement","className","Typography_default","variant","handleClick","geneSymbol","searchActions","setSelectedGenes","getChip","value","isValid","hitSets","color","has","symbol","Chip_default","chip","avatar","Avatar_default","label","onClick","key","root","display","justifyContent","margin","spacing","unit","search","network","results","hits","hitGenes","Set","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","sortBySymbol","b","matchedSorted","sort","unmatchedSorted","sorted","concat","toConsumableArray","event","console","log","target","handleClear","map","InputPanel","components_CommandPanel","components_GeneList","Empty","index_es","Warning","cyInstance","PRESET_LAYOUT","name","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","useEffect","on","nodes","removeClass","networkActions","deselectAll","e","warn","selected","this","data","selectNode","source","$","addClass","selectEdge","uiStateActions","setHighlights","targets","selectedGenes","length","elements","animate","zoom","center","eles","duration","fit","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","width","height","background","backgroundColor","isLayoutAvailable","isLayout","layout","resize","filter","react_cytoscape_default","style","stylesheet","cy","LoadingPanel","title","message","CircularProgress_default","size","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","GENE_CARDS_URL","GeneAnnotationList","state","id","tag","curState","_this","setState","defineProperty","getListItem","geneEntry","description","summary","ListItem_default","alignItems","_id","ListItemAvatar_default","ListItemText_default","primary","secondary","Fragment","component","inline","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","Tooltip_default","placement","Launch_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","dbName","pathways","Array","isArray","pwEntry","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","toLowerCase","get","React","Component","marginLeft","marginTop","paddingLeft","NodeProperties","makeStyles","container","overflow","list","subtitle","TableBrowser_GeneAnnotationList","assign","EdgeProperties","removeHtmlTags","dataType","d","startsWith","originalText","v","replace","NetworkProperties","originalCX","len","networkAttr","networkAttributes","Math","random","n","useStyles","DISABLED_STYLE","TableBrowser","selectedNode","selectedEdge","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","TableBrowser_NetworkProperties","buttonIcon","minWidth","cyrest","handleImportNetwork","disableFocusListener","Button_default","disabled","uuid","available","alt","src","logo","Highlighter","FormGroup_default","row","FormControlLabel_default","control","Checkbox_default","checked","onChange","evt","marginRight","ndexSaveActions","setNDExModalOpen","NDExSave","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","saveToNDEx","cx","token","handleClose","networkUrl","_this2","_this$props","ndexSave","profile","authorization","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","details","error","JSON","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","google_login_default","clientId","render","renderProps","buttonText","CredentialsSignOn","_this$props2","handleCredentialsSignOn","button_cls","onSubmit","type","placeholder","required","autoComplete","NDExSignIn","_React$Component3","handleError","inherits","createClass","_this$props3","onLoginSuccess","item","xs","NDExSignInModal_GoogleSignOn","NDExSignInModal_CredentialsSignOn","NDExSignInModal","onLogout","_this3","setProfile","preventDefault","credentialsSignOn","handleOnSuccess","resp","googleSignOn","setErrorMessage","_this$props4","others","objectWithoutProperties","open","ndexModal","onClose","aria-labelledby","image","NDExSignInModal_NDExSignIn","errorMessage","components_NDExSave","toolbar","grow","flexGrow","menuButton","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","buttons","border","openIcon","networkName","noWrap","Ndex_Highlighter","components_NDExSignInModal","OpenInBrowser_default","Ndex_OpenInNDExButton","Ndex_OpenInCytoscapeButton","DEFAULT_RATIO","NetworkView","_useState","useState","_useState2","slicedToArray","resized","setResize","Ndex_NetworkToolbar","react_split_es","sizes","direction","gutterSize","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","ranges","sortBy","prop","_React$useState","_React$useState2","setValues","TextField_default","select","option","MenuItem_default","networkAvatar","menuItem","menuText","plot","renderNetworkListItem","query","MenuList_default","BASE_URL","importNetwork","cyRESTPort","payload","importNetworkUrl","CYREST_BASE_URL","fetch","method","headers","Accept","Content-Type","body","Ndex","queryList","sourceUUID","jobId","checkCytoscapeConnection","statusUrl","cyRESTApi","port","catch","Error","then","res","handleErrors","running","cyrestActions","setAvailable","updateHistory","networkUUID","searchResults","sourceName","selectedSource","history","Ndex_NetworkList","querySize","networkEntry","edges","imageURL","rank","val","networkFetchStarted","handleFetch","Ndex_NetworkView","importNetworkStarted","sourceId","TabContent","Results_Ndex","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","newValue","setSelectedSource","Results_Empty","selectedSourceName","Tabs_default","networkClear","Tab_default","Results_TabContent","MessageSnackbar","reason","setOpen","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","action","Close_default","input","flex","iconButton","divider","geneTextRef","useRef","queryGenes","queryText","setQuery","_useState3","_useState4","loadCSS","document","querySelector","handleSearch","sourceNames","geneListString","split","clearAll","searchStarted","AppShell_MessageSnackbar","Paper_default","elevation","getElementById","execCommand","Icon_default","classNames","icon","Delete_default","InputBase_default","onKeyDown","ref","Search_default","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","handleHomeButton","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","hide","Menu_default","AppShell_GeneTextBox","aria-haspopup","Home_default","fontSize","openLink","HELP_URL","Help_default","NDEX_URL","ndexLogo","url","window","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","setServicesListOpen","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","ExpandLess_default","ExpandMore_default","sourceEntry","version","status","text","index","Settings_default","LINKS","link","github","flexShrink","drawerHeader","mixins","content","contentShift","cyrestport","URLSearchParams","location","setPort","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","_props$search","searchResult","components_AppShell","components_InputPanel","components_Results","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","createAction","clearQuery","searchSucceeded","searchFailed","setSearchResult","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","SET_HIGHLIGHTS","SET_SELECTED_SOURCE","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","networkFetchSucceeded","networkFetchFailed","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","SET_PORT","SET_AVAILABLE","SET_NDEX_MODAL_OPEN","SET_PROFILE","CREDENTIALS_SIGN_ON","GOOGLE_SIGN_ON","SAVE_TO_NDEX","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","_ref","pathname","ReactGA","set","page","pageview","components_HomePanel","EXAMPLES","examples","anchorEl","pathParam","Boolean","repaceDelimiters","currentTarget","core_Menu_default","transformOrigin","example","exampleIdx","CY_URL","UCSD_URL","Footer","cyLogo","ucsdLogo","StartPanel","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchFinished","searchStatus","resultList","handleActions","_handleActions","forEach","singleResult","newList","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","background-color","background-opacity","border-width","fadedNode","opacity","fadedEdge","highlight","overlay-color","overlay-padding","overlay-opacity","activeObject","network_handleActions","isLayoutComplete","convertCx2cyjs","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","properties","upperQuery","gene","toUpperCase","source_handleActions","isFetchingSource","cyrest_handleActions","ndexSave_handleActions","rootReducer","combineReducers","fetchNetwork","fetchUrl","searchGenes","MYGENE_BASE_URL","getSource","mode","response","ok","checkStatus","getResult","arguments","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","sourceJson","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","cySearchApi","sent","join","all","myGeneApi","filterGenes","put","uniqueGeneMap","t0","_marked2","sleep","ms","Promise","resolve","setTimeout","statusRes","statusJson","_resultRes","_resultJson","_progress","_resultRes2","json","resultRes","resultJson","_context3","progress","abrupt","_marked3","params","_context4","api","_marked4","reducedSources","orderedSources","_context5","includes","firstEl","secondEl","indexOf","_marked5","Map","notfound","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","aspect","numberVerification","longNumber","cyRestSaga_marked2","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","ndexSaveSaga_marked","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","endsWith","ndexSaveSaga_marked2","user","pwd","auth","responseJson","basicAuthSignIn","accountName","password","btoa","firstName","ndexSaveSaga_marked3","responseText","networkURL","ndexSaveSaga_marked4","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","es","react_router_dom","basename","process","react_router","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08ece9f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import React from 'react'\nimport './style.css'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  ...theme,\n  button: {\n    padding: '0.3em'\n  }\n})\n\nconst CommandPanel = props => {\n  const { classes } = props\n\n  return (\n    <div className=\"gene-list-header\">\n      <Typography variant=\"subtitle1\">Query Genes</Typography>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(CommandPanel)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('#### Clear selection', event.target.value)\n  // props.searchActions.setSelectedGenes([])\n}\n\nconst GeneList = props => {\n  const { classes, search, network } = props\n\n  const results = search.results\n  const hits = network.hitGenes\n  const hitSets = new Set(hits)\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort(sortBySymbol)\n  const unmatchedSorted = unmatched.sort(sortBySymbol)\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {sorted.map(value => getChip(value, true, classes, props, hitSets))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport SearchPanel from '../CommandPanel'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <SearchPanel {...props} />\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from './Warning'\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\nexport const MAX_NETWORK_SIZE = 5000\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    console.log('@@@@@@@@@@@@@@@@@This should run only once:  CyViewer Mounted:', cyInstance)\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    return () => {\n      console.log('unmount')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined || targets.length === 0) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    } else {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 10\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network.backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    console.log('OPEN === ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toLowerCase()\n    console.log('** LIST = ', symbol, geneList)\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>G</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    height: '100%',\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst NodeProperties = props => {\n  const { node } = props\n  const keys = Object.keys(node)\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={node[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LIST_DATA_PREFIX = 'list_of'\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n\n  // Find network props\n  let len = originalCX.length\n  let networkAttr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry.networkAttributes) {\n      networkAttr = entry.networkAttributes\n      break\n    }\n  }\n\n  if (networkAttr === null) {\n    return\n  }\n\n  return (\n    <React.Fragment>\n      {networkAttr.map(entry => (\n        <ListItem key={Math.random()}>\n          <ListItemText\n            inset\n            primary={removeHtmlTags(entry)}\n            secondary={entry.n}\n          />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nconst removeHtmlTags = entry => {\n  let dataType = entry.d\n\n  if (dataType === undefined) {\n    dataType = 'string'\n  }\n\n  if (dataType.startsWith(LIST_DATA_PREFIX)) {\n    return '(list not supported)'\n  }\n\n  const originalText = entry.v\n  if (originalText === null || originalText === undefined) {\n    return ''\n  } else {\n    return originalText.replace(/<(?:.|\\n)*?>/gm, ' ')\n  }\n}\n\nexport default NetworkProperties\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  if (!node && !edge) {\n    return (\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <NetworkProperties originalCX={originalCX} />\n        </List>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    minWidth: '5em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  const { classes, cyrest, handleImportNetwork } = props\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open this network in Cytoscape Desktop\"\n      placement=\"bottom\"\n    >\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"default\"\n          disabled={\n            !(props.network.uuid && props.network.uuid.length > 0) ||\n            !cyrest.available\n          }\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"Cytoscape logo\" src={logo} className={classes.buttonIcon} />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInCytoscapeButton)\n","import React from 'react'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst Highlighter = props => {\n  const highlights = props.uiState.highlights\n  const handleChange = (evt, checked) => {\n    props.uiStateActions.setHighlights(checked)\n  }\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<Checkbox checked={highlights} onChange={handleChange} />}\n        label=\"Query Genes\"\n      />\n    </FormGroup>\n  )\n}\n\nexport default Highlighter\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport { withStyles } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    marginRight: '0.5em',\n    minWidth: '5em'\n  }\n})\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"default\"\n          disabled={!(props.network.uuid && props.network.uuid.length > 0)}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={logo} className={classes.buttonIcon} />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInNDExButton)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { ndexSave, network } = this.props\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    console.log('NDExSave render token' + token)\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button href={networkUrl} target=\"_blank\">\n              Open in NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default withStyles(styles)(NDExSave)\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nconst styles = theme => ({})\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const { ndexSave } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...others} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NDExSignInModal)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport Highlighter from './Highlighter'\nimport { Tooltip } from '@material-ui/core'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenIcon from '@material-ui/icons/OpenInBrowser'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <Highlighter {...others} />\n      <NDExSignInModal {...others}>\n        <NDExSave {...others} />\n      </NDExSignInModal>\n      <div className={classes.buttons}>\n        <OpenIcon color={'inherit'} className={classes.openIcon}/>\n        <OpenInNDExButton {...others} />\n        <OpenInCytoscapeButton {...others} />\n      </div>\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [60, 40]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={6}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport './style.css'\nimport Sorter from './Sorter'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst NetworkList = props => {\n  const { classes, hits, renderNetworkListItem, network, search } = props\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  const query = search.results.genes\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <div className=\"network-list\">\n        <MenuList>\n          {hits.map(entry => renderNetworkListItem(query.size, entry, classes))}\n        </MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\nexport const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n//export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport { ListItem } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Paper from '@material-ui/core/Paper'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const checkCytoscapeConnection = props => {\n    cyRESTApi\n      .status(props.cyrest.port)\n      .catch(e => {\n        throw Error(e)\n      })\n      .then(res => handleErrors(res))\n      .then(running => {\n        props.cyrestActions.setAvailable(true)\n      })\n      .catch(error => {\n        props.cyrestActions.setAvailable(false)\n      })\n  }\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    checkCytoscapeConnection(props)\n\n\n    // Reset selection\n    props.searchActions.setSelectedGenes([])\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank\n    } = networkEntry\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={val =>\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n        }\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={'Rank ' + (rank) + ': ' + description}\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" className={classes.inline}>\n                  {'N: ' + nodes + ', E: ' + edges}\n                </Typography>\n              </Tooltip>\n              {'  Hit/Query = ' + hitGenes.length + '/' + querySize}\n            </React.Fragment>\n          }\n        >\n        </ListItemText>\n      </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList renderNetworkListItem={renderNetworkListItem} {...props} />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\nexport default Ndex\n","import React from 'react'\nimport Ndex from './Ndex'\n\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const { results } = props\n\n  if (results === null || results === undefined) {\n    return <LoadingPanel title={'Loading results'} message={'Please wait...'} />\n  } else {\n    const { sourceUUID } = results\n    return <Ndex hits={results.results} sourceUUID={sourceUUID} {...props} />\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, idx)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  const { classes, ...others } = props\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const { searchResults } = props.search\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name} />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    props.setOpen(false)\n  }\n\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.open}\n      autoHideDuration={4000}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">Genes are copied to clipboard!</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search.queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/ /)\n\n    props.searchActions.clearAll()\n    props.history.push('/')\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar open={open} setOpen={setOpen} />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/ndex-logo-mono.svg'\nimport GeneTextBox from './GeneTextBox'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport HomeIcon from '@material-ui/icons/Home'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  ndexLogo: {\n    height: '1em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n\n\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\">\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={this.handleHomeButton}\n            >\n              <HomeIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              color=\"default\"\n              aria-label=\"Home\"\n              onClick={() => openLink(NDEX_URL)}\n            >\n              <img alt=\"NDEx logo\" src={logo} className={classes.ndexLogo} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport github from '../../assets/images/github.svg'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const { isFetching, searchResult } = props.search\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props}>\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <InputPanel className=\"input\" {...props} />\n        <Results className=\"results\" {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\nexport const setAvailable = createAction(SET_AVAILABLE)\n","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      console.log('(((((((((((((MainPathname =  ====', pathname)\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <HomePanel {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as examples from './example-genes'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      console.log('** Search route:', jobId, pathParam)\n      props.history.push(`/${jobId}`)\n    }\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx],\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                Gene List {idx + 1}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\n\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      //TODO: call actual API\n      props.searchActions.setQuery(genes)\n      console.log('Got genes.  Start search now!', geneList)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <TopPage {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  searchFinished: [],\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      console.log('------------ Start  1 ------------------::')\n      const sources = payload.payload.sourceNames\n      const sourceLen = sources.length\n      const searchFinished = {}\n      sources.forEach(source => {\n        searchFinished[source] = false\n      })\n\n      return {\n        ...state,\n        isSearching: true,\n        searchFinished,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      console.log('Setting selected gene:', payload)\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n\n      const newList = [...state.resultList, singleResult]\n      console.log('------------ Setting single ------------------::', newList)\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: true,\n  selectedSource: ''\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNode,\n  selectEdge,\n  deselectAll\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue'\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n\n    // if (position !== undefined) {\n    //   node.position = {\n    //     x: position.x * LAYOUT_SCALING_FACTOR,\n    //     y: position.y * LAYOUT_SCALING_FACTOR\n    //   }\n    // }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  setAvailable,\n  setPort\n} from '../actions/cyrest'\n\nconst defaultState = {\n  available: false,\n  port: 1234,\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        error: payload.error\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [setAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return { ...state, available: payload.payload }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  console.log('QQQQQQQQQQQQQQ URL = ', resultUrl, sourceName)\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  console.log('Sending query to search service:', queryObject)\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n\n    // TODO: this is a hack\n\n    console.log('Getting source list: ', sourceNames)\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\nconst checkStatus = statusJson => {\n  console.log('Status:::', statusJson)\n  const { progress } = statusJson\n  if (progress === 100) {\n    return true\n  } else {\n    return false\n  }\n}\n\nconst checkProgress = statusJson => {\n  const sources = statusJson.source\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    console.log('Network fetched: ', json)\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n    console.log('responseJson', responseJson)\n\n    console.log('headers', resp.headers.get('Authorization'))\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID } from './analytics'\n\nReactGA.initialize(GA_DEV_ID, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  console.log('*** Event handler:::', event)\n\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // Production\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}
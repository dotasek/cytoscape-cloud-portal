{"version":3,"sources":["assets/images/github.svg","assets/images/ucsd-logo.svg","assets/images/dna.svg","assets/images/idea.svg","assets/images/disconnected.svg","components/CommandPanel/index.jsx","components/InputList/index.jsx","components/LoadingPanel/index.jsx","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/Ndex/OpenInButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/SourceCard.jsx","components/TopPage/ErrorCard.jsx","components/TopPage/SourcePanel.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/index.js","api/apiConstants.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","index.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","withStyles","theme","Object","objectSpread","button","padding","props","classes","react_default","a","createElement","className","Tooltip_default","title","placement","Button_default","variant","size","color","onClick","event","searchActions","clearAll","history","push","fullWidth","Refresh_default","MAX_DESCRIPTION_LENGTH","GENE_CARDS_URL","InputList","state","handleClick","id","console","log","tag","curState","_this","undefined","setState","defineProperty","getListItem","geneEntry","description","summary","length","substring","Fragment","ListItem_default","alignItems","key","_id","e","ListItemAvatar_default","Avatar_default","matched","ListItemText_default","primary","symbol","secondary","Typography_default","component","inline","name","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","target","Launch_default","ExpandLess_default","ExpandMore_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","map","dbName","pathways","Array","isArray","pwEntry","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","_this2","this","results","search","geneList","genes","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","return","React","Component","display","marginLeft","marginTop","backgroundColor","unmatched","paddingLeft","spacing","unit","LoadingPanel","message","CircularProgress_default","geneSymbol","setSelectedGenes","getChip","isValid","Chip_default","chip","avatar","label","root","justifyContent","margin","handleClear","InputPanel","components_CommandPanel","components_GeneList","Empty","alt","src","logo","index_es","buttonIcon","height","uiState","disabled","isCytoscapeRunning","toolbar","background","grow","flexGrow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","width","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","others","objectWithoutProperties","Toolbar_default","Menu_default","noWrap","network","networkName","Ndex_OpenInButton","Warning","cyInstance","BASE_STYLE","PRESET_LAYOUT","COCENTRIC_LAYOUT","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","useEffect","on","networkActions","deselectAll","warn","selected","data","selectNode","selectEdge","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","selectedGenes","isLayoutAvailable","isLayout","layout","elements","react_cytoscape_default","style","stylesheet","cy","NetworkViewer","Ndex_NetworkToolbar","isFetching","components_LoadingPanel","Results_CytoscapeViewer","TableBrowser","selectedNode","NetworkView","react_split_es","sizes","direction","gutterSize","Ndex_NetworkViewer","Results_TableBrowser","assign","ranges","sortBy","prop","_React$useState","useState","_React$useState2","slicedToArray","setValues","TextField_default","select","onChange","option","MenuItem_default","handleErrors","res","subtitle","networkAvatar","deepOrange","menuItem","& $primary, & $icon","menuText","plot","hits","sourceUUID","queryList","jobId","handleFetch","networkUUID","setNetworkSize","fetch","mode","catch","Error","then","running","uiStateActions","setCytoscapeStatus","error","checkCytoscapeConnection","networkFetchStarted","Ndex_Sorter","MenuList_default","networkEntry","percentOverlap","nodes","edges","val","Ndex","Ndex_NetworkList","Ndex_NetworkView","getTabs","sources","tabs","source","Tab_default","sourceName","getTabContent","index","Results_Ndex","_useState","_useState2","setValue","searchResults","Results_Empty","Tabs_default","newValue","input","flex","iconButton","divider","geneTextRef","useRef","loadCSS","document","querySelector","Paper_default","elevation","InputBase_default","placeholder","queryGenes","readOnly","ref","getElementById","execCommand","Icon_default","classNames","icon","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","_this$props","open","AppBar_default","appBar","appBarShift","disableGutters","hide","AppShell_GeneTextBox","aria-haspopup","openLink","HELP_URL","Help_default","fontSize","GITHUB_URL","github","headerLogo","url","window","easing","sharp","duration","leavingScreen","concat","easeOut","enteringScreen","withTheme","SettingsPanel","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","text","MoveToInbox_default","Mail_default","Settings_default","flexShrink","drawerHeader","mixins","content","contentShift","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","preventDefault","components_AppShell","components_InputPanel","components_Results","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","SET_NETWORK_SIZE","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","networkFetchSucceeded","networkFetchFailed","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","withRouter","connect","dispatch","bindActionCreators","sourceActions","components_HomePanel","EXAMPLES","anchorEl","query","pathParam","Boolean","handleExample","exampleIdx","repaceDelimiters","replace","currentTarget","core_Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","onClose","sourceNames","geneListString","split","Search_default","CY_URL","NDEX_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","IMAGES","dna","idea","randomImage","idx","Math","floor","random","card","minWidth","maxWidth","minHeight","media","objectFit","Card_default","CardActionArea_default","CardMedia_default","CardContent_default","gutterBottom","version","status","CardActions_default","handleReload","location","reload","disconnected","SourcePanel","TopPage_ErrorCard","sourceEntry","TopPage_SourceCard","uuid","StartPanel","params","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_SourcePanel","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","handleActions","_handleActions","payload","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","PRESET_VS","vs","selector","css","background-color","background-opacity","border-width","network_handleActions","sourceId","isLayoutComplete","convertCx2cyjs","cx","selectedEdge","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","updatedStyle","cyStyleFromNiceCX","styleUpdater","updatedNodes","adjustLayout","toConsumableArray","checkLayout","len","upperQuery","Set","gene","toUpperCase","has","x","y","source_handleActions","isFetchingSource","rootReducer","combineReducers","BASE_URL","fetchNetwork","fetchUrl","method","headers","Content-Type","searchGenes","searchUrl","MYGENE_BASE_URL","getSource","response","ok","checkStatus","getResult","postQuery","sourceList","queryObject","header","Headers","body","JSON","stringify","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","action","sourceJson","_ref","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","call","cySearchApi","sent","join","all","myGeneApi","get","filterGenes","put","type","uniqueGeneMap","t0","_marked2","statusJson","progress","sleep","ms","Promise","resolve","setTimeout","finished","statusRes","resultRes","resultJson","_context3","abrupt","_marked3","json","_context4","api","_marked4","_context5","_marked5","resultList","Map","notfound","set","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","render","es","BrowserRouter","basename","process","Switch","Route","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f6b693a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/dna.9c807c9d.svg\";","module.exports = __webpack_public_path__ + \"static/media/idea.c30260f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/disconnected.243cf575.svg\";","import React, { useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport './style.css'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles } from '@material-ui/core/styles'\nimport RefreshIcon from '@material-ui/icons/Refresh'\n\nconst styles = theme => ({\n  ...theme,\n  button: {\n    padding: '0.3em'\n  }\n})\n\nconst CommandPanel = props => {\n  const { classes } = props\n\n  const handleStartOver = event => {\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  return (\n    <div className=\"buttons\">\n      <Tooltip title=\"Restart Search\" placement=\"bottom\">\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          size=\"small\"\n          color=\"secondary\"\n          onClick={handleStartOver}\n          fullWidth\n        >\n          <RefreshIcon />\n        </Button>\n      </Tooltip>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(CommandPanel)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\n\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\nconst MAX_DESCRIPTION_LENGTH = 150\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass InputList extends React.Component {\n  state = {}\n\n  componentDidMount() {}\n\n  handleClick = id => {\n    console.log('OPEN = = = ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    console.log('STTTTT,', this.state)\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n    const notFound = results.notFound\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const values = []\n    for (let value of geneList.values()) {\n      values.push(value)\n    }\n    return (\n      <div className=\"gene-list-wrapper\">\n        <Typography variant=\"h6\">Search Result</Typography>\n        <Typography variant=\"body1\">\n          {'Matched Genes: ' + values.length + ''}\n        </Typography>\n\n        <div className=\"gene-list\">\n          <List>{values.map(entry => this.getListItem(entry, classes))}</List>\n        </div>\n\n        {notFound.length !== 0 ? this.getNotFound(notFound, classes) : null}\n      </div>\n    )\n  }\n\n  getListItem = (geneEntry, classes) => {\n    let description = geneEntry.summary\n    if (description.length > MAX_DESCRIPTION_LENGTH) {\n      description = description.substring(0, MAX_DESCRIPTION_LENGTH - 1) + '...'\n    }\n    return (\n      <React.Fragment>\n        <ListItem\n          alignItems=\"flex-start\"\n          key={geneEntry._id}\n          button\n          onClick={e => this.handleClick(geneEntry._id)}\n        >\n          <ListItemAvatar>\n            <Avatar className={classes.matched}>G</Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={geneEntry.symbol}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  {geneEntry.name}\n                </Typography>\n                <Typography variant=\"caption\">{description}</Typography>\n              </React.Fragment>\n            }\n          />\n          <ListItemSecondaryAction className={classes.linkIcon}>\n            <IconButton\n              aria-label=\"Link to GeneCards\"\n              href={GENE_CARDS_URL + geneEntry.symbol}\n              target=\"_blank\"\n            >\n              <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                <LinkIcon />\n              </Tooltip>\n            </IconButton>\n          </ListItemSecondaryAction>\n          {this.state['pw_' + geneEntry._id] ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        {this.getListChildren(geneEntry, classes)}\n      </React.Fragment>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(InputList)\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nimport FaceIcon from '@material-ui/icons/Face'\nimport DoneIcon from '@material-ui/icons/Done'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('Clear selection', event.target.value)\n}\n\nconst GeneList = props => {\n  const { classes } = props\n\n  const results = props.search.results\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  const notFound = results.notFound\n\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const values = []\n  for (let value of geneList.values()) {\n    values.push(value)\n  }\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {values.map(value => getChip(value, true, classes, props))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props) => {\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color=\"primary\"\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport SearchPanel from '../CommandPanel'\nimport InputList from '../InputList'\nimport LoadingPanel from '../LoadingPanel'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <SearchPanel {...props} />\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport logo from '../../assets/images/cytoscape-logo.svg'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <img alt=\"Home logo\" src={logo} className=\"home-logo\" />\n      <Typography variant=\"h2\">Cytoscape Cloud &alpha;</Typography>\n      <Typography variant=\"subtitle1\">\n        Enter / drag & drop a gene list to the text area\n      </Typography>\n\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst OpenInButton = props => {\n  const { classes, uiState } = props\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      disabled={!uiState.isCytoscapeRunning}\n    >\n      Open in\n      <img alt=\"Cytoscape logo\" src={logo} className={classes.buttonIcon} />\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(OpenInButton)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport OpenInButton from './OpenInButton'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <Toolbar className={classes.toolbar}>\n      <IconButton\n        className={classes.menuButton}\n        color=\"primary\"\n        aria-label=\"Open drawer\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography\n        className={classes.title}\n        variant=\"subtitle1\"\n        color=\"inherit\"\n        noWrap\n      >\n        {props.network.networkName}\n      </Typography>\n      <div className={classes.grow} />\n      <OpenInButton {...others} />\n    </Toolbar>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from \"./Warning\";\nlet cyInstance = null\n\nconst BASE_STYLE = { width: '100%', height: '100%', background: '#222233' }\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    console.log('This should run only once:  CyViewer Mounted:', cyInstance)\n\n    cyInstance.on('tap', function(event) {\n      try {\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        const selected = this.data()\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    return () => {\n      console.log('unmount')\n    }\n  }, [])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > 5000) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  const selectedGenes = props.search.selectedGenes\n\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable) {\n    layout = COSE_SETTING\n  } else if (cyjs.elements.length > 1000) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={BASE_STYLE}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport NetworkToolbar from './NetworkToolbar'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n    <NetworkToolbar {...props} />\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\n/**\n * Dummy table browser\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const network = props.network\n\n  if (network === null) {\n    return <div />\n  }\n\n  const node = network.selectedNode\n  if (node === null || node === undefined) {\n    return <div />\n  }\n\n\n  return (\n    <div>\n      <Typography variant=\"h6\">{node.name}</Typography>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => (\n  <Split sizes={[70, 30]} direction=\"vertical\" gutterSize={6}>\n    <NetworkViewer {...props} />\n    <TableBrowser className=\"property-view\" {...props} />\n  </Split>\n)\n\nexport default NetworkView\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'name'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <Toolbar className={classes.toolbar}>\n      <div className={classes.grow} />\n\n      <TextField\n        select\n        label=\"Sort by:\"\n        value={values.sortBy}\n        onChange={handleChange('sortBy')}\n        className={classes.sortBy}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n    </Toolbar>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\nimport deepOrange from '@material-ui/core/colors/deepOrange'\n\nimport MenuList from '@material-ui/core/MenuList'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport './style.css'\nimport Sorter from './Sorter'\n\nconst NETWORK_SIZE_TH = 5000\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 10,\n    color: '#fff',\n    backgroundColor: deepOrange[500]\n  },\n  menuItem: {\n    height: '4em',\n    '&:focus': {\n      backgroundColor: 'rgba(200,205,200,0.5)',\n      '& $primary, & $icon': {\n        color: theme.palette.common.white\n      }\n    }\n  },\n  menuText: {\n    '&:focus': {\n      '& $primary, & $icon': {\n        color: theme.palette.common.white\n      }\n    }\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst CYTOSCAPE_URL = 'http://localhost:2607/status/'\n\nconst checkCytoscapeConnection = props => {\n  fetch(CYTOSCAPE_URL, { mode: 'no-cors' })\n    .catch(e => {\n      throw Error(e)\n    })\n    .then(res => handleErrors(res))\n    .then(running => {\n      props.uiStateActions.setCytoscapeStatus(true)\n    })\n    .catch(error => {\n      props.uiStateActions.setCytoscapeStatus(false)\n    })\n}\n\nconst handleErrors = res => {\n  console.log('Calling!!', res)\n  if (res !== undefined) {\n    return true\n  }\n\n  return false\n}\n\nconst NetworkList = props => {\n  const { classes, hits, sourceUUID } = props\n\n  const geneList = props.search.queryList\n\n  const id = props.search.results.jobId\n\n  const handleFetch = (networkUUID, networkName, nodeCount, edgeCount) => {\n    props.networkActions.setNetworkSize({\n      nodeCount,\n      edgeCount\n    })\n\n    const networkSize = nodeCount + edgeCount\n\n    // Do not load if size is too big to render!\n    if (networkSize > NETWORK_SIZE_TH) {\n      return\n    }\n\n    checkCytoscapeConnection(props)\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList\n    })\n  }\n\n  const getListItem = (networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      percentOverlap,\n      nodes,\n      edges\n    } = networkEntry\n\n    return (\n      <MenuItem\n        className={classes.menuItem}\n        alignItems=\"flex-start\"\n        key={networkUUID}\n        onClick={val => handleFetch(networkUUID, description, nodes, edges)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.networkAvatar}>N</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          className={classes.menuText}\n          primary={description}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {'Nodes: ' + nodes + ', Edges: ' + edges}\n              </Typography>\n              <Typography variant=\"caption\">\n                {'UUID: ' + networkUUID}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.secondary}>\n          <div\n            style={{\n              background: 'lightGreen',\n              color: 'white',\n              height: '2em',\n              width: percentOverlap + '%'\n            }}\n          >\n            <Typography variant=\"h6\">{percentOverlap + '%'}</Typography>\n          </div>\n        </ListItemSecondaryAction>\n      </MenuItem>\n    )\n  }\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <Sorter />\n      <div className=\"network-list\">\n        <MenuList>{hits.map(entry => getListItem(entry, classes))}</MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => (\n  <Split sizes={[50, 50]} gutterSize={7} className=\"ndex-base\">\n    <NetworkList {...props} />\n    <NetworkView {...props} />\n  </Split>\n)\n\nexport default Ndex\n","import React, { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport Ndex from './Ndex'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  const [value, setValue] = useState(0)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const { classes, ...others } = props\n\n  const searchResults = props.search.searchResults\n\n  console.log('Current Result:', searchResults)\n\n  // Display message panel if no result is available\n  if (searchResults === null) {\n    return <Empty />\n  }\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={value} onChange={handleChange}>\n          {getTabs(searchResults.sources)}\n        </Tabs>\n        {getTabContent(value, searchResults.sources, others)}\n      </div>\n    </div>\n  )\n}\n\nconst getTabs = sources => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const tabs = sources.map(source => (\n    <Tab key={source.sourceUUID} label={source.sourceName} />\n  ))\n\n  console.log('TABBS = ', tabs)\n  return tabs\n}\n\nconst getTabContent = (index, sources, props) => {\n  if (sources === null || sources === undefined) {\n    return null\n  }\n\n  const source = sources[index]\n  if (!source) {\n    return null\n  }\n\n  const { results, sourceUUID } = source\n  return <Ndex hits={results} sourceUUID={sourceUUID} {...props} />\n}\n\nexport default withStyles(styles)(Results)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputLabel from '@material-ui/core/InputLabel'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '30vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {\n    }\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n  }\n\n  return (\n    <Paper className={classes.root} elevation={0}>\n      <InputBase\n        id={ORIGINAL_GENE_TEXT}\n        className={classes.input}\n        placeholder=\"Genes entered\"\n        value={props.search.queryGenes}\n        readOnly\n        ref={geneTextRef}\n      />\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Copy\" placement=\"bottom\">\n        <IconButton\n          color=\"default\"\n          className={classes.iconButton}\n          aria-label=\"Directions\"\n          onClick={handleCopy}\n        >\n          <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n        </IconButton>\n      </Tooltip>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport github from '../../assets/images/github.svg'\nimport GeneTextBox from './GeneTextBox'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  logo: {\n    height: '2.5em',\n    marginRight: '0.7em'\n  },\n  headerLogo: {\n    height: '1.4em'\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div>\n            <Typography variant=\"h6\" color=\"inherit\">\n              NDEx Network Search:\n            </Typography>\n            <Typography variant=\"body1\">\n              Pathway Enrichment / Gene Neighborhoods / Keywords\n            </Typography>\n          </div>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"large\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(GITHUB_URL)}\n            >\n              <img\n                alt=\"GitHub logo\"\n                src={github}\n                className={classes.headerLogo}\n              />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://www.cytoscape.org/'\nconst GITHUB_URL = 'https://github.com/idekerlab/cytoscape-cloud-portal'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport InboxIcon from '@material-ui/icons/MoveToInbox'\nimport MailIcon from '@material-ui/icons/Mail'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport HelpIcon from '@material-ui/icons/Help'\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {['This', 'panel is', 'for advanced', 'options'].map(\n            (text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n        <Divider />\n        <List>\n          {['More options', 'Help', '??'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <SettingIcon /> : <HelpIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    // Call search\n\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      console.log('Fetching res')\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    console.log('* Handling back button press')\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  console.log('----------------------- New Home Panel ------------------')\n\n  if (props.search.isFetching) {\n    return <LoadingPanel title=\"Loading Search Results\" />\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <InputPanel className=\"input\" {...props} />\n        <Results className=\"results\" {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const SET_NETWORK_SIZE = 'SET_NETWORK_SIZE'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const setNetworkSize = createAction(SET_NETWORK_SIZE)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\n\nconst MainContainer = props => <HomePanel {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ClearIcon from '@material-ui/icons/Refresh'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst EXAMPLES = ['kras egfr cdk4 tp53', 'per1 per2 clock', 'mtor wnt1 igf1']\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      console.log('** Search route:', jobId, pathParam)\n      props.history.push(`/${jobId}`)\n    }\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx],\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => handleExample(0)}>Gene List 1</MenuItem>\n          <MenuItem onClick={() => handleExample(1)}>Gene List 2</MenuItem>\n          <MenuItem onClick={() => handleExample(2)}>Gene List 3</MenuItem>\n        </Menu>\n      </div>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        value={state.query}\n      />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton\n        color=\"primary\"\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <ClearIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport dna from '../../assets/images/dna.svg'\nimport idea from '../../assets/images/idea.svg'\n\nconst styles = {\n  card: {\n    minWidth: 345,\n    maxWidth: 345,\n    minHeight: 380,\n    marginLeft: '1em'\n  },\n  media: {\n    objectFit: 'cover'\n  }\n}\n\nconst IMAGES = [ndexLogo, cyLogo, dna, idea]\nconst randomImage = () => {\n  const idx = Math.floor(Math.random() * 4)\n  return IMAGES[idx]\n}\n\nconst SourceCard = props => {\n  const { classes, source } = props\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          className={classes.media}\n          height=\"140\"\n          src={randomImage()}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {source.name}\n          </Typography>\n          <Typography gutterBottom variant=\"subheading\">\n            {'(v' + source.version + ')'}\n          </Typography>\n          <Typography component=\"p\">{source.description}</Typography>\n          <Typography variant={'h6'}>{'Status: ' + source.status}</Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions />\n    </Card>\n  )\n}\n\nSourceCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  source: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SourceCard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport disconnected from '../../assets/images/disconnected.svg'\n\nconst styles = {\n  card: {\n    minWidth: 345,\n    maxWidth: 345,\n    padding: '1em'\n  },\n  media: {\n    objectFit: 'fit'\n  }\n}\n\nconst ErrorCard = props => {\n  const { classes } = props\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Error loading source\"\n          className={classes.media}\n          height=\"300\"\n          src={disconnected}\n          title=\"Error loading source\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\" color={'error'}>\n            Failed to access services\n          </Typography>\n          <Typography component=\"p\" color={'error'}>\n            Something is wrong with tne search service. After a few moments,\n            please reload the page and try again.\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          variant={'outlined'}\n          size=\"small\"\n          color=\"primary\"\n          onClick={handleReload}\n        >\n          Reload\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nconst handleReload = () => {\n  window.location.reload(true)\n}\n\nErrorCard.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(ErrorCard)\n","import React from 'react'\nimport './style.css'\nimport SourceCard from './SourceCard'\nimport ErrorCard from './ErrorCard'\n\nconst SourcePanel = props => {\n  if (props.source === undefined || !props.source.sources) {\n    return null\n  }\n\n  const sources = props.source.sources\n\n  if (props.source.error !== null) {\n    return (\n      <div className=\"source-container\">\n        <ErrorCard />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"source-container\">\n      {sources.map(sourceEntry => (\n        <SourceCard key={sourceEntry.uuid} source={sourceEntry} />\n      ))}\n    </div>\n  )\n}\n\nexport default SourcePanel\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\nimport SourcePanel from './SourcePanel'\n\nimport queryString from 'query-string'\n\n\nconst StartPanel = props => {\n  useEffect(() => {\n\n\n    const params = queryString.parse(props.location.search)\n    console.log('**MOUNTED: path params:', params)\n\n    const genes = params.genes\n\n    if(genes !== undefined) {\n      const geneList = genes.split(',')\n      //TODO: call actual API\n      props.searchActions.setQuery(genes)\n      console.log('Got genes.  Start search now!', geneList)\n      props.searchActions.searchStarted({ geneList })\n\n    }\n\n    props.sourceActions.findSourceStarted()\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <SourcePanel {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\n\nconst TopPageContainer = props => <TopPage {...props} />\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: []\n}\n\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      // return { ...state, queryGenes: '', queryList: [], results: null }\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      console.log('Setting selected gene:', payload)\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport { setSettingsOpen, setCytoscapeStatus } from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  isCytoscapeRunning: false\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setCytoscapeStatus]: (state, payload) => {\n      console.log('Cytoscape is running = ', payload.payload)\n      return { ...state, isCytoscapeRunning: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\n\nimport * as vs from '../assets/data/custom-visual-style.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  selectNode,\n  selectEdge,\n  deselectAll,\n  setNetworkSize\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: 0,\n        edgeCount: 0,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        isLayoutComplete: false\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        network: convertCx2cyjs(payload.cx, state.queryGenes),\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        isFetching: false,\n        nodeCount: 0,\n        edgeCount: 0\n      }\n    },\n    [setNetworkSize]: (state, payload) => {\n      return {\n        ...state,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  console.log('query & NICE 　===', queryGenes, niceCX)\n\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: updatedStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name.toUpperCase()\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n\n    if (position !== undefined) {\n      node.position = {\n        x: position.x * LAYOUT_SCALING_FACTOR,\n        y: position.y * LAYOUT_SCALING_FACTOR\n      }\n    }\n  }\n\n  return nodes\n}\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  PRESET_VS.push({\n    selector: \"node[query = 'true']\",\n    css: {\n      'background-color': 'darkorange',\n      'background-opacity': 1.0,\n      'border-width': 0.0,\n      color: '#FFFFFF',\n      width: 80,\n      height: 80\n    }\n  })\n\n  PRESET_VS.push({\n    selector: 'node:selected',\n    css: {\n      'background-color': 'red',\n      width: 100,\n      height: 100\n    }\n  })\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\n\nconst rootReducer = combineReducers({ source, search, uiState, network })\n\nexport default rootReducer\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\nexport const BASE_URL = 'http://secret.ndexbio.org:9080/'\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  console.log('Calling MyGene API:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  console.log('Calling sources:', searchUrl)\n\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = jobId => {\n  const resultUrl = BASE_URL + jobId\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  console.log('Sending query to search service:', queryObject)\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nexport default function* rootSaga() {\n  console.log('rootSaga reporting for duty')\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  console.log('## Search started.', action)\n\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    console.log('* Fetched sources:', sourceNames)\n  }\n\n  const geneListString = geneList.join()\n\n  console.log('## genes and sources:', geneList, sourceNames)\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n\n    const filtered = filterGenes(geneJson)\n\n    console.log('## Filtered genes:', filtered)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\nconst checkStatus = statusJson => {\n  console.log(statusJson.progress, statusJson.sources)\n\n  const { progress } = statusJson\n  if (progress === 100) {\n    return true\n  } else {\n    return false\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  try {\n    let finished = false\n    let statusJson = null\n\n    while (!finished) {\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      statusJson = yield call([statusRes, 'json'])\n      finished = checkStatus(statusJson)\n\n      if (finished) {\n        break\n      } else {\n        yield call(sleep, API_CALL_INTERVAL)\n      }\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n\n    console.log('## Result fetch:', statusJson, resultJson)\n\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    console.log('Action cont----------', action)\n\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: json.results })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import React from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\nsagaMiddleware.run(rootSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}